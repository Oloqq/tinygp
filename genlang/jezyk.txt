# nie rozrozniamy liczb i booleanow, tak jak w C, traktujemy 0 jako false i dowolna inna wartosc jako true

program = block âœ…ðŸ§¬

block = stat* âœ…

stat
    = LOAD reg expr âœ…ðŸ§¬
    | IF expr block END âœ…ðŸ§¬
    | IF expr block ELSE block END âœ…ðŸ§¬
    | WHILE expr DO block END âœ…
    | INPUT reg âœ…ðŸ§¬
    | OUTPUT expr âœ…ðŸ§¬

# kolejnosc nie ma znaczenia, priorytet jest jasny bo nie ma infixow
expr
    = ADD expr expr âœ…ðŸ§¬
    | SUB expr expr âœ…ðŸ§¬
    | MUL expr expr âœ…ðŸ§¬
    | DIV expr expr âœ…ðŸ§¬
    | EQ expr expr âœ…ðŸ§¬
    | LT expr expr âœ…ðŸ§¬
    | GT expr expr âœ…ðŸ§¬
    | OR expr expr âœ…ðŸ§¬
    | AND expr expr âœ…ðŸ§¬
    | NOT expr âœ…
    | reg âœ…ðŸ§¬
    | NUM âœ…ðŸ§¬

# reg to register/rejestr/zmienna
reg = R NUM âœ…ðŸ§¬
