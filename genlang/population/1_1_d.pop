((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . 12) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . LT) (Expr Num . -13) (Expr Num . 56) (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 44) (Expr Num . 16) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . LOAD) (Reg . 0) (Expr Num . -3) END (Stat . LOAD) (Reg . 2) (Expr Num . 69) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr Num . 94) (Stat . OUTPUT) (Expr Num . -11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . 79) (Expr Num . -92) (Stat . LOAD) (Reg . 2) (Expr Num . 91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 92) (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . 50) (Stat . IF) (Expr Num . 88) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Expr Num . -73) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 28) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 22) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . OUTPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -48) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 76) (Stat . IF) (Expr Num . 75) (Stat . OUTPUT) (Expr Num . 93) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 69) (Stat . OUTPUT) (Expr Num . 49) END (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 20) (Stat . OUTPUT) (Expr . DIV) (Expr Num . -7) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -15) (Stat . INPUT) (Reg . 1) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr . MUL) (Expr Num . 81) (Expr Num . -56) (Stat . LOAD) (Reg . 2) (Expr Num . -15) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 1) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -41) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 85) (Expr Num . -48) (Stat . LOAD) (Reg . 1) (Expr Num . 22) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 56) (Stat . LOAD) (Reg . 0) (Expr Num . -99) END (Stat . OUTPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -56) (Stat . OUTPUT) (Expr Num . -7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -62) (Stat . LOAD) (Reg . 1) (Expr Num . -63) END (Stat . IF) (Expr Num . -68) (Stat . IF) (Expr Num . -93) (Stat . LOAD) (Reg . 2) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . -97) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . AND) (Expr Num . -77) (Expr Num . 31) (Stat . LOAD) (Reg . 0) (Expr Num . -42) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 1) (Expr . GT) (Expr Num . -79) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 10) (Stat . IF) (Expr . OR) (Expr Num . 37) (Expr Num . 57) (Stat . OUTPUT) (Expr . AND) (Reg . 1) (Expr Num . 31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Expr . AND) (Expr Num . 63) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 86) (Stat . OUTPUT) (Reg . 1) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 75) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 24) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -10) (Stat . LOAD) (Reg . 0) (Expr Num . -72) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -14) (Stat . LOAD) (Reg . 1) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -20) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . -20) (Stat . OUTPUT) (Expr . MUL) (Expr Num . -41) (Expr . NOT) (Expr . MUL) (Expr Num . 66) (Expr . MUL) (Expr Num . 39) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . DIV) (Expr Num . -1) (Expr Num . -95) END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 89) (Stat . OUTPUT) (Expr Num . 38) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -93) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 36) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 12) (Stat . OUTPUT) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Expr . AND) (Reg . 1) (Expr Num . -11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 1) (Expr Num . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Expr Num . -96) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 1) (Expr Num . -30) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -1) (Reg . 1) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . ADD) (Expr Num . -70) (Expr Num . 78) (Stat . LOAD) (Reg . 1) (Expr Num . -72) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -31) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Expr Num . 84) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -56) (Stat . OUTPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -66) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . 20) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . MUL) (Expr Num . 78) (Expr Num . -30) (Expr Num . -36) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr Num . 96) (Expr Num . -95) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . 69) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -2) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 82) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -34) (Stat . LOAD) (Reg . 2) (Expr . LT) (Reg . 1) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . -93) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . NOT) (Reg . 1) (Stat . OUTPUT) (Expr Num . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . 15) (Expr . GT) (Expr Num . 23) (Expr Num . 78) (Stat . IF) (Expr Num . -24) (Stat . LOAD) (Reg . 2) (Expr Num . -98) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . -98) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . AND) (Expr Num . -16) (Expr . NOT) (Expr Num . 39) (Stat . OUTPUT) (Expr Num . 74) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Expr Num . 7) (Stat . LOAD) (Reg . 2) (Expr Num . 94) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -15) (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 45) (Stat . OUTPUT) (Expr Num . -49) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Expr . OR) (Expr Num . -85) (Expr . LT) (Expr . MUL) (Reg . 1) (Expr Num . 68) (Expr Num . -24) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . 39) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . -51) (Stat . OUTPUT) (Expr . OR) (Expr Num . 39) (Expr Num . 53) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 69) (Stat . LOAD) (Reg . 1) (Expr Num . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 19) (Stat . OUTPUT) (Expr Num . 66) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 80) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -58) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -6) (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -43) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 1) (Stat . IF) (Expr Num . 70) (Stat . OUTPUT) (Expr . LT) (Expr Num . -48) (Expr Num . -20) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 2) (Expr Num . 37) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Expr Num . 91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . MUL) (Reg . 0) (Expr Num . -71) (Stat . LOAD) (Reg . 2) (Expr Num . -88) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . 30) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -54) (Stat . OUTPUT) (Reg . 0))
