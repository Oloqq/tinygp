((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 7) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 3) (Reg . 0) END END END (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . 6) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -67) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 80) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 27) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -42) (Stat . LOAD) (Reg . 0) (Expr Num . -79) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 1) (Expr Num . -2) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 7) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 4) END (Stat . LOAD) (Reg . 3) (Expr Num . -48) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 28) ELSE (Stat . INPUT) (Reg . 4) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 1) (Reg . 7) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -37) (Stat . IF) (Expr . SUB) (Expr . SUB) (Expr Num . 95) (Expr Num . -20) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 1) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 11) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr . LT) (Expr Num . 68) (Reg . 2) (Expr . AND) (Expr . GT) (Expr Num . -15) (Expr . NOT) (Expr Num . 77) (Reg . 0) (Stat . OUTPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 38) (Reg . 14) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -50) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 0) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 4) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 34) END)
((Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 9) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 71) END)
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 7) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) END END (Stat . LOAD) (Reg . 4) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . LOAD) (Reg . 0) (Expr Num . 85) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -70) (Stat . OUTPUT) (Expr Num . 87) END (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . GT) (Expr Num . 46) (Expr Num . -12) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr . AND) (Expr Num . 68) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 76) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -61) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr Num . -48) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -20) (Expr Num . -91) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 11) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . -48) (Stat . OUTPUT) (Expr Num . -24) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . -88) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -61) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . LOAD) (Reg . 11) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -70) (Expr Num . -30) (Stat . LOAD) (Reg . 0) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 12) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 71) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . LOAD) (Reg . 5) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -67) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . LOAD) (Reg . 5) (Expr Num . 87) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . ADD) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 7) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 9) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -24) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . -18) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 1) (Reg . 7) (Stat . OUTPUT) (Expr Num . -28))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -25) END (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 7) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -13) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -67) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Expr Num . -48) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 10) (Expr Num . 46) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . 46) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 3) (Expr Num . 2) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 7) (Reg . 2) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . 52) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 58) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 9) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -37) END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -24) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 34) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -33) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . LOAD) (Reg . 14) (Expr Num . -77))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 11) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 7) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Reg . 2) (Stat . LOAD) (Reg . 5) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . LOAD) (Reg . 5) (Expr Num . 60) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 54) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 7) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -42) (Expr Num . 2) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 7) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 11) (Expr Num . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END END (Stat . IF) (Expr Num . -19) (Stat . LOAD) (Reg . 0) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -7) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . ADD) (Expr Num . 9) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 9) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -24) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 3) (Expr . LT) (Expr Num . 60) (Reg . 12) END (Stat . LOAD) (Reg . 11) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 76) END (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . LOAD) (Reg . 5) (Expr Num . 60) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 54) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -42) (Expr Num . 2) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 7) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -8) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -88) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 0) (Expr Num . -77) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 1) (Expr Num . -2) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -5) (Stat . LOAD) (Reg . 11) (Expr Num . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -48) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 10) (Expr Num . 46) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 6))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -37) END (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . 38) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 6) END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . -95) (Stat . IF) (Expr . OR) (Reg . 2) (Expr Num . -93) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -25) (Stat . IF) (Expr Num . 28) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -61) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -7) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 60) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -61) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr Num . 76) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -37) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . -18) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr Num . -79) END (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 4) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 7) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 10))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 9) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr . SUB) (Expr . SUB) (Expr Num . 95) (Expr Num . -20) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 58) (Stat . OUTPUT) (Expr Num . 48) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 9) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 34) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -28) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 10) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 0) (Expr Num . -28) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 10) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 38) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 7) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 9) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 28) (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . LOAD) (Reg . 13) (Expr Num . 48) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr Num . -48) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 0) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . LOAD) (Reg . 0) (Expr Num . -13) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 1) (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -7) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -42) (Expr Num . 2) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . INPUT) (Reg . 5))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 11) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . -50) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . DIV) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr . SUB) (Expr . SUB) (Expr Num . 95) (Expr Num . -20) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . -31) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 1) (Expr Num . -2) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 19) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -67) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . -3) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . LOAD) (Reg . 0) (Expr Num . -33) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -42) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 31) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -62) (Stat . IF) (Expr Num . 28) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . ADD) (Reg . 2) (Expr Num . -31) (Stat . LOAD) (Reg . 10) (Reg . 1) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 53) (Expr . AND) (Expr Num . -17) (Expr Num . -85) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 13) (Expr Num . 65) END END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -18) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 4) (Expr Num . 3) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 68) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . LOAD) (Reg . 0) (Expr Num . 85) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Expr Num . -37))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -91) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 4) (Expr Num . -31) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 83) END END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . LOAD) (Reg . 13) (Expr Num . 48) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -70) (Stat . OUTPUT) (Expr Num . 87) END (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . GT) (Expr Num . 46) (Expr Num . -12) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 6) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 0) (Expr Num . -77) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 6) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -95))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr Num . 60) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -43) (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -15) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END END END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 6))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . 68) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . 87) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . ADD) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 0) (Expr Num . -13) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 1) (Expr Num . -95))
((Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr . NOT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr Num . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -42) (Expr Num . 2) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 6) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -13) (Stat . IF) (Expr . SUB) (Expr . SUB) (Expr Num . -43) (Expr Num . -20) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 9) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 71) END)
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 4) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr . MUL) (Expr . LT) (Expr Num . -2) (Reg . 0) (Expr Num . 70) (Expr Num . 36) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 0) (Expr Num . -77) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 91) (Stat . OUTPUT) (Expr Num . 87) END (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . GT) (Reg . 2) (Expr Num . -12) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . -18) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -70) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . 52) (Expr Num . -89) (Stat . IF) (Expr Num . 99) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . -95) (Expr . DIV) (Expr Num . -30) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -42) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -96) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 0) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -5) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -32) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 3) (Expr Num . -48) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr . MUL) (Expr . LT) (Expr Num . -2) (Reg . 7) (Expr Num . 70) (Expr Num . 54) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 1) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . LOAD) (Reg . 4) (Expr Num . 91) (Stat . LOAD) (Reg . 13) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 4) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr . SUB) (Expr . SUB) (Expr Num . 95) (Expr Num . -20) (Reg . 6) END (Stat . LOAD) (Reg . 14) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 53) (Stat . LOAD) (Reg . 1) (Expr Num . -2))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 7) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -42) (Expr Num . 2) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 7) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 10) (Expr Num . 46) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 18) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END)
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . LOAD) (Reg . 5) (Reg . 10) END (Stat . IF) (Expr Num . 56) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -67) (Stat . LOAD) (Reg . 0) (Expr Num . 7) END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr Num . -43) (Expr Num . 54) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 8) (Expr Num . -28) (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Expr . OR) (Expr . NOT) (Expr . DIV) (Reg . 4) (Expr Num . 91) (Reg . 1) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 9) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 71) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . 48) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) END)
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 4) (Expr Num . -31) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr Num . 34) (Expr Num . 71) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . IF) (Expr Num . 43) (Stat . LOAD) (Reg . 7) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . GT) (Reg . 14) (Expr Num . 20) (Expr Num . -86) END (Stat . OUTPUT) (Expr Num . 49))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 18) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 10) (Expr Num . 46) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 7) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 93) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 7) (Expr . AND) (Reg . 1) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -48) END (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -24) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -19) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr . SUB) (Expr . SUB) (Expr Num . 95) (Expr Num . -20) (Reg . 6) END (Stat . LOAD) (Reg . 14) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 0) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -18) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 7) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr . MUL) (Expr . LT) (Expr Num . -2) (Reg . 0) (Expr Num . 70) (Expr Num . 36) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . LOAD) (Reg . 0) (Expr Num . -7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 9) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 71) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 5) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -13) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr . SUB) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -37) (Stat . IF) (Expr . SUB) (Expr Num . -48) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . 83) (Stat . IF) (Expr . OR) (Reg . 2) (Expr Num . -93) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -25) (Stat . IF) (Expr Num . 28) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 0) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 34) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . 46) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -13) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 4) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Expr Num . -37))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 7) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 8) (Expr Num . -28) (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 59) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 6) (Stat . IF) (Expr Num . 43) (Stat . LOAD) (Reg . 7) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . GT) (Reg . 14) (Expr Num . 20) (Expr Num . -86) END (Stat . OUTPUT) (Expr Num . 49))
((Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -37) END (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 10) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 76) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -37) END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 7) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . 68) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . 60) (Reg . 7) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 58) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 48) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -37) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -1) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 0) (Expr Num . -28) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr Num . -8) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Reg . 8) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 0) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -48) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 10) (Expr Num . 46) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr . OR) (Expr Num . -25) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -13) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . -88) ELSE (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . -88) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 10) (Expr Num . 62) END)
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 9) (Expr Num . 54) END END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 0) (Expr Num . -13) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr Num . 39) (Stat . OUTPUT) (Expr . EQ) (Reg . 9) (Expr Num . -73) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . ADD) (Expr Num . 9) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . 35) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 0) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . OR) (Expr Num . -25) (Expr Num . -91) END END END)
((Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 5) (Reg . 7) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . 30) (Stat . IF) (Expr . AND) (Expr Num . 91) (Reg . 10) (Stat . INPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 9) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 2) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 2) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 7) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 58) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -50) END ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . LOAD) (Reg . 0) (Expr Num . 85) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Expr Num . -37))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr Num . -79) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Expr Num . 83) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 18) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr Num . -48) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -37) (Stat . IF) (Expr Num . 55) (Stat . LOAD) (Reg . 13) (Expr Num . 48) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 7) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr . SUB) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 14) END (Stat . LOAD) (Reg . 10) (Expr Num . -67) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . LOAD) (Reg . 7) (Reg . 7) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -32) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -24) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -79) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 60) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . 30) (Stat . IF) (Expr . AND) (Expr Num . 91) (Reg . 10) (Stat . INPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 74) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 53) (Expr . AND) (Expr . GT) (Expr Num . -15) (Expr . NOT) (Expr Num . 77) (Reg . 0) (Stat . OUTPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 2) (Reg . 9))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -50) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 58) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 10) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . -88) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Expr Num . -24))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . 68) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 0) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -7) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -15) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -31) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 81) (Reg . 8) END END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -92) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 0) (Reg . 3) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . LOAD) (Reg . 5) (Reg . 10) END (Stat . IF) (Expr Num . 56) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -67) (Stat . LOAD) (Reg . 0) (Expr Num . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . OUTPUT) (Expr Num . 83))
((Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Expr Num . -37) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -79) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 31) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -48) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 3) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . 45) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 1) (Reg . 7) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 46) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . 52) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 58) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -50) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -68) (Stat . LOAD) (Reg . 0) (Expr Num . 71) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr . MUL) (Expr . LT) (Reg . 10) (Reg . 0) (Expr Num . 70) (Expr Num . 36) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 44) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 58) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 1) (Expr Num . -2) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 12) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -32) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . IF) (Expr . GT) (Expr Num . 46) (Expr Num . -12) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 1) END END)
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . ADD) (Expr Num . 9) (Reg . 3) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -83) END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr Num . 79) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 9) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . -42) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -42) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 0) (Expr Num . -28) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . ADD) (Reg . 14) (Expr Num . 2) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr . SUB) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . NOT) (Reg . 3) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . LOAD) (Reg . 0) (Expr Num . -7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END)
((Stat . LOAD) (Reg . 13) (Expr Num . 48) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -50) (Stat . IF) (Expr . MUL) (Expr Num . 58) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 0) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 4) (Expr Num . -31) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . INPUT) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -15) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 9) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . LOAD) (Reg . 5) (Expr Num . 60) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 54) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -31) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 11) (Expr Num . 60))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 9) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -28) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 10) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -1) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . -2) (Expr Num . -89) (Stat . IF) (Expr Num . 99) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . 60) (Reg . 7) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 58) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 48) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . -37) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END END (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 9) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 3) (Expr Num . -48) END (Stat . LOAD) (Reg . 11) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 11) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . LOAD) (Reg . 0) (Expr Num . -33) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -48) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr . AND) (Reg . 1) (Reg . 2) (Expr . AND) (Expr . OR) (Expr Num . -15) (Expr . NOT) (Expr Num . 77) (Reg . 0) (Stat . OUTPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr . AND) (Expr Num . 68) (Reg . 2) (Expr . AND) (Expr . GT) (Expr Num . -15) (Expr . NOT) (Expr Num . 77) (Reg . 0) (Stat . OUTPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -28) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 10) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 3) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 8) (Expr Num . -28) (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Expr Num . 79) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . -95) (Expr . DIV) (Expr Num . -96) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr . OR) (Expr Num . -25) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 9) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 34) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . ADD) (Expr Num . 9) (Reg . 3) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -13) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 6))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 0) (Reg . 0) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr Num . -99) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 71) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr . MUL) (Expr . LT) (Expr Num . -2) (Reg . 0) (Expr Num . 70) (Expr Num . 36) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -25) (Stat . IF) (Expr Num . 28) (Stat . INPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 10) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr Num . -32) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 83) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 3) (Expr Num . -48) END (Stat . LOAD) (Reg . 11) (Reg . 2))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -13) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . LOAD) (Reg . 0) (Expr Num . -7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 7) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 7) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -1) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END)
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 10) (Expr Num . 46) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 58) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -13) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 4) (Reg . 0) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -33) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . LOAD) (Reg . 14) (Expr Num . -77))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr . SUB) (Expr . SUB) (Expr Num . 95) (Expr Num . -20) (Reg . 6) END (Stat . LOAD) (Reg . 14) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 4) END (Stat . LOAD) (Reg . 3) (Expr Num . -48) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . -67) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 28) ELSE (Stat . INPUT) (Reg . 4) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . LOAD) (Reg . 0) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -92) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 0) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 1) (Stat . LOAD) (Reg . 8) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr Num . -43) (Expr Num . 54) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 22) (Expr . AND) (Expr . GT) (Expr Num . -15) (Expr . NOT) (Expr Num . 77) (Reg . 0) (Stat . OUTPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 81) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -42) (Expr Num . 2) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 7) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . -70) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 1) (Reg . 7) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 7) (Stat . OUTPUT) (Expr Num . -28))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -96) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr Num . -8) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Reg . 9) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 10) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 7) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Expr Num . 83) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 3) (Expr Num . -48) END (Stat . LOAD) (Reg . 11) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 38) (Reg . 14) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END (Stat . LOAD) (Reg . 0) (Reg . 1) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 14) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 0) (Reg . 12) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 95) (Reg . 14) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -37) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -70) (Expr Num . -30) (Stat . LOAD) (Reg . 0) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 3) (Expr Num . -31) ELSE (Stat . IF) (Expr Num . -32) (Stat . IF) (Expr . AND) (Expr . AND) (Reg . 1) (Reg . 2) (Expr . AND) (Expr . OR) (Expr Num . -15) (Expr . NOT) (Expr Num . 77) (Reg . 0) (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 28) ELSE (Stat . INPUT) (Reg . 4) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 9) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 58) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 4) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 10) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -79) (Stat . LOAD) (Reg . 4) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . INPUT) (Reg . 2))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 6) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -13) (Stat . IF) (Expr . SUB) (Expr . SUB) (Expr Num . -43) (Expr Num . -20) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 6))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 76) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . 87) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -67) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . ADD) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -7) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -92) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 4) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 8) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . LOAD) (Reg . 0) (Expr Num . -33) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . 68) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -45) (Expr Num . -30) (Stat . LOAD) (Reg . 3) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 8) (Expr Num . -28) (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 7) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Expr Num . -7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -2) (Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 28) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -28) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 10) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 3) (Expr Num . -31) ELSE (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 28) ELSE (Stat . INPUT) (Reg . 4) END END)
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 9) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 71) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . 70) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -45) (Expr Num . -30) (Stat . LOAD) (Reg . 3) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . LOAD) (Reg . 0) (Expr Num . 85) (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -7) END (Stat . LOAD) (Reg . 0) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) END END (Stat . LOAD) (Reg . 4) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -92) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 0) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 76) END (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -7) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . 52) (Expr Num . -89) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 58) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -70) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . 23) (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . LOAD) (Reg . 0) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -70) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 59) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 36) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -7) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . -88) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -95) (Expr Num . -42) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 99) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 6) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 4) (Expr Num . -31) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Expr Num . -43) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 4) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr . LT) (Expr Num . -61) (Reg . 12) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . LOAD) (Reg . 9) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr Num . -48) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -92) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 4) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 43) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Expr Num . -48) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 11) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . LOAD) (Reg . 0) (Expr Num . 48) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 7) (Reg . 4) END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 0) (Expr Num . -13) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . -7) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . -95) (Stat . IF) (Expr . OR) (Reg . 2) (Expr Num . -93) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -25) (Stat . IF) (Expr Num . 28) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 6))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . -48) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 95) (Reg . 14) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 3) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -13) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . 68) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . LT) (Expr Num . 48) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -31) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 81) (Reg . 8) END END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . IF) (Expr Num . -32) (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -15) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 4) (Expr Num . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 0) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 9) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -25) (Stat . IF) (Expr Num . 28) (Stat . INPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . 38) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -48) END (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 31) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -19) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Expr Num . 35) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 14) (Expr Num . 53) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Expr Num . 28) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 6))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr Num . -24) (Expr Num . 36) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . -18) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . OUTPUT) (Expr Num . 71) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 4) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 3) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 76) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . LOAD) (Reg . 12) (Reg . 11) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . 48) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 5) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . 38) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . -37) (Expr Num . -89) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 58) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 3) (Expr Num . -48) END (Stat . LOAD) (Reg . 11) (Reg . 2))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END END END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . 30) (Stat . IF) (Expr . AND) (Expr Num . 91) (Reg . 10) (Stat . INPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . LOAD) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 4) END (Stat . LOAD) (Reg . 3) (Expr Num . -48) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 28) ELSE (Stat . INPUT) (Reg . 4) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -62) (Stat . IF) (Expr Num . 28) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . ADD) (Reg . 2) (Expr Num . -31) (Stat . LOAD) (Reg . 10) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 99) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 13) (Expr Num . 65) END END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . ADD) (Expr Num . 9) (Reg . 3) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 5) (Expr Num . -79) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -83) END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 12) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -32) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 68) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 91) (Stat . OUTPUT) (Expr Num . 87) END (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . GT) (Reg . 2) (Expr Num . -12) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 4))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -7) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr Num . -99) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -33) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -37) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr Num . 34) (Expr Num . 71) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . IF) (Expr Num . 43) (Stat . LOAD) (Reg . 7) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . GT) (Reg . 14) (Expr Num . 20) (Expr Num . -86) END (Stat . OUTPUT) (Expr Num . 49))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr Num . 60) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 54) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -19) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 5) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 4) (Stat . LOAD) (Reg . 8) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -25) (Stat . IF) (Expr Num . 28) (Stat . INPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -70) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Reg . 14) (Expr Num . 2) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -48) END END END (Stat . LOAD) (Reg . 0) (Expr Num . 53) (Stat . LOAD) (Reg . 1) (Expr Num . -2))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . -100) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 4) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -42) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 71) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 0) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -37) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -31) (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -50) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 3) (Expr Num . -31) ELSE (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -62) (Stat . IF) (Expr Num . 28) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . ADD) (Reg . 2) (Expr Num . -31) (Stat . LOAD) (Reg . 10) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 99) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 13) (Expr Num . 65) END END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr Num . -48) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -20) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -96) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -37) (Stat . IF) (Expr . SUB) (Expr Num . -48) (Reg . 6) (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 7) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . 6) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 10) (Expr Num . 48) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 59) (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -5) END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr Num . -30) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr Num . 60) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 54) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 0) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . LOAD) (Reg . 5) (Expr Num . 60) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 54) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 12) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -32) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -33) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . ADD) (Reg . 9) (Expr Num . 62) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -50) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 28) ELSE (Stat . INPUT) (Reg . 4) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 0) (Expr Num . 54) END (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 48) (Reg . 10) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . LOAD) (Reg . 0) (Expr Num . -18) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 8) (Expr Num . -28) (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -13) (Stat . IF) (Expr . SUB) (Expr . SUB) (Expr Num . 55) (Expr Num . -20) (Reg . 6) (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -32) (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -48) END (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 3) (Expr Num . -31) ELSE (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -7) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . 30) (Stat . IF) (Expr . AND) (Expr Num . 91) (Reg . 10) (Stat . INPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . GT) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 14) END (Stat . LOAD) (Reg . 10) (Expr Num . -67) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -96) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END)
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . LOAD) (Reg . 9) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 3) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . 24) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 0) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 7) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 60) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr Num . 79) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 9))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -37) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . OUTPUT) (Expr Num . 83))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -2) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 58) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . LOAD) (Reg . 5) (Reg . 10) END (Stat . IF) (Expr Num . 56) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -67) (Stat . LOAD) (Reg . 0) (Expr Num . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . 31) (Stat . LOAD) (Reg . 1) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 48) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 37) END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -67) END (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 11) (Expr . MUL) (Expr Num . -90) (Expr Num . 34) END)
((Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . 52) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 58) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -50) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr . SUB) (Expr . AND) (Expr Num . 97) (Reg . 10) (Expr Num . 85) (Expr . LT) (Expr Num . 52) (Expr Num . -89) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 58) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -50) (Stat . LOAD) (Reg . 4) (Expr Num . 91) (Stat . LOAD) (Reg . 13) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Expr Num . 60))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 48) (Reg . 5) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 48) (Reg . 5) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 11) (Expr Num . 62) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 0) (Reg . 12) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -19) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . LOAD) (Reg . 13) (Expr Num . 48) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -8) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 9) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 86) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 6) (Reg . 2) (Expr Num . 17) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr Num . -48) END ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 7) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -5) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 10) (Expr Num . 46) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 31) (Stat . LOAD) (Reg . 1) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Expr Num . 92) (Stat . LOAD) (Reg . 0) (Expr Num . -13) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 54) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Expr Num . -7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 1) (Reg . 7) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 7) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -61) (Stat . IF) (Expr Num . 82) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . INPUT) (Reg . 11) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . 38) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . LOAD) (Reg . 0) (Expr Num . 85) (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 0) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 76) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END (Stat . LOAD) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -33) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END END (Stat . LOAD) (Reg . 7) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -68) (Stat . LOAD) (Reg . 0) (Expr Num . 71) END (Stat . LOAD) (Reg . 3) (Expr . AND) (Expr . MUL) (Expr . LT) (Reg . 10) (Reg . 0) (Expr Num . 70) (Expr Num . 36) (Stat . OUTPUT) (Expr Num . -70))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . -27) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 38) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -25) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -100) END END END END (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 58) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 5))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 13))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . -37) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 76) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -48) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Expr . LT) (Expr Num . 46) (Reg . 4) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 3))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -24) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . LOAD) (Reg . 0) (Expr Num . 85) (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -7) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -7) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 10))
((Stat . IF) (Expr . SUB) (Expr . SUB) (Expr Num . 95) (Expr Num . -20) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . LOAD) (Reg . 10) (Expr Num . -67) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . IF) (Expr Num . 92) (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 0) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -37) END END END)
((Stat . LOAD) (Reg . 1) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . ADD) (Expr Num . -18) (Expr . LT) (Expr . MUL) (Expr . LT) (Expr Num . -2) (Reg . 7) (Expr Num . 70) (Expr Num . -89) (Stat . IF) (Expr Num . 99) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -70) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -43) (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr Num . -2) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . 3) (Expr . MUL) (Reg . 4) (Reg . 12) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -48) END (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 31) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 4) (Expr Num . -31) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 48) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 37) END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . -32) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -67) END (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 11) (Expr . MUL) (Expr Num . -90) (Expr Num . 34) END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 1) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) (Stat . LOAD) (Reg . 3) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 71) (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 1) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . LOAD) (Reg . 0) (Expr Num . 45) (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Expr Num . -70) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 48) (Reg . 5) END (Stat . LOAD) (Reg . 11) (Reg . 1))
((Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 44) (Stat . OUTPUT) (Expr Num . -32))
((Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . LOAD) (Reg . 0) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 9) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 3) (Expr Num . -48) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -42) (Expr Num . 2) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 7) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -2) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -10) (Stat . LOAD) (Reg . 1) (Expr Num . 18) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -92) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 0) (Reg . 3) END END END (Stat . LOAD) (Reg . 2) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . -88) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Expr Num . -24))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 8) (Expr Num . 54) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 60) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -72) (Stat . LOAD) (Reg . 1) (Reg . 7) ELSE (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Expr Num . -24) END END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -13) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . -25) (Expr Num . -91) (Stat . LOAD) (Reg . 0) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -95) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 7) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 22) (Expr . AND) (Expr . GT) (Expr Num . -15) (Expr . NOT) (Expr Num . 77) (Reg . 0) (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -49) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . -70) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . -50) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 7) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . 6) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 6) (Stat . LOAD) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . LOAD) (Reg . 2) (Reg . 9) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr . SUB) (Expr Num . 3) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -43) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 83) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 22) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Reg . 14) (Expr Num . 2) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -48) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 11) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 1) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr Num . -37) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -95) END (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 11) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -31) END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -67) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Expr Num . 68) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 5) (Expr . OR) (Expr Num . 58) (Expr Num . -91) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 78) (Expr . DIV) (Expr Num . -96) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -67) END (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -18) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Expr Num . -5) (Expr Num . -30) (Stat . LOAD) (Reg . 11) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
