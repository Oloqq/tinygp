((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . OR) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 66) (Stat . LOAD) (Reg . 2) (Reg . 11) ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 14) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -20) END ELSE (Stat . LOAD) (Reg . 9) (Expr . OR) (Expr Num . 40) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -80) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 8) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -58) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END END END END (Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 31) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 9))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 3) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -37) (Reg . 7) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -1) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 2) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 0) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 2) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr . LT) (Expr Num . 60) (Reg . 12) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . LT) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 68) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 1) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . LOAD) (Reg . 13) (Expr Num . -73) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . -58) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . 64) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 1) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . INPUT) (Reg . 2))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 7) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . -37) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . 23) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . GT) (Reg . 5) (Reg . 6) (Expr . EQ) (Reg . 6) (Expr Num . 62) END END)
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr . LT) (Expr Num . 60) (Reg . 12) (Reg . 7) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . LT) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 1) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 13) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . 95) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Reg . 7) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr Num . 1) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . OUTPUT) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 55) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . OR) (Reg . 2) (Reg . 1) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Reg . 7) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 7) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Expr Num . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 64) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr . GT) (Expr Num . 52) (Expr . AND) (Reg . 3) (Reg . 2) ELSE (Stat . IF) (Expr Num . 79) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . 23) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . GT) (Reg . 5) (Reg . 2) (Expr . EQ) (Reg . 6) (Expr Num . 41) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . -44) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . GT) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 47) END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 0) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -19) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 9) (Expr Num . -86) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 34) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 47) END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -44) (Stat . OUTPUT) (Reg . 5))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 12) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 2))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 7) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . -37) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 56) (Expr . DIV) (Expr Num . 46) (Reg . 6) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . GT) (Expr Num . 72) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 64))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 56) (Expr . DIV) (Expr Num . 46) (Reg . 6) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr Num . 93) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . OUTPUT) (Expr Num . -72) END END ELSE (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -69) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -48) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -30) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . -58) END END END END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 5) (Expr Num . -4) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 12) (Expr . SUB) (Expr Num . -73) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 7) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 45) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -44) (Reg . 10) END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 10) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 8) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -19) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 14) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Expr Num . -86) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 73) (Expr Num . -24) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . OUTPUT) (Expr Num . -34) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -21) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . OUTPUT) (Expr Num . 61) END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 11) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 22) END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -17) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 9) (Expr Num . -4) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END END (Stat . OUTPUT) (Reg . 1))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . IF) (Expr Num . -37) (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 0) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . -68) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . -36) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -49) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . EQ) (Expr Num . 53) (Expr Num . -43) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . LOAD) (Reg . 1) (Expr Num . -53) (Stat . OUTPUT) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Expr . ADD) (Expr . OR) (Expr Num . 6) (Expr Num . 37) (Expr Num . -20) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -1) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 7) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . OUTPUT) (Expr Num . -19) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 8))
((Stat . OUTPUT) (Expr Num . 23) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 81) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr . DIV) (Expr Num . 14) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Expr . EQ) (Expr Num . -19) (Expr Num . -77) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . LOAD) (Reg . 5) (Expr Num . 41) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr Num . 24) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . LOAD) (Reg . 0) (Expr Num . 81) (Stat . LOAD) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END)
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END)
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 5) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr Num . 62) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . -44) (Reg . 10) (Expr Num . 55) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . OUTPUT) (Expr Num . 3))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr Num . -38) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr . OR) (Expr Num . 48) (Expr Num . -78) (Expr . OR) (Expr Num . -68) (Reg . 0) (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 6) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 12) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -27) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -25) (Expr Num . -75) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 14) (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr Num . 41) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -1) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 7) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . NOT) (Reg . 0) (Expr Num . -20) (Stat . LOAD) (Reg . 13) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -6) (Expr . SUB) (Reg . 6) (Expr Num . 58) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 3))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -44) (Stat . OUTPUT) (Reg . 5))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 12) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -77) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . -58) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 56) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -95) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . -11) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 22) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . 53) (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . 66) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Expr Num . -48) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Expr Num . -55) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END END (Stat . OUTPUT) (Expr Num . -18) (Stat . OUTPUT) (Reg . 14))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -77) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 9) (Expr Num . 31) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 23) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 1) (Expr . ADD) (Reg . 13) (Expr . NOT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 5))
((Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -68) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . -77) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 93) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . LOAD) (Reg . 8) (Expr Num . -86))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr Num . 73) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . 53) (Expr Num . 64) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 6) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 1) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 13) (Expr . AND) (Reg . 5) (Expr . GT) (Expr Num . 15) (Reg . 1) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 3) (Reg . 3))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . 41) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -20) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 62) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 3) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -25) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 14) END END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -48) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . -80) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . -44) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -5) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . 79) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . OUTPUT) (Expr Num . -19) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . LOAD) (Reg . 3) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 53) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . INPUT) (Reg . 10))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -77) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr Num . 37) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 10) (Expr Num . -34) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr . DIV) (Expr Num . 14) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . EQ) (Expr . NOT) (Expr Num . 32) (Expr Num . -77) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Expr . DIV) (Expr Num . 55) (Reg . 10) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 14) END END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -19) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr Num . 41) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -1) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 7) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . NOT) (Reg . 0) (Expr Num . -20) (Stat . OUTPUT) (Expr Num . 20) ELSE (Stat . OUTPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -6) (Expr . SUB) (Reg . 6) (Expr Num . 58) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 18) ELSE (Stat . IF) (Expr Num . 16) (Stat . LOAD) (Reg . 6) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . AND) (Reg . 5) (Expr Num . -20) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -32) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr . OR) (Expr Num . -63) (Expr Num . -22) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -21) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . OUTPUT) (Expr Num . 61) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 12) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 6) END END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -9) (Expr Num . 56) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . -48) END END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -19) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 56) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 13) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . 41) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 13))
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) END (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 12) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . OUTPUT) (Expr Num . -36) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -20) END END END ELSE (Stat . IF) (Expr Num . -49) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 3) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -37) (Stat . LOAD) (Reg . 8) (Expr . SUB) (Reg . 1) (Expr Num . -4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -61) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr Num . -17) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -19) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -11) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -68) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -44) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr Num . 54) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -36) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . LT) (Reg . 0) (Expr Num . -56) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr . LT) (Expr Num . 60) (Reg . 12) (Reg . 7) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . LT) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 1) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 9) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 10) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr Num . 62) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -88) (Expr Num . -85) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Reg . 14) (Expr Num . -18) END END END END END ELSE (Stat . OUTPUT) (Reg . 5) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -11) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 93) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 1) (Expr Num . -4) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -41) END END END (Stat . LOAD) (Reg . 13) (Expr Num . -89) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -42) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -34) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Expr Num . -89) (Expr . SUB) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 11) (Expr Num . 85) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -25) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -77) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -94) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 50) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 3) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . SUB) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr Num . 37) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -30) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . -58) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . 46) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -4) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -17) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -64) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 23) (Reg . 0) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr . LT) (Expr Num . -54) (Expr Num . -56) (Reg . 12) (Expr Num . 47) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . 77) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 2) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -36) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Expr Num . -48) (Stat . LOAD) (Reg . 5) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 12) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -34) (Stat . LOAD) (Reg . 7) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Expr Num . 98) ELSE (Stat . OUTPUT) (Expr Num . 94) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -86) END END (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -42) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -19) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -21) (Expr Num . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 13) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 12) (Reg . 9) END (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . 37) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . -36) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 5) (Expr Num . -34) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -77) ELSE (Stat . LOAD) (Reg . 2) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 11) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -22) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 0) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 68) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -36) (Stat . LOAD) (Reg . 9) (Expr Num . -78) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 4) (Expr Num . 26) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr . ADD) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 35) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 3) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 1) (Expr Num . -94) (Stat . OUTPUT) (Reg . 5))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -46) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -68) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 10) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 13) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . LOAD) (Reg . 13) (Expr Num . -73) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . -58) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . NOT) (Reg . 0) (Expr Num . -20) (Stat . LOAD) (Reg . 13) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 46) END END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Expr Num . -55) (Stat . OUTPUT) (Expr Num . -93) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END END (Stat . OUTPUT) (Expr Num . -18) (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr Num . -68) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -64) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 23) (Reg . 0) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 31) END ELSE (Stat . IF) (Expr Num . -87) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 11) (Expr Num . -4) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . -93) END (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 74) END)
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -58) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . GT) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 99) (Expr Num . -77) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 8) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 4) (Expr . GT) (Expr Num . 37) (Expr . DIV) (Reg . 0) (Expr Num . -3) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 9) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . LOAD) (Reg . 13) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 7) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -58) END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -1) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 7) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . OUTPUT) (Expr Num . -19) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 13) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 10) END ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Expr . AND) (Expr . SUB) (Expr Num . -2) (Reg . 14) (Expr . EQ) (Expr Num . 3) (Reg . 11) END END (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr Num . 46) (Reg . 7) (Expr . AND) (Expr Num . -25) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 46) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 6) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 7) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr Num . -62) END END (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -73) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr . GT) (Expr Num . 52) (Expr . AND) (Reg . 3) (Reg . 2) ELSE (Stat . IF) (Expr Num . 79) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr Num . -94) (Expr Num . 62) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END END ELSE (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END END END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 0) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . 35) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . IF) (Expr Num . -37) (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 0) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr . AND) (Reg . 5) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr . ADD) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 35) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . 95) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Reg . 7) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . 74) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 10) (Expr Num . -77) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 14) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 3) END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 5))
((Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . OR) (Expr Num . 19) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -25) (Expr Num . -75) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -89) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . DIV) (Expr Num . -44) (Expr . EQ) (Expr Num . -98) (Expr Num . -20) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr Num . -58) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 1) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . LOAD) (Reg . 9) (Expr . OR) (Reg . 8) (Expr . MUL) (Expr Num . 89) (Reg . 7) END (Stat . OUTPUT) (Reg . 8) (Stat . INPUT) (Reg . 2))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Expr Num . -9) (Expr . MUL) (Reg . 7) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 32) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr Num . -58) (Expr . SUB) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 0) (Expr Num . 31) ELSE (Stat . IF) (Expr Num . 35) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 75) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . OUTPUT) (Reg . 14) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . 42) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -19) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Expr Num . 15) (Expr Num . 72) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . LOAD) (Reg . 0) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END END END END ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Expr Num . -17) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -20) (Reg . 0) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 7) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . DIV) (Expr Num . 73) (Expr Num . -24) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 2) (Expr . GT) (Expr Num . -31) (Expr Num . 7) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr Num . -21) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . 74) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 10) (Expr Num . -77) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 1) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -93) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 12) (Expr . SUB) (Expr Num . -95) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -48) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 5))
((Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -68) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -67) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . LOAD) (Reg . 14) (Expr Num . 55) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . -36) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 1) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . IF) (Expr . DIV) (Expr Num . -89) (Expr . SUB) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END)
((Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -68) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -17) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 14) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Expr Num . 56) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 81) (Stat . LOAD) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . -20) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 13) (Expr . AND) (Reg . 5) (Expr . GT) (Expr Num . 15) (Reg . 1) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 3) (Reg . 3))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr Num . -12) ELSE (Stat . IF) (Expr . LT) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 9) (Expr Num . -42) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . LT) (Reg . 9) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -37) (Reg . 7) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 14) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . DIV) (Expr Num . 29) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -27) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . LT) (Reg . 5) (Reg . 13) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 81) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 56) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . -44) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . 55) (Stat . LOAD) (Reg . 7) (Expr Num . -78) ELSE (Stat . INPUT) (Reg . 14) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . 37) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -21) (Stat . OUTPUT) (Expr Num . -48) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . -93) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 14) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Expr Num . 56) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -34) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -44) (Stat . OUTPUT) (Reg . 5))
((Stat . LOAD) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . -87) (Reg . 6) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 99) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 13) (Stat . IF) (Expr Num . -63) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 41) END (Stat . OUTPUT) (Reg . 9))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 7) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . MUL) (Reg . 14) (Reg . 5) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 31) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr . LT) (Expr Num . 60) (Reg . 12) (Reg . 7) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . LT) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 1) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . OUTPUT) (Expr Num . -93) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Expr Num . -18) (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . IF) (Expr . DIV) (Expr Num . -89) (Expr . SUB) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END)
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . 41) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -37) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -37) (Reg . 7) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 9) (Expr Num . 31) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . GT) (Expr Num . 65) (Expr . DIV) (Reg . 13) (Reg . 4) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . -48) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 10) END END (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 14) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr Num . -62) END END (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -86) END END (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 3) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -37) (Stat . LOAD) (Reg . 8) (Expr . SUB) (Reg . 1) (Expr Num . -4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -61) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr Num . 32) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 13) (Reg . 4) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 3) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -37) (Stat . LOAD) (Reg . 8) (Expr . SUB) (Reg . 1) (Expr Num . -4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -61) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr Num . 32) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr Num . 31) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . -48) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr Num . -94) (Expr Num . 62) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -100) (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Expr Num . -1) ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -73) END ELSE (Stat . OUTPUT) (Expr Num . 27) END END ELSE (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END END END END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -87) END (Stat . LOAD) (Reg . 0) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 6) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 1) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . 63) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) (Stat . LOAD) (Reg . 14) (Expr Num . 44) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Reg . 3) (Expr . LT) (Expr Num . 85) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 14) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -9) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 11) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 13) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 1) (Reg . 13) (Stat . IF) (Expr Num . -37) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . 74) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 34) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr . EQ) (Reg . 10) (Expr Num . 29) END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 12) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 11))
((Stat . LOAD) (Reg . 0) (Expr Num . -30) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -32) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr . OR) (Expr Num . -63) (Expr Num . -22) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -68) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -27) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END END END (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr . LT) (Expr Num . 60) (Reg . 12) (Reg . 8) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . ADD) (Expr . LT) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 68) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 1) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr . GT) (Reg . 5) (Reg . 6) (Reg . 10) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -17) (Stat . LOAD) (Reg . 13) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . -98) (Stat . LOAD) (Reg . 3) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -20) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 57) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 44) END END END (Stat . LOAD) (Reg . 13) (Expr Num . 80))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr Num . -49) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 40) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 47) END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . -48) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 10) END END (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -94) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -68) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 50) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 11) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 13) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . LT) (Expr Num . -54) (Expr Num . -56) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . -36) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 14) (Reg . 3) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . EQ) (Expr . NOT) (Expr Num . 32) (Expr Num . -43) (Reg . 10) (Stat . OUTPUT) (Expr . EQ) (Reg . 7) (Reg . 6) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -1) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 7) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . OUTPUT) (Expr Num . -93) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -48) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . GT) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 99) (Expr Num . -77) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 9) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr Num . 54) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -36) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . IF) (Expr . DIV) (Expr Num . -89) (Expr . SUB) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END END END END)
((Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr Num . 24) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -37) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . 74) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . GT) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 99) (Expr Num . -77) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 9) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 11) (Expr . DIV) (Expr Num . -32) (Reg . 14) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 55) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . LOAD) (Reg . 14) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . 35) END)
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -19) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . 12) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 10) END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 9) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 46) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 7) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 64))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 64) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -44) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -75) END END ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 15) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 10) END END ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 9) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 14) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Expr Num . -86) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 55) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr . OR) (Expr Num . -63) (Expr Num . -22) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 7) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . LT) (Reg . 9) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Expr Num . 15) (Expr . SUB) (Reg . 1) (Expr Num . -4) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . LOAD) (Reg . 0) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END END END END ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Expr Num . -17) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -20) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -34) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 32) END END ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 13) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 12) (Expr . SUB) (Expr Num . -95) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -48) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Expr Num . -9) (Expr . MUL) (Reg . 7) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 32) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr Num . -58) (Expr . SUB) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 0) (Expr Num . 31) ELSE (Stat . IF) (Expr Num . 35) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 75) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr Num . -22) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 6) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 1) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 14))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Expr Num . -48) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 10) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -11) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -77) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . -73) (Stat . OUTPUT) (Expr Num . 91) ELSE (Stat . OUTPUT) (Expr . AND) (Reg . 12) (Expr Num . -36) END ELSE (Stat . IF) (Expr Num . -34) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 65) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr . OR) (Expr Num . 55) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . -48) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . OUTPUT) (Expr Num . -72) END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -25) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 2) (Reg . 4) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -58) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 32) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 11) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -25) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 14) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 29) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -58) END END END ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 9) (Expr Num . -4) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END END (Stat . OUTPUT) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr Num . 37) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -48) END END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . LOAD) (Reg . 7) (Expr . MUL) (Expr . GT) (Expr . NOT) (Expr . MUL) (Expr . SUB) (Reg . 11) (Expr Num . -1) (Reg . 6) (Reg . 3) (Reg . 3) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr Num . 31) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . -25) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . -44) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr Num . -78) ELSE (Stat . INPUT) (Reg . 14) END END (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 64) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr . ADD) (Expr Num . -48) (Reg . 7) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 7) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 55) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr . AND) (Reg . 5) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -19) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -1) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 7) END (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Expr Num . -9) (Expr . MUL) (Reg . 7) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 32) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr Num . -58) (Expr . SUB) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 0) (Expr Num . 31) ELSE (Stat . IF) (Expr Num . 35) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 75) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 3) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 41) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . SUB) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -19) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END)
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -36) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 29) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) (Stat . LOAD) (Reg . 12) (Expr Num . 63) ELSE (Stat . OUTPUT) (Expr Num . -98) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . GT) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . IF) (Expr . MUL) (Reg . 6) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -33) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 13) (Expr . AND) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . SUB) (Expr . OR) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 2))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 7) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 15) END ELSE (Stat . LOAD) (Reg . 9) (Expr . OR) (Expr Num . 40) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -80) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 60) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 7) (Expr Num . 7))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . MUL) (Expr Num . 23) (Reg . 0) (Stat . IF) (Expr . ADD) (Expr Num . 46) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 2) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 55) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -58) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr Num . 24) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 4) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 13) (Stat . IF) (Expr Num . -63) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 41) END (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END)
((Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -27) END ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 13) (Expr Num . 2) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 5) (Reg . 12) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 56) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . OUTPUT) (Expr Num . -93) ELSE (Stat . INPUT) (Reg . 2) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . -58) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -63) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . IF) (Expr . OR) (Reg . 1) (Expr . LT) (Expr . OR) (Expr Num . 40) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -97) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 84) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . EQ) (Expr . OR) (Reg . 2) (Reg . 10) (Expr . EQ) (Reg . 0) (Expr . MUL) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) END END END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . OUTPUT) (Expr Num . -34) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . SUB) (Expr Num . -94) (Expr Num . 62) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 0) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 73) (Expr Num . -24) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . OUTPUT) (Expr Num . -34) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -94) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 50) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr . GT) (Reg . 5) (Reg . 6) (Reg . 10) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . LT) (Reg . 9) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -20) END ELSE (Stat . LOAD) (Reg . 9) (Expr . OR) (Expr Num . 40) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -80) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 53) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 13) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -48) (Expr Num . -18) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 6) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr Num . 64) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 14) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END)
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . OUTPUT) (Reg . 14) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 99) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 2))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 31) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . EQ) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 1) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . -36) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -17) (Stat . LOAD) (Reg . 13) (Reg . 13) (Stat . IF) (Expr Num . -47) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -88) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 12) (Reg . 11) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 79) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -42) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 44) END END END (Stat . LOAD) (Reg . 13) (Expr Num . 80))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 0) (Expr Num . -34) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr . NOT) (Expr . ADD) (Expr . ADD) (Expr Num . 35) (Reg . 12) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . -1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . 74) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 10) (Expr Num . -77) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 10) END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 5) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr Num . 62) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 2) (Expr . GT) (Expr Num . -31) (Expr Num . 7) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -58) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Expr Num . -93) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 3) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -37) (Stat . LOAD) (Reg . 8) (Expr . SUB) (Reg . 1) (Expr Num . -4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -61) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr Num . -17) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 45) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -22) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . GT) (Reg . 5) (Reg . 2) (Expr . EQ) (Reg . 6) (Expr Num . 41) END ELSE (Stat . IF) (Expr . LT) (Expr . ADD) (Expr . OR) (Expr Num . 6) (Expr Num . 37) (Expr Num . -20) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Expr Num . 15) (Expr . SUB) (Reg . 1) (Expr Num . -4) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . LOAD) (Reg . 0) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END END END END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 73) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr Num . 41) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -1) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 3) (Reg . 7) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . NOT) (Reg . 0) (Expr Num . -20) (Stat . LOAD) (Reg . 13) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Expr Num . -6) (Expr . SUB) (Reg . 6) (Expr Num . 58) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr . DIV) (Expr Num . 14) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . EQ) (Expr . NOT) (Expr Num . 32) (Expr Num . -77) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END)
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 13) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 0) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END END END END)
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -21) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . OUTPUT) (Expr Num . 61) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 12) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -49) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . EQ) (Expr Num . 53) (Expr Num . -43) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . LOAD) (Reg . 1) (Expr Num . -53) (Stat . OUTPUT) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -20) END ELSE (Stat . LOAD) (Reg . 9) (Expr . OR) (Expr Num . 40) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr Num . -80) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END END END ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -27) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Expr . MUL) (Expr Num . 23) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 2) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -11) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr . DIV) (Expr Num . -89) (Expr . SUB) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -48) (Expr Num . -18) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . -1) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . OR) (Expr Num . 19) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -25) (Expr Num . -75) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -89) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . DIV) (Expr Num . -44) (Expr . EQ) (Expr Num . -98) (Expr Num . -20) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr Num . -58) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END)
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 29) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 13) (Stat . IF) (Expr Num . -63) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 41) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Expr . ADD) (Expr . OR) (Expr Num . 6) (Expr . EQ) (Reg . 2) (Expr Num . 29) (Expr Num . -20) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -11) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . 37) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . -36) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 5) (Expr Num . -34) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -77) ELSE (Stat . LOAD) (Reg . 2) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -75) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 11) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END (Stat . OUTPUT) (Expr Num . 73))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -11) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 6) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 6) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 1) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Expr Num . -48))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . 37) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -21) (Stat . OUTPUT) (Expr Num . -48) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 14) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -25) (Expr Num . -75) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 60) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 11) (Expr Num . 7))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 3) (Expr Num . 35) (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Expr Num . -12) (Stat . OUTPUT) (Reg . 14))
((Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Expr Num . 45) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -17) (Stat . LOAD) (Reg . 13) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . -98) (Stat . LOAD) (Reg . 3) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -20) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 57) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 44) END END END (Stat . LOAD) (Reg . 13) (Expr Num . 80))
((Stat . LOAD) (Reg . 14) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . 35) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr . ADD) (Expr Num . -48) (Reg . 7) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -19) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 13) (Expr . AND) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . SUB) (Expr . OR) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -73) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 53) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END (Stat . LOAD) (Reg . 5) (Expr Num . -86) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr . ADD) (Reg . 8) (Reg . 12) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 35) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -58) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 2) (Expr . GT) (Expr Num . -31) (Expr Num . 7) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Expr Num . -93) (Stat . OUTPUT) (Reg . 4))
((Stat . OUTPUT) (Expr Num . -42) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . 23) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . GT) (Reg . 5) (Reg . 6) (Expr . EQ) (Reg . 6) (Expr Num . 41) END END)
((Stat . OUTPUT) (Expr Num . 23) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . GT) (Reg . 5) (Reg . 2) (Expr . EQ) (Reg . 6) (Expr Num . 41) END END)
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 10) END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 9) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 14) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . 73) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 19) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 12) (Expr . SUB) (Expr Num . -95) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -48) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 4) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -64) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 23) (Reg . 0) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 64) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -44) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -75) END END ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr . AND) (Reg . 5) (Expr Num . 32) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . LT) (Reg . 9) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 13) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 3) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . -44) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Expr Num . -44) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 2) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 31) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr Num . 37) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 53) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . -93) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . OR) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -27) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -70) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 2) END END END (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 13) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 81) END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 0) (Reg . 4) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 11))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 17) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 3) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 2) (Expr . ADD) (Reg . 14) (Expr Num . 86) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr . GT) (Reg . 5) (Reg . 6) (Reg . 10) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 2) (Expr . ADD) (Reg . 14) (Expr Num . 86) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr Num . 73) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -69) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr . GT) (Reg . 5) (Reg . 6) (Reg . 10) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 0) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -37) (Reg . 7) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 10) END ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Expr . AND) (Expr . SUB) (Expr Num . -2) (Reg . 14) (Expr . EQ) (Expr Num . 3) (Reg . 11) END END (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . 29) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . -93) END END)
((Stat . LOAD) (Reg . 11) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr Num . 24) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr Num . -12) ELSE (Stat . IF) (Expr . LT) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -77) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -78) (Stat . LOAD) (Reg . 0) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 7) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . 22) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -95) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . -11) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 22) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 81) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 8) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 14) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Expr Num . -86) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END)
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . GT) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 99) (Expr Num . -77) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -9) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -34) (Stat . LOAD) (Reg . 7) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -88) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 9) (Expr Num . 14) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -23) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . 66) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 64) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 5))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 0) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -37) (Reg . 7) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 53) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr Num . -58) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . MUL) (Expr Num . 23) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 2) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . -1) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 23) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . -80) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 39) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 4) END (Stat . IF) (Expr . EQ) (Reg . 2) (Reg . 6) (Stat . LOAD) (Reg . 8) (Expr Num . 15) ELSE (Stat . LOAD) (Reg . 9) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 11))
((Stat . LOAD) (Reg . 0) (Expr Num . 81) (Stat . LOAD) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr . AND) (Reg . 5) (Expr Num . 32) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -19) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . IF) (Expr Num . -8) (Stat . LOAD) (Reg . 4) (Expr Num . 41) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Expr Num . -51) (Expr . MUL) (Expr . OR) (Reg . 1) (Reg . 4) (Expr . GT) (Reg . 10) (Expr Num . 42) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 42) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END (Stat . LOAD) (Reg . 0) (Expr Num . -68) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END ELSE (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . 66) ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . ADD) (Reg . 4) (Expr Num . 76) (Expr Num . -31) END ELSE (Stat . IF) (Expr Num . -98) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr . DIV) (Expr Num . 66) (Reg . 6) (Expr Num . -18) END END (Stat . OUTPUT) (Expr Num . 52) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 14) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -37) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . OUTPUT) (Expr Num . -48) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 53) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . AND) (Expr . DIV) (Expr Num . 66) (Expr Num . -7) (Expr Num . -18) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 46) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr . OR) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 46) (Reg . 6) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -30) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . -58) END END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . 74) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -17) (Stat . LOAD) (Reg . 13) (Reg . 13) (Stat . IF) (Expr Num . -47) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -88) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 12) (Reg . 11) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 79) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -42) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 44) END END END (Stat . LOAD) (Reg . 13) (Expr Num . 80))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr . GT) (Reg . 5) (Reg . 6) (Reg . 10) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 55) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . OR) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Reg . 0) (Expr Num . 32) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -97) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 84) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . EQ) (Expr . OR) (Reg . 2) (Reg . 1) (Expr . EQ) (Reg . 0) (Expr . MUL) (Expr Num . 53) (Expr Num . 97) END END END END (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Reg . 1) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 59) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 8) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -19) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 46) (Reg . 6) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 0) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -37) (Reg . 7) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . GT) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 99) (Expr Num . -77) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -9) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -34) (Stat . LOAD) (Reg . 7) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -88) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 9) (Expr Num . 14) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 13) (Expr . AND) (Reg . 5) (Expr . GT) (Expr Num . 15) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 3) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . -44) (Reg . 10) (Expr Num . 55) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 1) (Expr Num . -95) ELSE (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Expr Num . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 40) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 6) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 82) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 13) (Expr . AND) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 2))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . OR) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Reg . 0) (Expr Num . 32) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END ELSE (Stat . IF) (Expr Num . -97) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 84) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . EQ) (Expr . OR) (Reg . 2) (Reg . 1) (Expr . EQ) (Reg . 0) (Expr . MUL) (Expr Num . 53) (Expr Num . 97) END END END END (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . -68) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -58) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -25) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -67) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr . NOT) (Reg . 0) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 55) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 8) (Expr Num . 17) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -58) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 8))
((Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . LOAD) (Reg . 5) (Expr Num . 41) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr Num . 24) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -63) END ELSE (Stat . LOAD) (Reg . 5) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 64) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 13) (Expr . AND) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . IF) (Expr Num . -98) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . SUB) (Expr . OR) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 79) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Expr Num . -44) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Expr Num . 15) (Expr Num . 72) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . LOAD) (Reg . 0) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END END END END ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Expr Num . -17) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 3) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 2) (Expr . ADD) (Reg . 14) (Expr Num . 86) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 1) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 11) (Expr . DIV) (Expr Num . -32) (Reg . 14) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 14) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 13) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 3) (Reg . 3))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 0) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -58) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 8))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Expr Num . -12) (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr Num . 1) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 1) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -93) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 14) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 29) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Expr Num . -20) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -86) END END (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -95) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr . OR) (Expr Num . -34) (Expr Num . 74) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 22) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 10) END ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Expr . AND) (Expr . SUB) (Expr Num . -2) (Reg . 14) (Expr . EQ) (Expr Num . 3) (Reg . 11) END END (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr Num . 35) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -50) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Reg . 12) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 11))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END (Stat . LOAD) (Reg . 14) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 13) (Stat . IF) (Expr Num . -63) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 47) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr Num . -36) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 55) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . LOAD) (Reg . 14) (Expr Num . 55) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -49) END ELSE (Stat . IF) (Expr Num . 94) (Stat . IF) (Expr . OR) (Reg . 11) (Reg . 2) (Stat . LOAD) (Reg . 1) (Expr Num . 95) ELSE (Stat . OUTPUT) (Expr . OR) (Expr Num . 42) (Expr Num . 68) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 29) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) END (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 10) END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . -72) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 9) END)
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . GT) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 99) (Expr Num . -77) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -9) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -34) (Stat . LOAD) (Reg . 7) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -88) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 9) (Expr Num . 14) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 97) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr Num . 54) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -36) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . LOAD) (Reg . 2) (Expr Num . 31))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr . OR) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Reg . 0) (Expr Num . 32) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . IF) (Expr Num . -97) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 84) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . EQ) (Expr . OR) (Reg . 2) (Reg . 1) (Expr . EQ) (Reg . 0) (Expr . MUL) (Expr Num . 53) (Expr Num . 97) END END END)
((Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 10) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . IF) (Expr Num . 40) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 60) END END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 9) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 14) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . EQ) (Expr . NOT) (Expr Num . 32) (Expr Num . -77) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . -98) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . OR) (Expr Num . 19) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -25) (Expr Num . -75) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -89) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . DIV) (Expr Num . -44) (Expr . EQ) (Expr Num . -98) (Expr Num . -20) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr Num . -58) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 2))
((Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 12) (Expr Num . -22) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -48) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . LOAD) (Reg . 14) (Expr Num . 55) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . -20) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr Num . 73) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . 53) (Expr Num . 64) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . -44) (Reg . 10) (Expr Num . 55) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . OUTPUT) (Expr Num . 3))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 93) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 8) (Expr Num . 17) (Reg . 14) END END (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -94) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr . LT) (Expr Num . 60) (Reg . 12) (Reg . 8) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . ADD) (Expr . LT) (Expr Num . -63) (Expr . EQ) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -20) (Reg . 0) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 68) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 1) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 43) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . -36) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -68) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 10) END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 9) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr Num . 46) (Reg . 7) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr Num . -34) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -19) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 9) END END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 66) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END (Stat . LOAD) (Reg . 14) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 1) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . INPUT) (Reg . 2))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Expr Num . -19) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . OUTPUT) (Expr Num . 64) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 93) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . LOAD) (Reg . 8) (Expr Num . -86))
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Expr . MUL) (Expr Num . 23) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 35) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 40) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 14) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -30) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . -58) END END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Expr Num . 93))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -68) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 13) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 0) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END END END END)
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . -1) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -63) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Expr Num . -44) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 1) (Expr Num . -4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -77) (Expr Num . -20) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 2) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . 29) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr Num . 64))
((Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -69) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 11) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END (Stat . OUTPUT) (Expr Num . 73))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END)
((Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . MUL) (Expr Num . 23) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 2) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . AND) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Expr Num . 15) (Expr Num . 72) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . LOAD) (Reg . 0) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END END END END ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Expr Num . -17) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . LOAD) (Reg . 2) (Expr . GT) (Expr Num . -31) (Expr Num . 7) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 11) (Expr Num . -49) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 4) (Expr Num . 15) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 32) END END ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . NOT) (Reg . 0) (Expr Num . -20) (Stat . LOAD) (Reg . 13) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 46) END END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 79) (Stat . LOAD) (Reg . 3) (Reg . 13) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -1) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 13) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr Num . 62) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END END END END ELSE (Stat . OUTPUT) (Reg . 5) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -25) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . -44) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr . SUB) (Expr Num . -42) (Reg . 11) (Stat . LOAD) (Reg . 4) (Expr . EQ) (Reg . 14) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 11) (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 40) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 10) END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . IF) (Expr . LT) (Expr Num . -72) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . INPUT) (Reg . 9) END)
((Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 64) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END (Stat . IF) (Reg . 7) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -22) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . -94) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr Num . -100) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . OUTPUT) (Expr Num . -87) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 12) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . DIV) (Expr Num . 29) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . OR) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Reg . 0) (Expr Num . 32) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -97) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 84) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . EQ) (Expr . OR) (Reg . 2) (Reg . 1) (Expr . EQ) (Reg . 0) (Expr . MUL) (Expr Num . 53) (Expr Num . 97) END END END END (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr . ADD) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -9) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 0) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr . OR) (Expr Num . 55) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 42) (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END (Stat . LOAD) (Reg . 0) (Expr Num . -80) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 10) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -48) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . OR) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Reg . 0) (Expr Num . 32) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -97) (Stat . OUTPUT) (Expr . DIV) (Expr Num . 84) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . EQ) (Expr . OR) (Reg . 2) (Reg . 1) (Expr . EQ) (Reg . 0) (Expr . MUL) (Expr Num . 53) (Expr Num . 97) END END END END (Stat . OUTPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr . GT) (Expr Num . 43) (Expr . DIV) (Reg . 14) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 29) (Expr . ADD) (Expr Num . 46) (Reg . 8) (Expr Num . -20) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . -25) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr . ADD) (Expr Num . -37) (Reg . 7) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr Num . 73) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . OUTPUT) (Expr Num . 45) END (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 9) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Stat . IF) (Expr Num . -48) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -67) (Stat . LOAD) (Reg . 5) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -94) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr Num . 22) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -9) END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 35) END END ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 13) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 10) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . OR) (Expr Num . 40) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -36) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . 37) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr Num . 81) ELSE (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Expr Num . 60) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 42) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 6) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END ELSE (Stat . OUTPUT) (Expr Num . -48) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 13) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . 56) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr . GT) (Expr Num . 52) (Expr . AND) (Reg . 3) (Reg . 2) ELSE (Stat . IF) (Expr Num . 79) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 11))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 9) (Expr Num . -4) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 12) (Expr . SUB) (Expr Num . -73) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 6) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 7) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr Num . -62) END END (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 2) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -34) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Reg . 2) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END END END END (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END)
((Stat . LOAD) (Reg . 9) (Expr Num . 31) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . -77) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 64) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . -98) (Stat . LOAD) (Reg . 3) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 3) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . IF) (Expr . MUL) (Expr Num . 37) (Reg . 12) (Stat . LOAD) (Reg . 9) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . LT) (Reg . 9) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . LOAD) (Reg . 8) (Expr Num . -23) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 7) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 55) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . OR) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Reg . 2) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 2) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -9) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 2) (Expr Num . -4) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Expr Num . -34) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 14) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . 35) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . -44) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Expr Num . -44) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . OUTPUT) (Expr Num . -72) END END ELSE (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -69) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . -48) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 10) END END (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 12) END END END END END)
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -34) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr . OR) (Expr Num . 40) (Reg . 6) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -11) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 93) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 1) (Expr Num . -4) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -41) END END END (Stat . LOAD) (Reg . 13) (Expr Num . -89) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr . LT) (Expr Num . -54) (Expr Num . -56) (Reg . 12) (Expr Num . 47) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . 77) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 32) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . IF) (Expr . DIV) (Expr Num . -89) (Expr . SUB) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -79) END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr Num . 72) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 1) (Reg . 13) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 43) END)
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Expr Num . 99))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 39) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 4) END (Stat . IF) (Expr . EQ) (Reg . 2) (Reg . 6) (Stat . LOAD) (Reg . 8) (Expr Num . 15) ELSE (Stat . LOAD) (Reg . 9) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 11))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 62) (Expr . SUB) (Reg . 0) (Expr Num . -80) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . -63) (Expr Num . 1) END END END (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -44) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . 54) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 29) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . OUTPUT) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) END (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 13) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 14) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -84) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -67) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 5) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 5))
((Stat . LOAD) (Reg . 9) (Expr Num . 31) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 60) (Stat . IF) (Expr Num . 29) (Stat . OUTPUT) (Expr Num . 61) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr . OR) (Expr Num . 40) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr . ADD) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 13) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr . ADD) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 35) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END END END (Stat . OUTPUT) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END)
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -36) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Expr Num . -48) (Stat . LOAD) (Reg . 5) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr Num . -37) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . 74) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 7) END (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Expr Num . 55) (Reg . 8) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 9) (Expr Num . 2) ELSE (Stat . LOAD) (Reg . 1) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 12) (Expr Num . -70) ELSE (Stat . OUTPUT) (Expr Num . 28) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr Num . -68) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr Num . -19) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 7) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . 22) (Stat . INPUT) (Reg . 13))
((Stat . LOAD) (Reg . 0) (Expr Num . 81) (Stat . LOAD) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END)
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 47) END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END)
((Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 55) END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -19) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . SUB) (Expr Num . -94) (Expr Num . 62) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 0) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . LOAD) (Reg . 14) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Expr Num . -25) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 8) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 46) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . SUB) (Expr Num . 24) (Expr Num . 35) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Expr Num . 15) (Expr . SUB) (Reg . 1) (Expr Num . -4) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . LOAD) (Reg . 0) (Expr Num . -94) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 32) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END END END END END ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Expr Num . -17) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr Num . 12))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . -44) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . GT) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 73) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . NOT) (Expr Num . -22) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 13) (Expr . AND) (Reg . 5) (Expr . GT) (Expr Num . 15) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . 74) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Reg . 5) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 3) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 64) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr . ADD) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 35) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . 89) (Reg . 10) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 3) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 2) (Expr . ADD) (Reg . 14) (Expr Num . 86) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 23) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -19) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 7) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . 22) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . -80) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 10) (Expr Num . -34) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -48) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr Num . -68) (Expr Num . 62) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -64) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 23) (Reg . 0) END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 5))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -46) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr . ADD) (Expr Num . -37) (Reg . 7) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . 19) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . -32) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Expr . AND) (Reg . 5) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -19) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 2) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 6) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -44) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 1) (Expr . SUB) (Reg . 9) (Expr Num . -4) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END END (Stat . OUTPUT) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . 37) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . -36) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 5) (Expr Num . -34) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . LOAD) (Reg . 0) (Expr Num . -77) ELSE (Stat . LOAD) (Reg . 2) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END END END (Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 64) (Expr Num . -32) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -75) END END ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr . MUL) (Reg . 7) (Expr . NOT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 99) END ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Expr . ADD) (Expr . AND) (Expr Num . 6) (Expr Num . 37) (Expr Num . -20) (Reg . 3) (Stat . LOAD) (Reg . 6) (Expr Num . 32) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 13) (Expr Num . -24))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Expr Num . 54) (Stat . LOAD) (Reg . 11) (Expr . DIV) (Expr Num . 19) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 14) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr Num . 53) ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr . EQ) (Expr Num . 46) (Expr Num . 81) (Reg . 14) END (Stat . OUTPUT) (Expr Num . 73))
((Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -9) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 0) (Expr Num . 62) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -73) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . -44) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -5) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . LT) (Reg . 0) (Expr Num . -56) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -100) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr Num . 73) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . MUL) (Expr Num . 24) (Reg . 5) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 51) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . LT) (Expr . NOT) (Expr Num . 6) (Expr Num . -32) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -12) (Stat . LOAD) (Reg . 9) (Expr Num . -86) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . 58) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr . MUL) (Expr Num . 23) (Reg . 0) (Stat . IF) (Expr . ADD) (Expr Num . 46) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr . ADD) (Reg . 8) (Reg . 2) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13))
((Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . -100) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . LT) (Expr . ADD) (Reg . 9) (Reg . 9) (Expr Num . 97) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -94) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -68) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 50) END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) (Stat . LOAD) (Reg . 12) (Expr Num . 63) ELSE (Stat . OUTPUT) (Expr Num . -98) END ELSE (Stat . LOAD) (Reg . 5) (Expr . LT) (Reg . 5) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . GT) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . IF) (Expr . MUL) (Reg . 6) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -33) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . OUTPUT) (Expr Num . -42) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . -73) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . LOAD) (Reg . 11) (Expr Num . 73) ELSE (Stat . LOAD) (Reg . 5) (Expr . MUL) (Expr Num . -58) (Reg . 5) END (Stat . IF) (Expr Num . -28) (Stat . OUTPUT) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 11) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . IF) (Expr . ADD) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 35) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 13) END (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 37) (Stat . LOAD) (Reg . 0) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . OR) (Expr Num . 5) (Expr . EQ) (Reg . 10) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -42) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr Num . 62) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END)
((Stat . LOAD) (Reg . 3) (Expr Num . -34) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . SUB) (Expr Num . 32) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 56) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -77) ELSE (Stat . OUTPUT) (Expr Num . -25) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 64) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . ADD) (Expr Num . 46) (Reg . 7) (Expr . AND) (Expr Num . -25) (Expr . EQ) (Expr . LT) (Expr . ADD) (Reg . 6) (Reg . 9) (Expr Num . 97) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 2) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 77) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 6) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 9) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . GT) (Expr Num . 72) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -93) (Stat . IF) (Expr Num . 29) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -88) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 31) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -69) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . ADD) (Expr Num . 37) (Expr Num . -20) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -90) (Expr Num . 31) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Expr Num . -63) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr . LT) (Expr Num . 60) (Reg . 12) (Reg . 7) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . 55) END END ELSE (Stat . IF) (Expr . ADD) (Expr . LT) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 81) (Expr . AND) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 68) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 1) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 1) (Expr Num . -17) ELSE (Stat . IF) (Expr . EQ) (Reg . 3) (Expr Num . 43) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr . GT) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 5) (Expr Num . 17) (Reg . 14) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr Num . 62) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -37) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr Num . 66) (Expr Num . 1) END END END END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . NOT) (Reg . 0) (Expr Num . -20) (Stat . LOAD) (Reg . 13) (Expr Num . -58) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 46) END END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . LT) (Expr Num . -25) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . 35) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 58) END ELSE (Stat . OUTPUT) (Expr Num . -21) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr Num . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 43) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 73) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr Num . 99) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . -68) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . -77) (Reg . 12) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Expr Num . -25) (Expr Num . 56) (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . 81) (Expr Num . -20) END END END ELSE (Stat . IF) (Expr . ADD) (Expr Num . -73) (Expr Num . -58) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 77) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . SUB) (Expr Num . -94) (Expr Num . 62) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . LOAD) (Reg . 0) (Expr Num . -34) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 9) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -9) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr . NOT) (Expr Num . 77) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END (Stat . LOAD) (Reg . 0) (Expr Num . -77) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 14) (Expr Num . -55) (Stat . IF) (Expr Num . 29) (Stat . LOAD) (Reg . 10) (Reg . 4) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . -3) END ELSE (Stat . IF) (Expr Num . -86) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 55) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 53) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 10) END ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Expr . AND) (Expr . SUB) (Expr Num . -2) (Reg . 14) (Expr . EQ) (Expr Num . 3) (Reg . 11) END END (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 10) (Expr . DIV) (Expr Num . 19) (Reg . 0) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 4) (Expr Num . -34) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 81) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 55) (Reg . 6) (Expr Num . -20) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -73) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -93) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 6) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . GT) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 4) END END END ELSE (Stat . IF) (Expr Num . 99) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 14) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -25) (Reg . 2) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 41) END END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . -20) (Expr Num . -20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . -19) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 12) END (Stat . OUTPUT) (Reg . 1))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 2) (Expr Num . -68) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 10) (Expr Num . 73) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 62) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr Num . 85) (Expr Num . 62) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -11) (Expr Num . -85) ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . -48) (Expr Num . -18) END END END END END ELSE (Stat . OUTPUT) (Reg . 5) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . DIV) (Reg . 4) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 13) (Expr Num . 2) ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 6) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . OUTPUT) (Reg . 9) END END)
((Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . DIV) (Reg . 11) (Expr Num . -3) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . 15) END (Stat . OUTPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -77) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . 64) END ELSE (Stat . OUTPUT) (Expr Num . -4) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . -58) END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . LOAD) (Reg . 4) (Expr Num . 29) (Stat . INPUT) (Reg . 8))
((Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr . SUB) (Reg . 14) (Expr . SUB) (Expr Num . -73) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 97) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -93) END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 54) (Expr Num . -20) END (Stat . LOAD) (Reg . 5) (Expr Num . -34) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 14) (Expr . LT) (Expr . MUL) (Reg . 7) (Expr . NOT) (Expr Num . 32) (Expr Num . 97) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 54) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 0) (Reg . 9) END (Stat . LOAD) (Reg . 2) (Reg . 13) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -37) (Reg . 7) END END (Stat . OUTPUT) (Expr Num . -25))
((Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . GT) (Reg . 1) (Expr . DIV) (Expr Num . 55) (Reg . 12) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . ADD) (Expr . OR) (Expr Num . -63) (Expr . EQ) (Expr Num . 99) (Expr Num . -77) (Expr Num . -20) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 42) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 17) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -16) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr . NOT) (Expr Num . 32) (Expr . SUB) (Reg . 0) (Expr Num . 8) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -68) END ELSE (Stat . IF) (Expr Num . -97) (Stat . LOAD) (Reg . 9) (Expr Num . 31) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 4) (Expr . GT) (Expr Num . 37) (Expr . DIV) (Reg . 0) (Expr Num . -3) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . LOAD) (Reg . 8) (Expr . OR) (Expr Num . 40) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . -25) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . 15) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -73) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . 64) END (Stat . LOAD) (Reg . 9) (Expr Num . -34) (Stat . INPUT) (Reg . 13))
((Stat . LOAD) (Reg . 13) (Expr . SUB) (Reg . 12) (Expr . SUB) (Expr Num . -95) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . SUB) (Expr . ADD) (Expr Num . -44) (Reg . 10) (Expr Num . 62) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 32) (Stat . IF) (Expr . LT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr . NOT) (Reg . 13) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 81) END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -100) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . OUTPUT) (Expr Num . -48) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . DIV) (Reg . 1) (Expr . DIV) (Expr Num . 14) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -100) (Stat . OUTPUT) (Expr . ADD) (Expr Num . 46) (Reg . 14) ELSE (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -68) END END ELSE (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . ADD) (Expr . EQ) (Expr . NOT) (Expr Num . 32) (Expr Num . -43) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 99) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr Num . -9) (Expr . MUL) (Reg . 11) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 5) (Expr . DIV) (Expr . DIV) (Expr Num . -63) (Expr . EQ) (Expr Num . -19) (Expr . DIV) (Expr Num . 46) (Reg . 6) (Expr Num . -20) END ELSE (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -94) (Stat . OUTPUT) (Expr Num . -37) ELSE (Stat . OUTPUT) (Expr . EQ) (Expr . NOT) (Expr Num . 6) (Expr Num . 31) END END ELSE (Stat . INPUT) (Reg . 7) END (Stat . LOAD) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . -58) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . ADD) (Reg . 5) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . IF) (Expr Num . -32) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -49) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -32) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . OUTPUT) (Expr Num . 64) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -44) END (Stat . INPUT) (Reg . 13))
