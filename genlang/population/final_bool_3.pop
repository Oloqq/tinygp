((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 0) (Expr Num . 64) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END END END ELSE (Stat . IF) (Expr . OR) (Expr . AND) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr . AND) (Reg . 0) (Expr Num . 15) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 9) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . OUTPUT) (Expr Num . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr . EQ) (Reg . 7) (Expr Num . 8) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr Num . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 65) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Reg . 5) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 65) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 66) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 5) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -99) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 10) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . OUTPUT) (Expr . OR) (Expr Num . 49) (Expr Num . 53) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 10) (Expr Num . 65) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 74) END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . OUTPUT) (Expr Num . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr . EQ) (Reg . 7) (Expr Num . 8) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . OR) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr Num . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 9) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END END END END END END END END (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Expr Num . 56) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . 8) (Expr Num . -25) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 1) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . -46) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 12) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -53) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Expr Num . -20) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 14) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 10) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 13) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 4) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 12) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -39) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 14))
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr Num . 72) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) END (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 5) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -34) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 8) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 5) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 42) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 12) (Reg . 7) ELSE (Stat . INPUT) (Reg . 3) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 10) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 14))
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 8) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 5) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 3) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Expr . OR) (Reg . 12) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) END END END END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 6) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 89) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 5) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 8) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Expr Num . -95) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . OUTPUT) (Expr Num . 66) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -39) END ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . OR) (Reg . 14) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 5) (Expr Num . -95) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 13) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 12) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 11) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . LOAD) (Reg . 12) (Expr Num . -24) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 0) (Expr Num . 64) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -99) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 12) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . LOAD) (Reg . 12) (Expr Num . -68) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -68) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -72) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . LOAD) (Reg . 10) (Expr Num . -5) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 66) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 5) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -99) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 7) (Expr Num . -95) (Stat . OUTPUT) (Expr . OR) (Expr Num . 49) (Expr Num . 53) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 8) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 57) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END END END END END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . LOAD) (Reg . 12) (Expr Num . -24) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 4) (Reg . 2) END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 9) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 13) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 5) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END END END END END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr Num . -68) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . LOAD) (Reg . 12) (Expr Num . 16) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END END END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 12) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 11) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . 37) END (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 12) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 10) END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -53) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 9) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 10) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 11) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . OR) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 12) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . -79) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -71) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) END END END END END END END END ELSE (Stat . IF) (Expr . OR) (Expr . AND) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr . AND) (Reg . 0) (Expr Num . 15) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 9) (Stat . INPUT) (Reg . 14) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 12) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -46) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 7) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Expr Num . 44) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr Num . -24) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 1) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 10) (Expr Num . 65) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 74) END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 9) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr . GT) (Reg . 0) (Expr Num . 8) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -27) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 12) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -39) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . 1) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END END END END (Stat . IF) (Expr Num . -98) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -81) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 12) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 12) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 5) (Expr Num . 38) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -26) (Stat . IF) (Expr Num . -93) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 79) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 10) (Expr Num . 65) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 74) END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -87) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr Num . -24) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 1) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 6) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 11) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 3) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 12) (Reg . 7) ELSE (Stat . INPUT) (Reg . 3) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . LOAD) (Reg . 12) (Expr Num . -24) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . 44) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END END END END (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END (Stat . INPUT) (Reg . 14))
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 12) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr . OR) (Expr . OR) (Reg . 9) (Expr Num . 96) (Expr Num . 84) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . AND) (Reg . 6) (Expr Num . -40) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 3) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 10) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 8) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . GT) (Reg . 0) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 9) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -81) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 12) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr . AND) (Reg . 12) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -33) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 13) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 6) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 65) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . 15) (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -99) (Stat . IF) (Expr Num . 9) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 6) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 9) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 6) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 13) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . OR) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 65) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 11) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -18) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -6) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . OR) (Reg . 2) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 11) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 11) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 42) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr Num . -24) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 8) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 44) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 9) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 10) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 10) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 6) END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -68) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . -46) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Expr Num . -95) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -26) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END END END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 12) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Expr Num . 56) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 14) (Expr Num . 22) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END END END END END END END END (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 12) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . LT) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 10) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) (Stat . LOAD) (Reg . 12) (Expr Num . 80) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . IF) (Expr Num . 29) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 1) (Expr Num . -48) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 3) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . INPUT) (Reg . 12) END END END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 5) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Expr . OR) (Expr Num . 34) (Expr . OR) (Reg . 12) (Reg . 2) (Reg . 7) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Reg . 10) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 2) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -40) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 4) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . OR) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . OR) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 80) END END END END (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 4) (Expr Num . -90) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . IF) (Expr . EQ) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . -68) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 12) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -81) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 12) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . -46) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . EQ) (Expr . OR) (Expr Num . 34) (Expr . OR) (Reg . 12) (Reg . 2) (Reg . 7) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 5) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr Num . -24) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 1) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 57) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 5) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 65) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . -14) END END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 11) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Expr Num . -95) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 10) (Expr Num . 65) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 74) END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 6) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -68) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 66) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 5) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -99) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 10) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Reg . 10) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 11) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 67) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . 61) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -57) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 11) (Reg . 5) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 13) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 14) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 4) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 10) (Expr Num . -73) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 9) (Expr Num . 62) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 7) (Expr Num . -95) (Stat . LOAD) (Reg . 3) (Reg . 7) (Stat . IF) (Expr Num . -20) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr Num . 20) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr Num . -24) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 1) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Expr . OR) (Reg . 12) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) END END END END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 5) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 12) (Reg . 7) ELSE (Stat . INPUT) (Reg . 3) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 49) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr . NOT) (Expr Num . 61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 3) (Reg . 2) ELSE (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -23) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Expr Num . 56) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr . AND) (Reg . 7) (Reg . 1) (Expr Num . -25) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -68) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . -26) (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . OR) (Reg . 5) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 12) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 5) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -80) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 3) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Expr . OR) (Reg . 12) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -20) (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 23) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 11) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 13) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 42) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 10) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 3) END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 57) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . -79) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -71) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 11) (Expr . OR) (Expr Num . 58) (Reg . 4) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 12) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . LOAD) (Reg . 13) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 11) (Expr Num . 64) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . GT) (Expr Num . 92) (Expr . AND) (Reg . 1) (Expr . OR) (Expr . NOT) (Reg . 3) (Reg . 14) (Stat . OUTPUT) (Expr Num . 23) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr . EQ) (Reg . 10) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 3) (Reg . 2) ELSE (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -23) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . IF) (Expr . EQ) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 11) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -18) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -6) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 6) END (Stat . IF) (Expr Num . -8) (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -77) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END END END ELSE (Stat . IF) (Expr . OR) (Expr . AND) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr . AND) (Reg . 0) (Expr Num . 15) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 9) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 0) (Expr Num . 64) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 57) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 5) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr . AND) (Expr Num . -7) (Reg . 9) END END (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 2) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 18) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -53) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 11) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END END END END END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 6) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -74) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 52) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 53) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . OUTPUT) (Expr Num . -76) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -45) (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 6))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -44) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 66) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 5) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -99) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 7) (Expr Num . -95) (Stat . OUTPUT) (Expr . OR) (Expr Num . 49) (Expr Num . 53) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Reg . 10) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 6) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -71) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . INPUT) (Reg . 13))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 11) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -68) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) END END END END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 12) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Expr . OR) (Reg . 12) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) END END END END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . -98) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 1) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr . LT) (Expr Num . 9) (Reg . 14) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) END (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 2) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -20) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 12) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 12) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 11) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . INPUT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 13) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr Num . 49) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Expr Num . 23) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 65) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . -79) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -71) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 1) (Expr Num . 0))
((Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 38) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . 15) (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -99) (Stat . IF) (Expr Num . 9) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 14) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr . EQ) (Reg . 7) (Expr Num . 8) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr Num . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . 1) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END END END ELSE (Stat . IF) (Expr . OR) (Expr . AND) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr . AND) (Reg . 0) (Expr Num . 15) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 9) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -81) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 12) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -68) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . -89) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 1) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 42) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . 14) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -74) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Expr Num . 52) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . LOAD) (Reg . 10) (Expr Num . -5) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 57) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 2) (Expr Num . 64) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Expr Num . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 11) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END END END ELSE (Stat . IF) (Expr . OR) (Expr . AND) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr Num . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 5) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END (Stat . LOAD) (Reg . 7) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 7) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . OR) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 15) (Stat . OUTPUT) (Reg . 5) (Stat . IF) (Expr Num . 59) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . IF) (Expr Num . -88) (Stat . LOAD) (Reg . 9) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -87) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 2) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 5) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Reg . 3))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Expr Num . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 3) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 13) END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . -79) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -71) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 5) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 3) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 9) (Expr Num . 62) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 7) (Expr Num . -95) (Stat . LOAD) (Reg . 3) (Reg . 7) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . OR) (Reg . 14) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 5) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END (Stat . LOAD) (Reg . 7) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -72) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 53) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . LOAD) (Reg . 7) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 10) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 70) (Stat . IF) (Expr Num . 94) (Stat . IF) (Expr Num . 95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 80) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 95) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 7) (Stat . INPUT) (Reg . 14) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -46) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . -46) (Stat . IF) (Expr . GT) (Reg . 11) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 72) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 9) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 74) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . AND) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 7) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . OUTPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 11) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 3) (Reg . 4) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr Num . -24) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 1) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 11) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -18) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -6) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . -90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 15) (Stat . OUTPUT) (Reg . 5) (Stat . IF) (Expr Num . 59) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . IF) (Expr Num . -88) (Stat . LOAD) (Reg . 9) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . AND) (Reg . 11) (Expr Num . 64) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 7) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) END END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 6) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 10) (Expr Num . 65) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 74) END END END END END END END END (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 5) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . INPUT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . LOAD) (Reg . 12) (Expr Num . -24) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) (Stat . IF) (Expr Num . -21) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END END END (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Expr . AND) (Reg . 12) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -33) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 14) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 6) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 1) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 11) (Reg . 5) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 13) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 14) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 4) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 10) (Expr Num . -73) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 6) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 57) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 3) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 5) END (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 14) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 5) (Expr Num . -95) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -39) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 11) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 3))
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr Num . 15) (Stat . OUTPUT) (Reg . 5) (Stat . IF) (Expr Num . 59) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . IF) (Expr Num . -88) (Stat . LOAD) (Reg . 9) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 1) (Stat . OUTPUT) (Expr Num . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr . EQ) (Reg . 7) (Expr Num . 8) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . OR) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) (Stat . OUTPUT) (Expr Num . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . EQ) (Expr . OR) (Expr Num . 34) (Expr . OR) (Reg . 12) (Reg . 2) (Reg . 7) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 2) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 5) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 14) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 10) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 10) END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END END END)
((Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 5) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) (Stat . LOAD) (Reg . 13) (Expr . AND) (Expr Num . -7) (Reg . 9) END END (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 2) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 18) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . INPUT) (Reg . 14) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 1) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 6) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . NOT) (Expr . OR) (Reg . 12) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) END END END END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 10) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 44) (Reg . 10) END (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -46) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) (Stat . LOAD) (Reg . 12) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 5) (Expr Num . -95) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END END END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 12) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr . AND) (Reg . 2) (Reg . 0) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . INPUT) (Reg . 7))
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END END (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 12) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . -46) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 11) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . -77) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END (Stat . INPUT) (Reg . 14))
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr . NOT) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 3) (Reg . 2) ELSE (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -23) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 46) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . -98) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 1) (Reg . 1) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Expr . LT) (Expr Num . 9) (Reg . 14) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 14) (Expr Num . 22) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 3) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 7) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Reg . 7) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -81) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -91) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 7) (Expr Num . -95) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . INPUT) (Reg . 8) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE END END END (Stat . INPUT) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Expr Num . 64) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . OR) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 1) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -89) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Expr Num . 94) (Reg . 10) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 13) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 3) END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END (Stat . INPUT) (Reg . 14))
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -15) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 10) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -68) (Stat . OUTPUT) (Expr Num . -13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 12) (Reg . 7) ELSE (Stat . INPUT) (Reg . 3) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 11) (Reg . 5) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 13) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 14) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 4) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 10) (Expr Num . -73) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr . AND) (Reg . 2) (Reg . 0) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 11) END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 10) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . -25) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -34) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 88) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -77) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 12) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) END END)
((Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -80) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 13) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . 43) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 14) (Expr Num . 8) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 3) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 3) END END END END)
((Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -31) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 9) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr . GT) (Reg . 0) (Expr Num . 8) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 14) (Expr Num . 22) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 5) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . GT) (Reg . 6) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 13) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr Num . -59) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 27) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr Num . 98) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . LT) (Reg . 10) (Expr Num . 86) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 12) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . -68) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 11) (Expr Num . 65) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . IF) (Expr . OR) (Expr Num . -92) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 42) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 12) (Reg . 2) ELSE (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 14) END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -68) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -54) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -71) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 10) (Expr Num . 65) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 74) END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 45) END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -26) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 10) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 10) END END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) END END END END END END END END (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 5) (Reg . 7) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 13) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Expr . AND) (Reg . 12) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 46) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -33) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 13) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 6) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 3) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -5) (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Expr Num . -10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 11) (Expr Num . 41) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 9) (Expr Num . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr Num . -68) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 89) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr . OR) (Expr Num . 61) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . GT) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . INPUT) (Reg . 14))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -21) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 47) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . OR) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 49) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 11) (Reg . 5) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 13) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 14) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 4) END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 10) (Expr Num . -73) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 66) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . -99) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 7) (Expr Num . -95) (Stat . OUTPUT) (Expr . OR) (Expr Num . 49) (Expr Num . 53) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . EQ) (Expr . OR) (Expr Num . 34) (Expr . OR) (Reg . 12) (Reg . 2) (Reg . 7) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 2) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 2) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr . LT) (Reg . 12) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . AND) (Reg . 8) (Expr Num . 8) ELSE (Stat . OUTPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 16) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 64) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 7) END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Expr Num . 64) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 1) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Reg . 14) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 4) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END)
((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . 61) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 14) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 1) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 4) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 68) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 1) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr . OR) (Expr . OR) (Reg . 0) (Expr Num . -24) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 3) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Expr Num . -81) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 8) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -45) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 1) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . OR) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -90) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . 74) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 63) (Stat . OUTPUT) (Expr Num . 42) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 6) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Expr Num . 41) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 72) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) END (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -46) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Expr . NOT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 5) END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 89) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -59) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -59) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -44) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 9) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 5) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 11) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END END (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 3) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 13) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 39) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 10) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) END END END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . EQ) (Expr . OR) (Expr Num . 34) (Expr . OR) (Reg . 12) (Reg . 2) (Reg . 7) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 5) (Reg . 2) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 5) (Expr . EQ) (Reg . 0) (Expr . LT) (Reg . 11) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . OR) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 5) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END END END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 6) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . OR) (Expr . EQ) (Reg . 9) (Reg . 14) (Reg . 8) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . -95) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -34) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . OR) (Expr . GT) (Reg . 0) (Expr Num . -24) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END END END END END)
