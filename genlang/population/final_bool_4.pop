((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 12) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 5) (Expr Num . -30) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 9) END ELSE (Stat . OUTPUT) (Expr Num . 40) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr Num . 96) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 0) (Expr Num . -4) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . -69) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . -83) (Expr Num . -11) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 39) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 4) (Reg . 9) (Stat . OUTPUT) (Expr Num . -3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 3) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr . LT) (Reg . 0) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -86) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . SUB) (Reg . 5) (Expr Num . 50) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 40) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 8) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . INPUT) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 3) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . MUL) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 0) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr . DIV) (Reg . 9) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -85) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 43) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . EQ) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . LOAD) (Reg . 12) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . NOT) (Expr . AND) (Reg . 7) (Reg . 12) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 11) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . LT) (Reg . 9) (Reg . 10) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . GT) (Expr Num . -30) (Expr Num . -42) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . NOT) (Expr . AND) (Reg . 7) (Reg . 12) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 11) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . LT) (Reg . 9) (Reg . 10) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 1) (Expr Num . 37) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 2) (Reg . 6) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 33) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 6) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr . AND) (Expr . ADD) (Expr Num . -51) (Reg . 4) (Reg . 6) (Expr Num . -89) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -45) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 81) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . DIV) (Reg . 0) (Reg . 0) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 29) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . ADD) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 12) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 1) (Stat . IF) (Expr Num . 16) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . -21) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -97) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr . AND) (Expr . ADD) (Expr Num . -51) (Reg . 4) (Reg . 6) (Expr Num . -89) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . ADD) (Reg . 7) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 3) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . EQ) (Reg . 14) (Expr Num . -3) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . -94) ELSE (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 80) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -45) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr Num . 96) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr Num . 68) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . -15) (Reg . 14) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 0) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . DIV) (Reg . 0) (Reg . 0) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Reg . 4) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . OUTPUT) (Expr Num . 80) ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Expr Num . -81) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -60) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 2) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . DIV) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . DIV) (Reg . 0) (Reg . 0) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . INPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr Num . -77) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -10) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 5) ELSE (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 11) (Expr Num . -90) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -31) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 11) END END ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 1) (Expr Num . 37) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 2) (Reg . 6) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 33) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . ADD) (Reg . 7) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 4) (Expr Num . -16) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . -15) (Reg . 14) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 0) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . GT) (Expr . MUL) (Reg . 1) (Expr Num . -25) (Reg . 8) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr Num . 68) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 9) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . 14) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -68) (Reg . 1) ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -50) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 3) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -4) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . -53) END ELSE (Stat . OUTPUT) (Reg . 9) END END (Stat . IF) (Expr . DIV) (Expr Num . -56) (Expr Num . 59) (Stat . LOAD) (Reg . 10) (Expr Num . -67) ELSE (Stat . IF) (Expr Num . 84) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 91) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr . ADD) (Reg . 1) (Expr . SUB) (Expr . OR) (Expr . EQ) (Reg . 4) (Expr Num . -85) (Expr Num . 79) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . -56) END (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 2) (Expr Num . 69) ELSE (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . 29) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . SUB) (Reg . 13) (Expr . OR) (Reg . 7) (Expr . OR) (Reg . 0) (Expr Num . 93) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr . LT) (Reg . 5) (Expr Num . 88) (Stat . LOAD) (Reg . 0) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Reg . 13) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -26) (Stat . OUTPUT) (Expr Num . -30) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . 14) (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -57) (Stat . LOAD) (Reg . 9) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 49) (Stat . OUTPUT) (Expr Num . -89) ELSE (Stat . LOAD) (Reg . 13) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 13) (Expr . NOT) (Expr Num . 51) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 4) (Reg . 10) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -86) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 45) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 7) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 13) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 27) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 5) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -13) (Stat . LOAD) (Reg . 4) (Reg . 11) ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 44) (Expr . DIV) (Expr . EQ) (Reg . 6) (Expr . OR) (Expr Num . 20) (Expr Num . -19) (Expr . GT) (Expr Num . -41) (Expr Num . -5) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 13) (Expr . NOT) (Expr Num . -5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 73) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . NOT) (Expr . AND) (Reg . 7) (Reg . 12) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 11) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . LT) (Reg . 9) (Reg . 10) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 4) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -36) (Stat . LOAD) (Reg . 12) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . OR) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 14) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -61) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 27) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -6) END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 9) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Reg . 4) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 74) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . -85) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 7) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 3) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 14) (Expr Num . -3) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 80) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -85) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr Num . 96) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . 37) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 11) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 10) (Stat . LOAD) (Reg . 12) (Expr . AND) (Expr Num . -85) (Reg . 8) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . MUL) (Reg . 4) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 74) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 8) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 93) (Stat . LOAD) (Reg . 2) (Reg . 9) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 5) END (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -10) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 16) END (Stat . OUTPUT) (Expr Num . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 81) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 8) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr . AND) (Reg . 3) (Expr Num . -79) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 8) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 3) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . EQ) (Reg . 14) (Expr Num . -3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 12) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 1) (Reg . 9) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . NOT) (Expr . EQ) (Reg . 3) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -13) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . -81) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -94) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr . DIV) (Reg . 9) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 43) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . EQ) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 3) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . MUL) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr . ADD) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 3) (Expr . LT) (Reg . 5) (Expr Num . 88) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Reg . 13) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . OUTPUT) (Reg . 2) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 3) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -87) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 68) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 2) END END (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . OUTPUT) (Expr Num . -84) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Expr Num . -54) (Stat . LOAD) (Reg . 0) (Reg . 6) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr Num . 68) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 88) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 5) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 14) (Reg . 9) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . -85) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 29) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . -15) (Reg . 14) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 3) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 14) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -87) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . 68) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 2) END END (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . OUTPUT) (Expr Num . -84) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -94) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 93) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 45) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -56) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 4) (Expr Num . -16) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 0) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 20) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 27) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -6) END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . ADD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 6) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -9) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr . EQ) (Expr Num . 25) (Reg . 14) ELSE (Stat . IF) (Expr Num . -5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -15) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 77) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -94) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 9) (Expr Num . -28) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 13) (Reg . 6) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . -52) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Reg . 4) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 74) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END END END (Stat . LOAD) (Reg . 9) (Reg . 9))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 5) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 4) (Expr Num . -16) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . DIV) (Reg . 0) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 11) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -85) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 0) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . -46) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -58) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 29) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 1) (Reg . 9) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 73) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 1) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . OUTPUT) (Expr Num . 80) END END ELSE (Stat . LOAD) (Reg . 7) (Reg . 6) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 11) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 29) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . OUTPUT) (Expr Num . 80) ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 1) (Expr Num . 37) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 2) (Reg . 6) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 33) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr Num . -54) (Stat . LOAD) (Reg . 0) (Reg . 6) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr Num . 96) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 13) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -85) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . DIV) (Reg . 0) (Reg . 0) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . ADD) (Reg . 7) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . ADD) (Expr Num . 40) (Expr Num . -33) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -11) (Stat . LOAD) (Reg . 4) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 43) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . EQ) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -94) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 14) (Expr Num . -3) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 20) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . -15) (Reg . 14) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 0) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 3) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 4) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -94) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . SUB) (Expr . SUB) (Reg . 4) (Expr Num . 68) (Expr Num . -59) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 0) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . MUL) (Reg . 4) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 74) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 3) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . EQ) (Reg . 14) (Expr Num . -3) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 5) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 7))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr . LT) (Reg . 0) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -86) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 14) (Expr Num . -3) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 77) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -43) END END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 16) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -41) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 14) (Expr Num . -3) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 14) (Expr Num . -3) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . DIV) (Reg . 0) (Reg . 0) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . DIV) (Reg . 0) (Reg . 0) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 29) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 9) (Expr Num . -50) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 63) (Reg . 1) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr Num . 68) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 9) (Stat . OUTPUT) (Expr Num . 68) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -94) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 4))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 7) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -82) ELSE (Stat . LOAD) (Reg . 8) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 11) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . MUL) (Expr . SUB) (Reg . 12) (Expr . MUL) (Expr Num . 88) (Reg . 13) (Reg . 12) (Stat . OUTPUT) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 11) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -92) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . EQ) (Reg . 2) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 12) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 8) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr . AND) (Reg . 3) (Expr Num . -79) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 8) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . OUTPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 1) (Reg . 9) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 73) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Reg . 4) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 74) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . -82) ELSE (Stat . LOAD) (Reg . 8) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . -87) (Expr Num . -39) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -45) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . LOAD) (Reg . 13) (Reg . 12) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Expr . MUL) (Reg . 11) (Expr Num . -21) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . OUTPUT) (Expr Num . 80) END END ELSE (Stat . LOAD) (Reg . 7) (Reg . 6) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . OUTPUT) (Expr Num . 80) END END ELSE (Stat . LOAD) (Reg . 7) (Reg . 6) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 8) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr . AND) (Reg . 3) (Expr Num . -79) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 8) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . -15) (Reg . 14) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 0) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 3) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -70) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 18) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 8))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . MUL) (Reg . 5) (Reg . 8) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr . DIV) (Reg . 9) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . ADD) (Reg . 7) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 12) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 5) END (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -10) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 16) END (Stat . OUTPUT) (Expr Num . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . ADD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Expr . MUL) (Reg . 6) (Expr Num . -38) END END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . -15) (Reg . 14) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 0) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 9) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . 14) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -68) (Reg . 1) ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . ADD) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 12) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 1) (Stat . IF) (Expr Num . 16) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Expr Num . -21) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -83) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . MUL) (Reg . 4) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 74) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr . AND) (Expr . ADD) (Expr Num . -51) (Reg . 4) (Reg . 6) (Expr Num . -89) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 8) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr . AND) (Reg . 3) (Expr Num . -79) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 8) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . SUB) (Expr Num . 63) (Reg . 1) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Expr . LT) (Expr . AND) (Expr Num . -43) (Reg . 2) (Expr Num . 51) (Stat . IF) (Expr . MUL) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 2) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . DIV) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 3) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . EQ) (Reg . 14) (Expr Num . -3) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 11) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -64) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr . ADD) (Reg . 7) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 9) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Expr . DIV) (Reg . 11) (Expr Num . -99) (Stat . LOAD) (Reg . 14) (Reg . 4) ELSE (Stat . IF) (Expr Num . -27) (Stat . OUTPUT) (Expr . OR) (Expr Num . 87) (Reg . 6) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 24) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 10) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -69) END ELSE (Stat . IF) (Expr . OR) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 13) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -60) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 3) (Expr Num . -84) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 9) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 42) (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 6) (Expr . EQ) (Expr . DIV) (Reg . 11) (Expr Num . -9) (Reg . 11) ELSE (Stat . OUTPUT) (Expr Num . -52) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Expr Num . -60) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 1) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 4) (Expr Num . -16) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr Num . 68) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 11) END END ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 10) (Reg . 9) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . OUTPUT) (Expr Num . 80) END END ELSE (Stat . LOAD) (Reg . 7) (Reg . 6) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 91) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 29) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 18) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 96) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -85) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 4) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 39) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 4) (Reg . 9) (Stat . OUTPUT) (Expr Num . -3) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 3) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . NOT) (Expr . AND) (Reg . 7) (Reg . 12) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 11) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . LT) (Reg . 9) (Reg . 10) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr . DIV) (Reg . 9) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . -87) (Expr Num . -39) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr . DIV) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 20) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -69) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . -85) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . -83) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . LOAD) (Reg . 13) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . LOAD) (Reg . 4) (Reg . 3) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 14) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -45) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -86) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr . LT) (Reg . 0) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -86) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -45) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -86) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END ELSE (Stat . OUTPUT) (Expr Num . 77) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . NOT) (Expr . EQ) (Reg . 3) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -13) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . -81) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -94) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 14) (Expr Num . -3) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . ADD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 1) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . OUTPUT) (Expr Num . 80) END END ELSE (Stat . LOAD) (Reg . 7) (Reg . 6) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr Num . -73) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 9))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr Num . -29) (Stat . LOAD) (Reg . 12) (Reg . 2) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -51) (Expr Num . 20) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -81) (Stat . IF) (Expr Num . -33) (Stat . LOAD) (Reg . 8) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 12) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . ADD) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 38) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -41) (Expr . AND) (Expr . AND) (Expr . GT) (Reg . 12) (Expr Num . 56) (Reg . 11) (Expr Num . -60) END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 14) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 3) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 5) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 43) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . EQ) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . IF) (Expr Num . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -17) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr Num . -35) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 11) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 5) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 63) (Reg . 1) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END END END (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 94) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 14) (Expr Num . -3) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . MUL) (Expr . EQ) (Reg . 14) (Expr Num . 13) (Expr Num . -61) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . LOAD) (Reg . 7) (Reg . 4) END END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Expr Num . 50) (Reg . 9) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 5) (Expr . MUL) (Reg . 8) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 5) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 33) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 7) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END END ELSE (Stat . OUTPUT) (Expr Num . 77) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . GT) (Expr Num . -30) (Expr Num . -42) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . 26) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 13) (Reg . 11) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 80) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 10) (Expr Num . 71) ELSE (Stat . OUTPUT) (Expr . GT) (Expr Num . 22) (Expr Num . -54) END (Stat . OUTPUT) (Reg . 10) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr . AND) (Expr . ADD) (Expr Num . -51) (Reg . 4) (Reg . 6) (Expr Num . -89) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 7) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr Num . 37) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 33) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 87) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . SUB) (Reg . 0) (Expr Num . 14) (Stat . LOAD) (Reg . 0) (Expr . ADD) (Expr Num . -68) (Reg . 1) ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 0) (Expr . MUL) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . -15) (Reg . 14) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr . DIV) (Reg . 0) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr Num . -19) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 5) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 0) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 4) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . -34) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 13) (Expr Num . 35) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . 63) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Expr Num . 98) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 14) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Expr . LT) (Reg . 0) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . 73) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 5) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . -87) (Expr Num . -39) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Expr Num . -85) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -44) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -28) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 2) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 32) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . 20) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Reg . 8) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -96) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . EQ) (Expr . ADD) (Expr Num . 42) (Expr . DIV) (Reg . 0) (Reg . 0) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -24) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . SUB) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . 77) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 2) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 13) (Reg . 1) (Stat . LOAD) (Reg . 2) (Reg . 6) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 2) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 4) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 13) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 3) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . GT) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . -83) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . DIV) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . 20) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . -64) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . AND) (Expr Num . 69) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 5))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -54) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 96) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 0) (Reg . 11) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . ADD) (Reg . 9) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 5) END (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -10) END ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 35) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 16) END (Stat . OUTPUT) (Expr Num . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . OUTPUT) (Reg . 2) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . ADD) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 3) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . LOAD) (Reg . 14) (Reg . 4) (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 88) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 5) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 14) (Reg . 9) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Expr Num . 68) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . MUL) (Expr . DIV) (Reg . 10) (Reg . 7) (Reg . 0) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . OUTPUT) (Expr . DIV) (Reg . 0) (Reg . 12) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 4) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 5) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 9) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . -43) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . ADD) (Reg . 13) (Expr . OR) (Expr Num . 57) (Expr . SUB) (Reg . 4) (Expr Num . 50) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . -57) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -45) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 80) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . MUL) (Reg . 6) (Expr . EQ) (Expr Num . -46) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 7) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr Num . 96) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . LOAD) (Reg . 9) (Expr Num . 80) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 9) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Expr Num . 13) ELSE (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 48) ELSE (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 4) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . OUTPUT) (Expr Num . -75) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -94) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 9) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 4) (Expr Num . -16) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . OR) (Expr Num . 81) (Expr . ADD) (Reg . 13) (Expr . DIV) (Reg . 9) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Expr . SUB) (Expr Num . 52) (Expr Num . -11) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr . DIV) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 31) END END END END (Stat . LOAD) (Reg . 9) (Reg . 9))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -83) END END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 1) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 77) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -45) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -86) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 5) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Expr . GT) (Expr . MUL) (Reg . 1) (Expr Num . -25) (Reg . 8) ELSE (Stat . IF) (Expr . LT) (Reg . 9) (Reg . 10) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . OUTPUT) (Expr Num . 14) END ELSE (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 8) (Reg . 1) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Expr Num . 20) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . SUB) (Expr . SUB) (Reg . 11) (Expr Num . 68) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr . DIV) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 1) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . -63) (Reg . 14) END END END (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Expr Num . 7) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . ADD) (Expr Num . -14) (Reg . 9) (Expr Num . -84) (Stat . IF) (Expr Num . -7) (Stat . LOAD) (Reg . 4) (Expr Num . -54) ELSE (Stat . LOAD) (Reg . 3) (Expr . AND) (Reg . 4) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -39) (Stat . OUTPUT) (Expr Num . 81) ELSE (Stat . OUTPUT) (Expr Num . 96) END ELSE (Stat . LOAD) (Reg . 12) (Expr . LT) (Reg . 0) (Expr Num . 60) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr Num . -69) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 13) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 96) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 10) (Reg . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Reg . 5) (Reg . 10) (Stat . IF) (Expr Num . 96) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -83) (Stat . OUTPUT) (Expr . SUB) (Expr Num . 50) (Reg . 5) (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 96) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . DIV) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 96) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . LOAD) (Reg . 6) (Reg . 9) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
