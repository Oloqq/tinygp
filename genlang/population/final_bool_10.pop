((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE END END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 5) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 91) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . -69) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 48) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 81) (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Expr Num . -49) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 11) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -69) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 8) END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Reg . 5) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . INPUT) (Reg . 12) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 39) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Expr . NOT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . OR) (Reg . 8) (Expr Num . -15) (Expr Num . -40) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -84) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . EQ) (Expr . EQ) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 12) END (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -34) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . LOAD) (Reg . 14) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Expr . NOT) (Reg . 6) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -60) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 12) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 48) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 1) (Expr Num . -96) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 4) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 20) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . OR) (Reg . 8) (Expr Num . -15) (Expr Num . -40) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 1) (Expr Num . -96) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Expr Num . -53) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 14))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 11) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -66) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 10) (Expr Num . 15) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE END END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 12) (Expr Num . 89) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 13) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 8) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 11) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 12) (Expr Num . 89) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Expr . GT) (Reg . 0) (Expr . NOT) (Reg . 6) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 3) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 12) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . OUTPUT) (Reg . 10) END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr . NOT) (Expr Num . 21) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 10))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 93) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 4) (Expr . OR) (Reg . 6) (Reg . 7) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 5) (Expr Num . 92) ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 5) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -85) (Stat . IF) (Expr Num . 91) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr Num . -73) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -93) (Stat . LOAD) (Reg . 10) (Expr Num . 15) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 12))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE END END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 10) (Expr Num . 15) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -28) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 9) (Expr . GT) (Reg . 14) (Expr Num . -54) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 9) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 93) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 10) (Expr Num . 15) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 24) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -70) (Stat . INPUT) (Reg . 1) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 5) END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 12) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -16) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 84) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Reg . 14) ELSE (Stat . IF) (Expr Num . -57) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 79) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 70) END END END END END ELSE (Stat . LOAD) (Reg . 2) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 8) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -84) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 48) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 49) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -83) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 6) (Expr . OR) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 9) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 14) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 83) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . OR) (Reg . 8) (Expr Num . -15) (Expr Num . -40) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 6) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 6) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 48) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr . AND) (Reg . 5) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 6) (Expr Num . 18) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . INPUT) (Reg . 11))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 5) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . OR) (Reg . 8) (Expr Num . -15) (Expr Num . -40) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . EQ) (Expr . EQ) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 93) (Stat . INPUT) (Reg . 12) END (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 3) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -15) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 3) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -82) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Expr . OR) (Reg . 9) (Expr Num . -16))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE END END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 8) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE END END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 2) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -2) (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . -84) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 12) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -41) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) END END END (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 6) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 10) (Expr Num . 2) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 78) END END END END END END END END END END END (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 13) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . OR) (Reg . 8) (Expr Num . -15) (Expr Num . -40) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 11) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -69) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -28) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . INPUT) (Reg . 3))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . 68) (Stat . IF) (Expr Num . 32) (Stat . OUTPUT) (Expr Num . 38) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -36) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 7) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 3) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 48) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -16) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 2) (Reg . 4) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 41) (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 12) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) (Stat . LOAD) (Reg . 8) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 48) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 48) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -28) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr . AND) (Reg . 5) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 11) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Expr Num . -31) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 2) (Expr Num . -42) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 10) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . LOAD) (Reg . 14) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -30) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 48) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 95) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 93) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 56) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 12) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . INPUT) (Reg . 6))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 20) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END ELSE (Stat . INPUT) (Reg . 4) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -50) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 1) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 7) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 12) (Reg . 4) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 9) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr . AND) (Reg . 6) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . 70) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -60) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . 48) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -96) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 11) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 46) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) ELSE END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . 41) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -69) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Expr Num . 17) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 10) ELSE (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 14) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 12) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -93) (Stat . LOAD) (Reg . 10) (Expr Num . 15) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 12))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -45) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -6) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 7) (Expr . LT) (Reg . 6) (Expr . LT) (Reg . 13) (Expr Num . -58) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr . AND) (Expr . OR) (Reg . 8) (Expr Num . -15) (Expr Num . -40) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 10) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -37) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -100) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . LOAD) (Reg . 10) (Expr Num . 15) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -85) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . INPUT) (Reg . 11) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 83) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 7) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 14) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 8) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 13) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -69) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -38) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 14) (Reg . 11) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 9) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 13) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 12) (Expr Num . 89) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 1) (Expr Num . -88) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 1) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -38) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -63) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 10) (Reg . 14) ELSE (Stat . IF) (Expr Num . -98) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 10) END END END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 8) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 1) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 14) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 50) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . INPUT) (Reg . 11) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -47) (Expr . AND) (Expr . GT) (Reg . 3) (Expr Num . 76) (Expr Num . 22) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -73) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -87) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 14) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -55) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 3) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 48) END END END END END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 14) END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Expr Num . -69) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 19) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
