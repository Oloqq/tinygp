((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 11) END END END END ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 9) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 20) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Expr Num . -100) (Expr Num . 84) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 83) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 5) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END END END END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 84) (Expr . OR) (Reg . 3) (Expr Num . -56) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 99) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 54) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . -24) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 6) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr . EQ) (Expr Num . 23) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 5) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END END END END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 84) (Expr . OR) (Reg . 3) (Expr Num . -56) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 49) END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 6) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . 6) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 0) (Expr Num . -1) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 20) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Expr Num . -100) (Expr Num . 84) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . INPUT) (Reg . 3))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 10) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 7) (Expr . EQ) (Expr . OR) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 99) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 3) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . 5) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 11) END END END END ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 6) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 14) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 10) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -11) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . LOAD) (Reg . 4) (Expr Num . 73) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . LOAD) (Reg . 10) (Expr . AND) (Reg . 3) (Expr Num . -81) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 11) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 3) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 20) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . LT) (Expr Num . -100) (Expr Num . 84) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 5) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END END END END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . 91) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 84) (Expr . OR) (Reg . 3) (Expr Num . -56) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . -70) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . INPUT) (Reg . 7) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 6) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 2))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 4) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 8) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 6) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 10) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END)
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 56) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 6) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 71) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 0) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Expr . GT) (Reg . 4) (Expr Num . -73) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -8) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 9) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 12) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 49) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -77) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 13) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 7) END END END (Stat . LOAD) (Reg . 11) (Reg . 11) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . 5) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 29) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 11) END END END END ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -11) (Stat . IF) (Expr Num . -55) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . LOAD) (Reg . 4) (Expr Num . 73) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . LOAD) (Reg . 10) (Expr . AND) (Reg . 3) (Expr Num . -81) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 3) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 10) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . 6) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 56) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . LOAD) (Reg . 14) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . 40) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -54) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . 7) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 8))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 0) (Expr Num . -1) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . OR) (Expr Num . -94) (Expr Num . 76) (Stat . IF) (Expr Num . 11) (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -10) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 12) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . 34) (Expr Num . -34) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 84) (Expr . OR) (Reg . 3) (Expr Num . -56) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 1))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -40) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Reg . 9) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . -72) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Expr Num . -63) ELSE (Stat . LOAD) (Reg . 5) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . -10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) END END END ELSE (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 74) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 9) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 9) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 4) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Expr . AND) (Reg . 3) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . GT) (Expr Num . -67) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 74) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . OUTPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 0) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . NOT) (Expr Num . 75) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . -24) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -6) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 84) (Expr . OR) (Reg . 3) (Expr Num . -56) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . NOT) (Expr Num . 75) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END)
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 0) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 99) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 20) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Expr Num . -100) (Expr Num . 84) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 54) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . -24) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 11) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 17) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 1))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 11) END END END END ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 6) (Expr Num . -82) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . OUTPUT) (Expr Num . 57) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 14) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 66) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 49) END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . INPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -51) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . 6) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -40) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 20) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . LT) (Expr Num . -100) (Expr Num . 84) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 7) END END END (Stat . LOAD) (Reg . 11) (Reg . 11) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 20) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . LT) (Expr Num . -100) (Expr Num . 84) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 8) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 11) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr . GT) (Reg . 10) (Expr . NOT) (Expr Num . 70) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr Num . 48) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 55) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 54) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 94) (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 29) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -75) (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . -24) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -6) END END (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 99) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 12) END)
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -51) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 10) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr Num . -1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 7) (Expr . EQ) (Expr . OR) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 7) END END END END END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . -10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) END END END ELSE (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 74) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr . NOT) (Reg . 6) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 4) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . LOAD) (Reg . 9) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . -49) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 7) (Expr Num . -17) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Expr . LT) (Reg . 14) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . -46) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . INPUT) (Reg . 3))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 0) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Expr Num . 85) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . -10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) END END END ELSE (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 74) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 10) (Expr Num . 20) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 54) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 54) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 99) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 10))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . 6) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -37) (Stat . INPUT) (Reg . 13) END END END (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 11) (Expr Num . -10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) END END END ELSE (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 74) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 13))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 17) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr Num . -1) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 14))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 22) (Stat . INPUT) (Reg . 0) END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 80) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 13))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 4) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 12) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 13) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 10) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -37) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 3) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -8) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -97) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr Num . 97) (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 99) (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 84) (Expr . OR) (Reg . 3) (Expr Num . -56) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 13) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 4) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 9) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 7) (Reg . 3) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 58) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 13) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 4) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 13) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 13) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Expr . EQ) (Expr Num . 23) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 5) (Expr . NOT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 7) (Reg . 1) ELSE (Stat . INPUT) (Reg . 3) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 6))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr Num . 38) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 17) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 9) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . OUTPUT) (Expr Num . 5) (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 12) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 1) (Expr . GT) (Expr Num . -72) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -27) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 14) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 7) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 56) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . 83) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 14) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -37) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 68) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 1) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 68) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 11) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 12) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 8) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -40) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . -24) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . 6) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -51) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 58) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 4) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END ELSE (Stat . INPUT) (Reg . 4) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 0) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 2) (Expr Num . -3) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 11) END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 71) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Expr . NOT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 2) (Reg . 7) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . -53) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Expr Num . -34) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 84) (Expr . OR) (Reg . 3) (Expr Num . -56) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . NOT) (Expr Num . 75) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END END END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . NOT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 8) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 0) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 58) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 68) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 13) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 5) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 2) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 49) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 12) (Reg . 12) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 2) (Expr Num . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 4) (Expr . NOT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 11) (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . OUTPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr Num . -34) ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 13) (Expr Num . 6) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . LOAD) (Reg . 8) (Expr Num . -37) (Stat . INPUT) (Reg . 13) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Expr Num . -63) ELSE (Stat . LOAD) (Reg . 5) (Reg . 11) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 13) END END END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -55) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . OUTPUT) (Reg . 11) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 6) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Expr . OR) (Expr . NOT) (Expr Num . 75) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 12) (Expr . NOT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 1) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . AND) (Expr Num . -35) (Expr . GT) (Expr . GT) (Reg . 7) (Expr Num . 46) (Expr Num . 13) (Stat . INPUT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 9) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 9) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 1) (Expr Num . -6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Reg . 11) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . NOT) (Reg . 9) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 10) (Reg . 13) ELSE (Stat . IF) (Expr Num . 70) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . GT) (Expr . NOT) (Reg . 0) (Reg . 0) END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 13) END END)
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 11) (Reg . 13) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . LOAD) (Reg . 0) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 3) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 2) END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 78) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 53) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 4) END (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 6) (Reg . 1) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 12) (Reg . 10) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 8) END END END END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 71) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 51) (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 50) ELSE (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . -47) (Stat . LOAD) (Reg . 1) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 58) END ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 2) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . LT) (Expr . NOT) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 3) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 58) (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . -49) (Stat . OUTPUT) (Expr Num . -13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 5) END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 3) (Expr . NOT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 6) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 27) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 4) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 8) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Reg . 1) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 8) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Expr . NOT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 13) (Expr . EQ) (Expr Num . -24) (Expr Num . 6) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Expr Num . -71) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 7) ELSE (Stat . LOAD) (Reg . 13) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . -16) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 11) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 38) END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 13) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 6) (Stat . OUTPUT) (Expr Num . 34) END END END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Reg . 7) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END END END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . EQ) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . IF) (Expr . AND) (Expr Num . -62) (Expr Num . -61) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 12) END END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 6) (Expr Num . -82) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 2) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr . NOT) (Reg . 5) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . OUTPUT) (Reg . 10) END END END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 4) (Reg . 13) END END ELSE (Stat . OUTPUT) (Expr Num . 57) END ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 14) END END END END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . OUTPUT) (Expr Num . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 7) END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 10) END END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 9))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 8) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 4) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr . LT) (Expr . NOT) (Reg . 0) (Reg . 5) (Reg . 3) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))
((Stat . IF) (Expr Num . 33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr . NOT) (Reg . 13) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 6) (Stat . IF) (Expr . NOT) (Reg . 2) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 6) (Expr . NOT) (Reg . 12) END END END END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 10) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . LT) (Expr Num . -67) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . IF) (Expr Num . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Reg . 1) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) END END END END END (Stat . IF) (Expr Num . -1) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 50) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 6) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . OUTPUT) (Reg . 0) END END END (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))
