Creating population
-- TINY GP (Rust version) --
GENERATIONS=200
SEED=0
POPSIZE=1000
CROSSOVER_PROB=0.9
PMUT_PER_NODE=0.05
TSIZE=2
----------------------------------

Generation=0
Avg Fitness=-2.727
Best Fitness=-1
Avg Size=9
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))"

Generation=1
Avg Fitness=-2.588
Best Fitness=-1
Avg Size=9
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 0))"

Generation=2
Avg Fitness=-2.463
Best Fitness=-1
Avg Size=9
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))"

Generation=3
Avg Fitness=-2.372
Best Fitness=-1
Avg Size=9
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 10) (Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))"

Generation=4
Avg Fitness=-2.416
Best Fitness=-1
Avg Size=9
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))"

Generation=5
Avg Fitness=-2.42
Best Fitness=-1
Avg Size=9
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 9) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))"

Generation=6
Avg Fitness=-2.492
Best Fitness=-1
Avg Size=10
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 9) (Stat . OUTPUT) (Reg . 0))"

Generation=7
Avg Fitness=-2.313
Best Fitness=-1
Avg Size=10
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))"

Generation=8
Avg Fitness=-2.409
Best Fitness=-1
Avg Size=10
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 47) (Stat . INPUT) (Reg . 6) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=9
Avg Fitness=-2.492
Best Fitness=-1
Avg Size=10
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))"

Generation=10
Avg Fitness=-2.42
Best Fitness=-1
Avg Size=10
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))"

Generation=11
Avg Fitness=-2.318
Best Fitness=-1
Avg Size=11
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))"

Generation=12
Avg Fitness=-2.212
Best Fitness=-1
Avg Size=11
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))"

Generation=13
Avg Fitness=-2.13
Best Fitness=-1
Avg Size=12
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))"

Generation=14
Avg Fitness=-2.256
Best Fitness=-1
Avg Size=12
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . INPUT) (Reg . 3) (Stat . OUTPUT) (Reg . 0))"

Generation=15
Avg Fitness=-2.256
Best Fitness=-1
Avg Size=11
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))"

Generation=16
Avg Fitness=-2.266
Best Fitness=-1
Avg Size=12
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=17
Avg Fitness=-2.215
Best Fitness=-1
Avg Size=12
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=18
Avg Fitness=-2.17
Best Fitness=-1
Avg Size=12
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=19
Avg Fitness=-2.101
Best Fitness=-1
Avg Size=13
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=20
Avg Fitness=-2.09
Best Fitness=-1
Avg Size=13
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Expr Num . 84) ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 6) END)"

Generation=21
Avg Fitness=-2.123
Best Fitness=-1
Avg Size=14
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=22
Avg Fitness=-2.138
Best Fitness=-1
Avg Size=14
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))"

Generation=23
Avg Fitness=-1.997
Best Fitness=-1
Avg Size=14
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))"

Generation=24
Avg Fitness=-2.115
Best Fitness=-1
Avg Size=14
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))"

Generation=25
Avg Fitness=-2.082
Best Fitness=-1
Avg Size=14
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 3) (Expr Num . 46) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))"

Generation=26
Avg Fitness=-1.952
Best Fitness=-1
Avg Size=15
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0))"

Generation=27
Avg Fitness=-2.011
Best Fitness=-1
Avg Size=15
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 0) (Stat . OUTPUT) (Reg . 0))"

Generation=28
Avg Fitness=-1.916
Best Fitness=-1
Avg Size=15
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 3) END (Stat . INPUT) (Reg . 0))"

Generation=29
Avg Fitness=-2.06
Best Fitness=-1
Avg Size=15
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0))"

Generation=30
Avg Fitness=-1.923
Best Fitness=-1
Avg Size=16
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 0))"

Generation=31
Avg Fitness=-1.876
Best Fitness=-1
Avg Size=16
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END)"

Generation=32
Avg Fitness=-1.96
Best Fitness=-1
Avg Size=17
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END)"

Generation=33
Avg Fitness=-1.865
Best Fitness=-1
Avg Size=17
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END)"

Generation=34
Avg Fitness=-1.937
Best Fitness=-1
Avg Size=17
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Expr Num . 84) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))"

Generation=35
Avg Fitness=-1.856
Best Fitness=-1
Avg Size=17
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 8) END END (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 14) (Expr . AND) (Reg . 6) (Expr Num . 65) END (Stat . OUTPUT) (Reg . 0))"

Generation=36
Avg Fitness=-1.967
Best Fitness=-1
Avg Size=17
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END)"

Generation=37
Avg Fitness=-1.982
Best Fitness=-1
Avg Size=18
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 8) END)"

Generation=38
Avg Fitness=-1.927
Best Fitness=-1
Avg Size=18
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 0) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 9) END END)"

Generation=39
Avg Fitness=-1.986
Best Fitness=-1
Avg Size=18
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . -69) (Stat . INPUT) (Reg . 2) END END)"

Generation=40
Avg Fitness=-1.809
Best Fitness=-1
Avg Size=19
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))"

Generation=41
Avg Fitness=-1.825
Best Fitness=-1
Avg Size=20
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))"

Generation=42
Avg Fitness=-1.955
Best Fitness=-1
Avg Size=20
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 2) (Expr . NOT) (Expr Num . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 4) END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))"

Generation=43
Avg Fitness=-1.868
Best Fitness=-1
Avg Size=20
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 7) END END (Stat . IF) (Expr . NOT) (Expr Num . 84) (Stat . OUTPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0))"

Generation=44
Avg Fitness=-1.742
Best Fitness=-1
Avg Size=21
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 6) END END (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))"

Generation=45
Avg Fitness=-1.766
Best Fitness=-1
Avg Size=21
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 6) END END (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))"

Generation=46
Avg Fitness=-1.855
Best Fitness=-1
Avg Size=21
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 6) END END (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 8) END (Stat . OUTPUT) (Reg . 0))"

Generation=47
Avg Fitness=-1.748
Best Fitness=-1
Avg Size=21
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Expr Num . 17) (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))"

Generation=48
Avg Fitness=-1.857
Best Fitness=-1
Avg Size=21
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END END)"

Generation=49
Avg Fitness=-1.817
Best Fitness=-1
Avg Size=22
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END END)"

Generation=50
Avg Fitness=-1.881
Best Fitness=-1
Avg Size=22
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 14) (Expr Num . 8) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 8) (Reg . 1) END END (Stat . INPUT) (Reg . 10) (Stat . OUTPUT) (Reg . 0))"

Generation=51
Avg Fitness=-1.669
Best Fitness=-1
Avg Size=22
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END)"

Generation=52
Avg Fitness=-1.818
Best Fitness=-1
Avg Size=23
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 7) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END END)"

Generation=53
Avg Fitness=-1.818
Best Fitness=-1
Avg Size=22
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 12) END)"

Generation=54
Avg Fitness=-1.804
Best Fitness=-1
Avg Size=22
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 12) END)"

Generation=55
Avg Fitness=-1.763
Best Fitness=-1
Avg Size=22
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0))"

Generation=56
Avg Fitness=-1.713
Best Fitness=-1
Avg Size=23
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0))"

Generation=57
Avg Fitness=-1.836
Best Fitness=-1
Avg Size=24
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0))"

Generation=58
Avg Fitness=-1.807
Best Fitness=-1
Avg Size=24
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 13) END END END END END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END)"

Generation=59
Avg Fitness=-1.581
Best Fitness=-1
Avg Size=25
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 13) END END END END END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END)"

Generation=60
Avg Fitness=-1.797
Best Fitness=-1
Avg Size=26
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 13) END END END END END END END (Stat . INPUT) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END)"

Generation=61
Avg Fitness=-1.693
Best Fitness=-1
Avg Size=27
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Expr Num . 1) (Expr Num . 1) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))"

Generation=62
Avg Fitness=-1.869
Best Fitness=-1
Avg Size=28
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 13) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Expr Num . 1) (Expr Num . 1) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 2) END END (Stat . INPUT) (Reg . 1) (Stat . OUTPUT) (Reg . 0))"

Generation=63
Avg Fitness=-1.553
Best Fitness=-1
Avg Size=28
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) END END (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 5) END END)"

Generation=64
Avg Fitness=-1.687
Best Fitness=-1
Avg Size=30
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 6) END END (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 5) END END)"

Generation=65
Avg Fitness=-1.584
Best Fitness=-1
Avg Size=31
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END END END (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5))"

Generation=66
Avg Fitness=-1.622
Best Fitness=-1
Avg Size=31
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 11) (Reg . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . INPUT) (Reg . 0))"

Generation=67
Avg Fitness=-1.525
Best Fitness=-1
Avg Size=33
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -28) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . LOAD) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 1) END END)"

Generation=68
Avg Fitness=-1.56
Best Fitness=-1
Avg Size=34
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -28) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . LOAD) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 1) END END)"

Generation=69
Avg Fitness=-1.552
Best Fitness=-1
Avg Size=34
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -28) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . LOAD) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 1) END END)"

Generation=70
Avg Fitness=-1.578
Best Fitness=-1
Avg Size=36
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -28) (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END ELSE (Stat . LOAD) (Reg . 1) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . LOAD) (Reg . 0) (Expr . AND) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 1) END END)"

Generation=71
Avg Fitness=-1.512
Best Fitness=-1
Avg Size=36
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 10) END)"

Generation=72
Avg Fitness=-1.463
Best Fitness=-1
Avg Size=36
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 2) END END END)"

Generation=73
Avg Fitness=-1.497
Best Fitness=-1
Avg Size=37
Best Individual: 
"((Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 1) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 7) (Expr Num . -78) END ELSE (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . INPUT) (Reg . 0) END END END END END END END (Stat . INPUT) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END)"

Generation=74
Avg Fitness=-1.546
Best Fitness=-1
Avg Size=40
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . INPUT) (Reg . 2) END END)"

Generation=75
Avg Fitness=-1.504
Best Fitness=-1
Avg Size=40
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . INPUT) (Reg . 2) END END)"

Generation=76
Avg Fitness=-1.527
Best Fitness=-1
Avg Size=42
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 1) END END)"

Generation=77
Avg Fitness=-1.607
Best Fitness=-1
Avg Size=43
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 8) END (Stat . IF) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END END END)"

Generation=78
Avg Fitness=-1.523
Best Fitness=-1
Avg Size=43
Best Individual: 
"((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END)"

Generation=79
Avg Fitness=-1.566
Best Fitness=-1
Avg Size=44
Best Individual: 
"((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . 19) (Stat . IF) (Expr Num . 50) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 2) END)"

Generation=80
Avg Fitness=-1.503
Best Fitness=-1
Avg Size=44
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Reg . 12) END END (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END)"

Generation=81
Avg Fitness=-1.415
Best Fitness=-1
Avg Size=46
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 13) (Expr Num . -48) END END END ELSE (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 7) END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 14) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -90) (Stat . INPUT) (Reg . 0) END END END END)"

Generation=82
Avg Fitness=-1.488
Best Fitness=-1
Avg Size=46
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END END END END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END)"

Generation=83
Avg Fitness=-1.456
Best Fitness=-1
Avg Size=45
Best Individual: 
"((Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 13) END)"

Generation=84
Avg Fitness=-1.379
Best Fitness=-1
Avg Size=47
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . GT) (Expr Num . -89) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=85
Avg Fitness=-1.468
Best Fitness=-1
Avg Size=47
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 2) (Stat . INPUT) (Reg . 0) END END)"

Generation=86
Avg Fitness=-1.448
Best Fitness=-1
Avg Size=49
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 2) END END)"

Generation=87
Avg Fitness=-1.474
Best Fitness=-1
Avg Size=50
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 2) END END)"

Generation=88
Avg Fitness=-1.45
Best Fitness=-1
Avg Size=51
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 14) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -78) END ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=89
Avg Fitness=-1.404
Best Fitness=-1
Avg Size=52
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 14) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . -78) END ELSE (Stat . INPUT) (Reg . 1) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=90
Avg Fitness=-1.44
Best Fitness=-1
Avg Size=52
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 7) END END END)"

Generation=91
Avg Fitness=-1.497
Best Fitness=-1
Avg Size=52
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . LOAD) (Reg . 0) (Expr Num . -78) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . -89) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=92
Avg Fitness=-1.525
Best Fitness=-1
Avg Size=53
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr . AND) (Reg . 0) (Expr Num . -95) END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 45) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END)"

Generation=93
Avg Fitness=-1.449
Best Fitness=-1
Avg Size=53
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 10) (Expr . OR) (Reg . 0) (Expr Num . -6) END END END (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . LOAD) (Reg . 11) (Reg . 8) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 15) (Stat . LOAD) (Reg . 7) (Expr . AND) (Reg . 9) (Expr Num . -95) END ELSE (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 2) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 14) (Expr . EQ) (Reg . 8) (Expr Num . -95) END END END)"

Generation=94
Avg Fitness=-1.468
Best Fitness=-1
Avg Size=53
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 14) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . NOT) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . 15) END END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . INPUT) (Reg . 13) (Stat . OUTPUT) (Reg . 0))"

Generation=95
Avg Fitness=-1.33
Best Fitness=-1
Avg Size=54
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 13) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 2) END END)"

Generation=96
Avg Fitness=-1.442
Best Fitness=-1
Avg Size=54
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END)"

Generation=97
Avg Fitness=-1.423
Best Fitness=-1
Avg Size=55
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END)"

Generation=98
Avg Fitness=-1.417
Best Fitness=-1
Avg Size=56
Best Individual: 
"((Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 4) END)"

Generation=99
Avg Fitness=-1.473
Best Fitness=-1
Avg Size=59
Best Individual: 
"((Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 4) END)"

Generation=100
Avg Fitness=-1.321
Best Fitness=-1
Avg Size=61
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 4) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 13) END END)"

Generation=101
Avg Fitness=-1.386
Best Fitness=-1
Avg Size=64
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 13) (Expr Num . -95) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END END END END END END)"

Generation=102
Avg Fitness=-1.356
Best Fitness=-1
Avg Size=65
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 13) (Expr Num . -95) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Reg . 6) END END END END END (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END END END END END END)"

Generation=103
Avg Fitness=-1.354
Best Fitness=-1
Avg Size=64
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 10) END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 91) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 2) (Reg . 1) (Stat . INPUT) (Reg . 0) END END END END)"

Generation=104
Avg Fitness=-1.309
Best Fitness=-1
Avg Size=64
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -92) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . GT) (Reg . 0) (Reg . 14) (Stat . OUTPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 2) (Reg . 11) ELSE (Stat . INPUT) (Reg . 1) END)"

Generation=105
Avg Fitness=-1.351
Best Fitness=-1
Avg Size=65
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END END (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 0) (Stat . LOAD) (Reg . 7) (Expr . AND) (Reg . 9) (Expr Num . -95) END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 13) END)"

Generation=106
Avg Fitness=-1.318
Best Fitness=-1
Avg Size=66
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 12) END END (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END END END)"

Generation=107
Avg Fitness=-1.304
Best Fitness=-1
Avg Size=66
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 12) END END (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END END END)"

Generation=108
Avg Fitness=-1.423
Best Fitness=-1
Avg Size=67
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 12) END END (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END END END)"

Generation=109
Avg Fitness=-1.344
Best Fitness=-1
Avg Size=69
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 14) END (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 29) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 10) END END END END END END)"

Generation=110
Avg Fitness=-1.304
Best Fitness=-1
Avg Size=70
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) END (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) END END END END END END END)"

Generation=111
Avg Fitness=-1.383
Best Fitness=-1
Avg Size=70
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 14) (Stat . IF) (Expr Num . 40) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . -13) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END)"

Generation=112
Avg Fitness=-1.367
Best Fitness=-1
Avg Size=70
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 14) (Stat . IF) (Expr Num . 40) (Stat . LOAD) (Reg . 0) (Reg . 3) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . -13) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 64) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 6) END END END END END (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 6) END)"

Generation=113
Avg Fitness=-1.253
Best Fitness=-1
Avg Size=72
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 10) END END (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 5) (Stat . LOAD) (Reg . 11) (Reg . 4) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END END END END END)"

Generation=114
Avg Fitness=-1.357
Best Fitness=-1
Avg Size=74
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 17) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 1) END (Stat . OUTPUT) (Reg . 0))"

Generation=115
Avg Fitness=-1.381
Best Fitness=-1
Avg Size=76
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 1) (Stat . OUTPUT) (Expr Num . 31) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 14) END END)"

Generation=116
Avg Fitness=-1.266
Best Fitness=-1
Avg Size=76
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 13) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . NOT) (Expr Num . 8) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 9) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 13) (Expr Num . -95) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END END END END (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 1) (Stat . OUTPUT) (Expr Num . 31) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 14) END END)"

Generation=117
Avg Fitness=-1.292
Best Fitness=-1
Avg Size=77
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 4) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -53) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 4) (Stat . INPUT) (Reg . 10) END END)"

Generation=118
Avg Fitness=-1.269
Best Fitness=-1
Avg Size=78
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 9) (Expr Num . 15) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END END END)"

Generation=119
Avg Fitness=-1.236
Best Fitness=-1
Avg Size=79
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Reg . 9) END END (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . AND) (Reg . 9) (Expr Num . 15) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END END END)"

Generation=120
Avg Fitness=-1.375
Best Fitness=-1
Avg Size=80
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . 61) END END ELSE (Stat . INPUT) (Reg . 8) END END END (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 2) END END)"

Generation=121
Avg Fitness=-1.255
Best Fitness=-1
Avg Size=80
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 8) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 4) END END END END END END (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END)"

Generation=122
Avg Fitness=-1.39
Best Fitness=-1
Avg Size=81
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . LOAD) (Reg . 1) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 8) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 12) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 13) END END)"

Generation=123
Avg Fitness=-1.265
Best Fitness=-1
Avg Size=82
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . 61) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 5) END END (Stat . IF) (Expr . AND) (Reg . 6) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . LOAD) (Reg . 0) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 0) END END)"

Generation=124
Avg Fitness=-1.365
Best Fitness=-1
Avg Size=82
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 0) END)"

Generation=125
Avg Fitness=-1.281
Best Fitness=-1
Avg Size=81
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 5) END END (Stat . INPUT) (Reg . 4) END ELSE (Stat . INPUT) (Reg . 12) (Stat . INPUT) (Reg . 0) END)"

Generation=126
Avg Fitness=-1.253
Best Fitness=-1
Avg Size=86
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Reg . 4) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 2) ELSE (Stat . IF) (Expr . NOT) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END)"

Generation=127
Avg Fitness=-1.357
Best Fitness=-1
Avg Size=86
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . -20) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 52) END ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -78) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 0) END END END END)"

Generation=128
Avg Fitness=-1.258
Best Fitness=-1
Avg Size=85
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 4) END END ELSE (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . GT) (Reg . 14) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 0) END END)"

Generation=129
Avg Fitness=-1.382
Best Fitness=-1
Avg Size=86
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 14) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 9) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 8) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 60) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Reg . 12) END END END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 0) END END)"

Generation=130
Avg Fitness=-1.373
Best Fitness=-1
Avg Size=89
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . GT) (Expr . AND) (Reg . 0) (Reg . 14) (Expr . AND) (Reg . 13) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 5) (Stat . INPUT) (Reg . 10) END END END END (Stat . IF) (Expr . LT) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 6) END)"

Generation=131
Avg Fitness=-1.406
Best Fitness=-1
Avg Size=89
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) END (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 9) END END END END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 12) END END END END END END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) END END END END)"

Generation=132
Avg Fitness=-1.327
Best Fitness=-1
Avg Size=91
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . 65) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3))"

Generation=133
Avg Fitness=-1.336
Best Fitness=-1
Avg Size=92
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 2) (Expr Num . 65) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 3))"

Generation=134
Avg Fitness=-1.276
Best Fitness=-1
Avg Size=91
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=135
Avg Fitness=-1.212
Best Fitness=-1
Avg Size=93
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . EQ) (Expr Num . 71) (Reg . 4) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=136
Avg Fitness=-1.248
Best Fitness=-1
Avg Size=95
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END END (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . AND) (Reg . 7) (Reg . 0) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 12) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . EQ) (Reg . 4) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 4) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -92) (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END END END)"

Generation=137
Avg Fitness=-1.303
Best Fitness=-1
Avg Size=95
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Expr . AND) (Reg . 1) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . EQ) (Reg . 4) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=138
Avg Fitness=-1.27
Best Fitness=-1
Avg Size=96
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END END END)"

Generation=139
Avg Fitness=-1.458
Best Fitness=-1
Avg Size=97
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr . NOT) (Reg . 9) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 6) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . INPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . IF) (Expr . EQ) (Reg . 13) (Expr Num . 61) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 2) END (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 4) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr . LT) (Expr . LT) (Reg . 6) (Reg . 0) (Reg . 12) (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 6) END)"

Generation=140
Avg Fitness=-1.315
Best Fitness=-1
Avg Size=96
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 6) (Expr . AND) (Reg . 1) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . EQ) (Reg . 4) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=141
Avg Fitness=-1.338
Best Fitness=-1
Avg Size=93
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 8) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr . AND) (Reg . 3) (Expr Num . 21) (Stat . INPUT) (Reg . 11) END (Stat . INPUT) (Reg . 10) END)"

Generation=142
Avg Fitness=-1.315
Best Fitness=-1
Avg Size=95
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 0) END)"

Generation=143
Avg Fitness=-1.298
Best Fitness=-1
Avg Size=101
Best Individual: 
"((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . GT) (Reg . 0) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 10) END END END END (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5))"

Generation=144
Avg Fitness=-1.398
Best Fitness=-1
Avg Size=104
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 9) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . LOAD) (Reg . 10) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 11) END)"

Generation=145
Avg Fitness=-1.411
Best Fitness=-1
Avg Size=106
Best Individual: 
"((Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 88) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -92) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 6) (Stat . INPUT) (Reg . 1))"

Generation=146
Avg Fitness=-1.269
Best Fitness=-1
Avg Size=108
Best Individual: 
"((Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr . AND) (Reg . 4) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 88) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -92) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END END END END (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 9) (Reg . 6) (Stat . INPUT) (Reg . 1))"

Generation=147
Avg Fitness=-1.31
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=148
Avg Fitness=-1.299
Best Fitness=-1
Avg Size=104
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=149
Avg Fitness=-1.247
Best Fitness=-1
Avg Size=106
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 8) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -17) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 0) (Reg . 8) END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 3) (Reg . 6) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 6) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=150
Avg Fitness=-1.264
Best Fitness=-1
Avg Size=106
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 13) END END)"

Generation=151
Avg Fitness=-1.316
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 14) END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . -33) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 13) END END)"

Generation=152
Avg Fitness=-1.272
Best Fitness=-1
Avg Size=110
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 4) END (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . AND) (Expr Num . -73) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -34) (Stat . LOAD) (Reg . 8) (Reg . 9) END END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END END END)"

Generation=153
Avg Fitness=-1.324
Best Fitness=-1
Avg Size=110
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 13) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 2) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 12) END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . IF) (Reg . 9) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END END END END END END END END (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 9) (Reg . 8) END)"

Generation=154
Avg Fitness=-1.219
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -33) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END)"

Generation=155
Avg Fitness=-1.369
Best Fitness=-1
Avg Size=110
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 11) (Reg . 6) ELSE (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 1) END END ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -92) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . OR) (Reg . 10) (Expr . NOT) (Expr . AND) (Reg . 0) (Expr Num . -33) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 3) END END (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END)"

Generation=156
Avg Fitness=-1.308
Best Fitness=-1
Avg Size=111
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 72) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . NOT) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END)"

Generation=157
Avg Fitness=-1.23
Best Fitness=-1
Avg Size=113
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 6) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 72) (Stat . LOAD) (Reg . 0) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . NOT) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END)"

Generation=158
Avg Fitness=-1.236
Best Fitness=-1
Avg Size=114
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 11) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -95) (Stat . LOAD) (Reg . 8) (Reg . 1) END END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr . LT) (Reg . 14) (Expr Num . 64) END)"

Generation=159
Avg Fitness=-1.297
Best Fitness=-1
Avg Size=113
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 6) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)"

Generation=160
Avg Fitness=-1.305
Best Fitness=-1
Avg Size=112
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 6) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)"

Generation=161
Avg Fitness=-1.366
Best Fitness=-1
Avg Size=112
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END END END END END END)"

Generation=162
Avg Fitness=-1.269
Best Fitness=-1
Avg Size=110
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END END END END END END)"

Generation=163
Avg Fitness=-1.437
Best Fitness=-1
Avg Size=111
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 6) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -89) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr . EQ) (Reg . 7) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 9) (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . OUTPUT) (Expr Num . 41) END END END END END (Stat . INPUT) (Reg . 13))"

Generation=164
Avg Fitness=-1.321
Best Fitness=-1
Avg Size=109
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 6) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=165
Avg Fitness=-1.305
Best Fitness=-1
Avg Size=108
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 6) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=166
Avg Fitness=-1.3
Best Fitness=-1
Avg Size=106
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 6) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . OUTPUT) (Expr Num . 65) END END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Expr Num . -92) ELSE (Stat . INPUT) (Reg . 9) END END END END END END ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -79) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) END END END END END)"

Generation=167
Avg Fitness=-1.327
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)"

Generation=168
Avg Fitness=-1.244
Best Fitness=-1
Avg Size=109
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Expr Num . 15) (Stat . LOAD) (Reg . 12) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 13) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 67) (Stat . OUTPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Expr Num . 67) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 9) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 4) END END END END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 4) ELSE (Stat . INPUT) (Reg . 2) END)"

Generation=169
Avg Fitness=-1.259
Best Fitness=-1
Avg Size=109
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Expr Num . -95) (Reg . 3) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 0) END)"

Generation=170
Avg Fitness=-1.379
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Reg . 10) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Expr Num . -95) (Reg . 3) (Stat . INPUT) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 0) END)"

Generation=171
Avg Fitness=-1.271
Best Fitness=-1
Avg Size=106
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 8) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -33) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 9) END END END END END END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)"

Generation=172
Avg Fitness=-1.257
Best Fitness=-1
Avg Size=108
Best Individual: 
"((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 20) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -36) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -17) (Stat . LOAD) (Reg . 6) (Expr Num . -77) END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 13) END END)"

Generation=173
Avg Fitness=-1.374
Best Fitness=-1
Avg Size=109
Best Individual: 
"((Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 20) END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -36) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -17) (Stat . LOAD) (Reg . 6) (Expr Num . -77) END END (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END END END (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 13) END END)"

Generation=174
Avg Fitness=-1.305
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 1) END (Stat . IF) (Expr . AND) (Reg . 1) (Expr Num . 15) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 8) END (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 10) END)"

Generation=175
Avg Fitness=-1.232
Best Fitness=-1
Avg Size=111
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . INPUT) (Reg . 13) END END END END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . -33) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 1) (Reg . 14) ELSE (Stat . IF) (Expr Num . -39) (Stat . IF) (Reg . 9) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -33) (Stat . INPUT) (Reg . 7) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 8) (Reg . 7) (Stat . IF) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 8) END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) END END END END END)"

Generation=176
Avg Fitness=-1.342
Best Fitness=-1
Avg Size=112
Best Individual: 
"((Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 90) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 4) END ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . OR) (Expr Num . 61) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) END END END END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 12) END END END END END END END END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 0) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 2) END END END (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 1) END END END END END (Stat . IF) (Expr . NOT) (Reg . 14) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 9) (Stat . IF) (Expr Num . -39) (Stat . IF) (Expr . EQ) (Reg . 13) (Expr . GT) (Reg . 0) (Reg . 2) (Stat . LOAD) (Reg . 2) (Reg . 7) (Stat . IF) (Expr Num . 1) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 14) END (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 0) END END END ELSE (Stat . INPUT) (Reg . 7) END)"

Generation=177
Avg Fitness=-1.344
Best Fitness=-1
Avg Size=113
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) END END)"

Generation=178
Avg Fitness=-1.307
Best Fitness=-1
Avg Size=116
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 1) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 2) (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 12) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END END END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) END END)"

Generation=179
Avg Fitness=-1.298
Best Fitness=-1
Avg Size=116
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . AND) (Reg . 14) (Reg . 5) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 14) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 13))"

Generation=180
Avg Fitness=-1.34
Best Fitness=-1
Avg Size=120
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 15) (Stat . IF) (Expr . OR) (Reg . 12) (Expr . AND) (Reg . 14) (Reg . 5) (Stat . LOAD) (Reg . 12) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . AND) (Reg . 12) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 7) (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 14) (Stat . INPUT) (Reg . 0) END END END END END END END ELSE (Stat . INPUT) (Reg . 10) END END (Stat . INPUT) (Reg . 13))"

Generation=181
Avg Fitness=-1.209
Best Fitness=-1
Avg Size=120
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 11) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END END)"

Generation=182
Avg Fitness=-1.333
Best Fitness=-1
Avg Size=118
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . -92) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 3) END END END END END ELSE (Stat . OUTPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . INPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr . AND) (Reg . 14) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 11) (Reg . 12) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END END)"

Generation=183
Avg Fitness=-1.263
Best Fitness=-1
Avg Size=114
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 40) (Stat . INPUT) (Reg . 11) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 2) (Stat . INPUT) (Reg . 6) END END END (Stat . IF) (Expr Num . -92) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 1) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . LT) (Reg . 0) (Reg . 10) (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . OUTPUT) (Expr Num . -50) (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 13) END END)"

Generation=184
Avg Fitness=-1.197
Best Fitness=-1
Avg Size=118
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)"

Generation=185
Avg Fitness=-1.249
Best Fitness=-1
Avg Size=119
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)"

Generation=186
Avg Fitness=-1.332
Best Fitness=-1
Avg Size=121
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 8) (Expr Num . -95) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Expr . GT) (Reg . 3) (Expr Num . 1) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 7) END END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr Num . 16) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 14) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)"

Generation=187
Avg Fitness=-1.227
Best Fitness=-1
Avg Size=118
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)"

Generation=188
Avg Fitness=-1.296
Best Fitness=-1
Avg Size=118
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)"

Generation=189
Avg Fitness=-1.359
Best Fitness=-1
Avg Size=118
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)"

Generation=190
Avg Fitness=-1.318
Best Fitness=-1
Avg Size=118
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 8) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr Num . 15) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 0) END END END END END ELSE (Stat . INPUT) (Reg . 14) (Stat . INPUT) (Reg . 12) END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END)"

Generation=191
Avg Fitness=-1.292
Best Fitness=-1
Avg Size=118
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)"

Generation=192
Avg Fitness=-1.301
Best Fitness=-1
Avg Size=123
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)"

Generation=193
Avg Fitness=-1.27
Best Fitness=-1
Avg Size=126
Best Individual: 
"((Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . IF) (Expr . EQ) (Reg . 0) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 36) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 7) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Reg . 3) (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 3) END END END END END END END END END (Stat . IF) (Expr Num . -68) (Stat . INPUT) (Reg . 6) ELSE (Stat . INPUT) (Reg . 14) END)"

Generation=194
Avg Fitness=-1.313
Best Fitness=-1
Avg Size=121
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 13) (Reg . 11) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 65) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr . GT) (Reg . 0) (Expr Num . 67) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Reg . 3) (Stat . INPUT) (Reg . 1) END END END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr . GT) (Expr . AND) (Expr Num . 71) (Expr Num . 85) (Reg . 14) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 62) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 6) END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 12) END END END END (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 3) END END END ELSE (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 13) (Reg . 9) END END)"

Generation=195
Avg Fitness=-1.279
Best Fitness=-1
Avg Size=121
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)"

Generation=196
Avg Fitness=-1.264
Best Fitness=-1
Avg Size=121
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 2) END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END (Stat . IF) (Expr Num . -26) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr . OR) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 64) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 1) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Expr Num . -17) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . 15) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 3) (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr Num . 17) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr . AND) (Expr Num . -99) (Reg . 1) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 0) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . -89) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 0) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 64) (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 13) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 12) (Reg . 6) END END ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END END END END END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END END END END)"

Generation=197
Avg Fitness=-1.348
Best Fitness=-1
Avg Size=120
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . EQ) (Reg . 10) (Expr Num . 1) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -87) (Stat . INPUT) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -54) (Stat . IF) (Reg . 13) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 83) (Stat . IF) (Reg . 12) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 0) (Stat . INPUT) (Reg . 4) END END END (Stat . LOAD) (Reg . 0) (Reg . 11) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 6) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 5) END END END END END ELSE (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 14) END END END ELSE (Stat . INPUT) (Reg . 14) END END END (Stat . IF) (Expr Num . 8) (Stat . INPUT) (Reg . 7) END)"

Generation=198
Avg Fitness=-1.228
Best Fitness=-1
Avg Size=122
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 6) (Expr Num . 65) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 6) (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr . GT) (Reg . 12) (Expr Num . 65) (Stat . INPUT) (Reg . 11) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Expr . EQ) (Reg . 5) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Expr . LT) (Reg . 14) (Expr Num . 64) (Stat . IF) (Expr Num . -33) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . -34) (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . 46) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 61) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 8) (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 6) END END END END END (Stat . INPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr . AND) (Reg . 8) (Reg . 0) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END ELSE (Stat . IF) (Expr Num . 67) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . -89) (Stat . IF) (Expr Num . 72) (Stat . IF) (Reg . 3) (Stat . IF) (Expr . GT) (Reg . 4) (Expr Num . 65) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 3) END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Reg . 0) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 9) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr . LT) (Reg . 11) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END END END END END END ELSE (Stat . INPUT) (Reg . 13) END END ELSE (Stat . INPUT) (Reg . 4) END END (Stat . IF) (Expr Num . 61) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -72) END)"

Generation=199
Avg Fitness=-1.251
Best Fitness=-1
Avg Size=121
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 9) END (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Expr . GT) (Reg . 11) (Reg . 2) (Stat . IF) (Expr Num . -26) (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 10) (Reg . 11) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 14) ELSE (Stat . INPUT) (Reg . 11) END END END)"

Generation=200
Avg Fitness=-1.299
Best Fitness=-1
Avg Size=120
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . OUTPUT) (Reg . 0) (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -33) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 11) END END (Stat . IF) (Expr Num . -95) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 2) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 7) (Reg . 0) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . EQ) (Reg . 5) (Expr Num . -95) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -95) (Stat . INPUT) (Reg . 7) END ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 13) (Reg . 0) END END END (Stat . IF) (Reg . 14) (Stat . IF) (Expr . AND) (Reg . 0) (Reg . 13) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 12) (Expr . NOT) (Expr . GT) (Reg . 0) (Reg . 2) END ELSE (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr Num . -20) (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 13) END END END END END END END END END ELSE (Stat . IF) (Expr Num . 8) (Stat . IF) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 12) (Expr Num . -95) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 1) END END END END END END ELSE (Stat . IF) (Expr . AND) (Reg . 10) (Expr Num . -95) (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 11) (Stat . INPUT) (Reg . 8) END END END END END)"

PROBLEM UNSOLVED
