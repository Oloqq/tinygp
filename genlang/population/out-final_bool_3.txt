Creating population
-- TINY GP (Rust version) --
GENERATIONS=100
SEED=0
POPSIZE=1000
CROSSOVER_PROB=0.9
PMUT_PER_NODE=0.05
TSIZE=2
----------------------------------

Generation=0
Avg Fitness=-5.056
Best Fitness=-1
Avg Size=16
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -25) (Stat . IF) (Expr . NOT) (Reg . 7) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 12) (Reg . 7) END ELSE (Stat . INPUT) (Reg . 0) END (Stat . LOAD) (Reg . 1) (Expr . NOT) (Reg . 4) (Stat . OUTPUT) (Reg . 0))"

Generation=1
Avg Fitness=-3.171
Best Fitness=-1
Avg Size=15
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 6) (Expr . MUL) (Expr Num . 85) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=2
Avg Fitness=-2.249
Best Fitness=-1
Avg Size=15
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 6) (Expr . MUL) (Expr Num . 85) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=3
Avg Fitness=-2.146
Best Fitness=-1
Avg Size=15
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 6) (Expr . MUL) (Expr Num . 85) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=4
Avg Fitness=-2.116
Best Fitness=-1
Avg Size=16
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 6) (Expr . MUL) (Expr Num . 85) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=5
Avg Fitness=-2.064
Best Fitness=-1
Avg Size=17
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . LOAD) (Reg . 6) (Expr . MUL) (Expr Num . 85) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=6
Avg Fitness=-2.178
Best Fitness=-1
Avg Size=18
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -70) (Stat . LOAD) (Reg . 3) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . -23) END (Stat . INPUT) (Reg . 11) (Stat . OUTPUT) (Reg . 0))"

Generation=7
Avg Fitness=-2.154
Best Fitness=-1
Avg Size=18
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 84) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . INPUT) (Reg . 0) END END (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 2) (Reg . 10) ELSE (Stat . INPUT) (Reg . 7) END (Stat . OUTPUT) (Reg . 0))"

Generation=8
Avg Fitness=-2.112
Best Fitness=-1
Avg Size=19
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 4) (Reg . 0) (Stat . LOAD) (Reg . 2) (Reg . 7) (Stat . OUTPUT) (Reg . 0))"

Generation=9
Avg Fitness=-2.066
Best Fitness=-1
Avg Size=21
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . AND) (Expr Num . 42) (Expr Num . -76) (Stat . LOAD) (Reg . 8) (Expr . AND) (Reg . 1) (Reg . 14) ELSE (Stat . LOAD) (Reg . 13) (Expr . MUL) (Reg . 12) (Expr Num . -49) END ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 9) (Expr Num . -80) (Stat . OUTPUT) (Reg . 0))"

Generation=10
Avg Fitness=-1.862
Best Fitness=-1
Avg Size=23
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr . AND) (Expr Num . 42) (Expr Num . -76) (Stat . LOAD) (Reg . 8) (Expr . AND) (Reg . 1) (Reg . 14) ELSE (Stat . LOAD) (Reg . 13) (Expr . MUL) (Reg . 12) (Expr Num . -49) END ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 9) (Expr Num . -80) (Stat . OUTPUT) (Reg . 0))"

Generation=11
Avg Fitness=-1.927
Best Fitness=-1
Avg Size=24
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 83) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -39) (Stat . IF) (Expr Num . -47) (Stat . IF) (Expr Num . -86) (Stat . OUTPUT) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 61) END ELSE (Stat . OUTPUT) (Expr Num . -33) END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 92) END END ELSE (Stat . OUTPUT) (Expr Num . 9) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -67) END END END (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 19) END (Stat . OUTPUT) (Reg . 0))"

Generation=12
Avg Fitness=-1.801
Best Fitness=-1
Avg Size=26
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -4) (Stat . IF) (Expr . ADD) (Expr Num . -9) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Expr Num . 95) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Reg . 4) ELSE (Stat . LOAD) (Reg . 2) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 13) END (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=13
Avg Fitness=-1.768
Best Fitness=-1
Avg Size=28
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -4) (Stat . IF) (Expr . ADD) (Expr Num . -9) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Expr Num . 95) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Reg . 4) ELSE (Stat . LOAD) (Reg . 2) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 13) END (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=14
Avg Fitness=-1.894
Best Fitness=-1
Avg Size=28
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -4) (Stat . IF) (Expr . ADD) (Expr Num . -9) (Expr Num . -95) (Stat . LOAD) (Reg . 6) (Expr Num . 95) ELSE (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 11) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 13) (Reg . 4) ELSE (Stat . LOAD) (Reg . 2) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 13) END (Stat . INPUT) (Reg . 6) (Stat . OUTPUT) (Reg . 0))"

Generation=15
Avg Fitness=-1.843
Best Fitness=-1
Avg Size=29
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 13) (Expr Num . 59) (Stat . INPUT) (Reg . 7) (Stat . OUTPUT) (Reg . 0))"

Generation=16
Avg Fitness=-1.781
Best Fitness=-1
Avg Size=31
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Reg . 1) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr . EQ) (Expr Num . -63) (Expr Num . 75) (Stat . IF) (Expr Num . -83) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . 43) END ELSE (Stat . INPUT) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 6) (Reg . 10) END (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))"

Generation=17
Avg Fitness=-1.799
Best Fitness=-1
Avg Size=33
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 83) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -39) (Stat . IF) (Expr Num . -47) (Stat . IF) (Expr Num . -86) (Stat . OUTPUT) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 61) END ELSE (Stat . OUTPUT) (Expr Num . -33) END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 92) END END ELSE (Stat . OUTPUT) (Expr Num . 9) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -67) END END END (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 19) END (Stat . OUTPUT) (Reg . 0))"

Generation=18
Avg Fitness=-1.783
Best Fitness=-1
Avg Size=34
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . AND) (Expr Num . 83) (Reg . 14) (Stat . INPUT) (Reg . 14) ELSE (Stat . IF) (Expr Num . -86) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 11) (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . -39) (Stat . IF) (Expr Num . -47) (Stat . IF) (Expr Num . -86) (Stat . OUTPUT) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 61) END ELSE (Stat . OUTPUT) (Expr Num . -33) END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) (Stat . INPUT) (Reg . 10) ELSE (Stat . OUTPUT) (Expr Num . 92) END END ELSE (Stat . OUTPUT) (Expr Num . 9) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -67) END END END (Stat . IF) (Expr Num . -48) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 19) END (Stat . OUTPUT) (Reg . 0))"

Generation=19
Avg Fitness=-1.666
Best Fitness=-1
Avg Size=36
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 12) (Reg . 13) END (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 12) ELSE (Stat . INPUT) (Reg . 9) END END (Stat . OUTPUT) (Reg . 0))"

Generation=20
Avg Fitness=-1.591
Best Fitness=-1
Avg Size=37
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 50) (Stat . IF) (Expr Num . 77) (Stat . LOAD) (Reg . 8) (Expr Num . 85) ELSE (Stat . LOAD) (Reg . 3) (Expr . MUL) (Reg . 12) (Expr Num . -49) END ELSE (Stat . INPUT) (Reg . 12) END (Stat . LOAD) (Reg . 1) (Reg . 0) (Stat . OUTPUT) (Reg . 0))"

Generation=21
Avg Fitness=-1.77
Best Fitness=-1
Avg Size=37
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 0) END (Stat . INPUT) (Reg . 8) (Stat . OUTPUT) (Reg . 0))"

Generation=22
Avg Fitness=-1.744
Best Fitness=-1
Avg Size=38
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . -74) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 10) END END (Stat . IF) (Expr . GT) (Expr Num . 91) (Expr Num . -36) (Stat . LOAD) (Reg . 2) (Reg . 10) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))"

Generation=23
Avg Fitness=-1.736
Best Fitness=-1
Avg Size=38
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 48) (Stat . LOAD) (Reg . 1) (Expr Num . 64) ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 6) (Expr Num . -91) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 7) (Expr Num . 9) ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=24
Avg Fitness=-1.839
Best Fitness=-1
Avg Size=43
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . IF) (Expr Num . 48) (Stat . LOAD) (Reg . 1) (Expr Num . 64) ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . OUTPUT) (Reg . 7) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 6) (Expr Num . -91) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 7) (Expr Num . 9) ELSE (Stat . INPUT) (Reg . 1) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=25
Avg Fitness=-1.567
Best Fitness=-1
Avg Size=43
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 84) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Expr . EQ) (Reg . 11) (Reg . 9) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 14) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 65) END END END (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . LOAD) (Reg . 6) (Expr Num . -1) END END (Stat . OUTPUT) (Reg . 0))"

Generation=26
Avg Fitness=-1.684
Best Fitness=-1
Avg Size=44
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 84) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . EQ) (Expr Num . -22) (Expr Num . -96) ELSE (Stat . IF) (Expr . EQ) (Reg . 11) (Reg . 9) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 14) (Reg . 14) END END ELSE (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 65) END END END (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 2) (Expr Num . 85) ELSE (Stat . INPUT) (Reg . 4) END END (Stat . OUTPUT) (Reg . 0))"

Generation=27
Avg Fitness=-1.683
Best Fitness=-1
Avg Size=46
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . 9) END (Stat . IF) (Expr Num . -65) (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . 24) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . -30) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))"

Generation=28
Avg Fitness=-1.615
Best Fitness=-1
Avg Size=48
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 48) (Stat . IF) (Expr Num . 85) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 9) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . 9) END (Stat . IF) (Expr Num . -65) (Stat . LOAD) (Reg . 1) (Expr . LT) (Expr Num . 24) (Reg . 0) ELSE (Stat . IF) (Expr . MUL) (Expr Num . -30) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 10) END END (Stat . OUTPUT) (Reg . 0))"

Generation=29
Avg Fitness=-1.633
Best Fitness=-1
Avg Size=48
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 8) (Expr . EQ) (Expr Num . 28) (Expr Num . -89) END (Stat . IF) (Expr Num . 76) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 6) (Expr Num . -9) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . -98) (Expr Num . 2) (Stat . LOAD) (Reg . 11) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 42) END ELSE (Stat . OUTPUT) (Expr Num . 67) END ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=30
Avg Fitness=-1.537
Best Fitness=-1
Avg Size=50
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 0) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 8) (Expr . EQ) (Expr Num . 28) (Expr Num . -89) END (Stat . IF) (Expr Num . 76) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 6) (Expr Num . -9) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . -98) (Expr Num . 2) (Stat . LOAD) (Reg . 11) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 42) END ELSE (Stat . OUTPUT) (Expr Num . 67) END ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Reg . 0) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=31
Avg Fitness=-1.609
Best Fitness=-1
Avg Size=53
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 9) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . IF) (Expr Num . 57) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 14) (Reg . 9) ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 6) (Expr Num . -91) (Reg . 14) END END ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Expr Num . -55) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . -28) (Reg . 14) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 10) (Expr Num . 48) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 47) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=32
Avg Fitness=-1.706
Best Fitness=-1
Avg Size=57
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr Num . -46) ELSE (Stat . IF) (Expr Num . 10) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . -65) (Stat . IF) (Expr . AND) (Expr . LT) (Expr Num . -41) (Reg . 11) (Reg . 8) (Stat . LOAD) (Reg . 5) (Reg . 10) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr Num . -70) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -70) END END ELSE (Stat . OUTPUT) (Expr . DIV) (Expr Num . 67) (Expr Num . -48) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=33
Avg Fitness=-1.558
Best Fitness=-1
Avg Size=56
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 10) (Reg . 7) ELSE (Stat . INPUT) (Reg . 12) END (Stat . IF) (Expr Num . -51) (Stat . INPUT) (Reg . 9) ELSE (Stat . IF) (Expr Num . -67) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Reg . 5) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 36) END ELSE (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 2) (Expr Num . 48) ELSE (Stat . LOAD) (Reg . 12) (Expr . DIV) (Expr Num . 67) (Expr . SUB) (Reg . 0) (Reg . 1) END END ELSE (Stat . INPUT) (Reg . 13) END END (Stat . OUTPUT) (Reg . 0))"

Generation=34
Avg Fitness=-1.487
Best Fitness=-1
Avg Size=57
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 11) (Expr . EQ) (Expr . OR) (Expr Num . 31) (Expr Num . 49) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 76) END (Stat . IF) (Expr Num . -70) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))"

Generation=35
Avg Fitness=-1.582
Best Fitness=-1
Avg Size=57
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 11) (Expr . EQ) (Expr . OR) (Expr Num . 31) (Expr Num . 49) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 76) END (Stat . IF) (Expr Num . -70) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))"

Generation=36
Avg Fitness=-1.612
Best Fitness=-1
Avg Size=59
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 11) (Expr . EQ) (Expr . OR) (Expr Num . 31) (Expr Num . 49) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 76) END (Stat . IF) (Expr Num . -70) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))"

Generation=37
Avg Fitness=-1.52
Best Fitness=-1
Avg Size=61
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -28) (Stat . LOAD) (Reg . 11) (Expr . EQ) (Expr . OR) (Expr Num . 31) (Expr Num . 49) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 76) END (Stat . IF) (Expr Num . -70) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))"

Generation=38
Avg Fitness=-1.635
Best Fitness=-1
Avg Size=61
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Expr Num . -70) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 10) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 3) ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -29) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr . ADD) (Expr Num . 43) (Reg . 2) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 1) (Expr Num . 84) END END END ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -35) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=39
Avg Fitness=-1.498
Best Fitness=-1
Avg Size=64
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr . MUL) (Reg . 12) (Expr Num . 40) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Expr Num . 60) END END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 12) (Expr . ADD) (Expr Num . -55) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . -98) (Reg . 2) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 84) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 47) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=40
Avg Fitness=-1.642
Best Fitness=-1
Avg Size=64
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr . MUL) (Reg . 12) (Expr Num . 40) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Expr Num . 60) END END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 12) (Expr . ADD) (Expr Num . -55) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . -98) (Reg . 2) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 84) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 47) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=41
Avg Fitness=-1.588
Best Fitness=-1
Avg Size=66
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr . MUL) (Reg . 12) (Expr Num . 40) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Expr Num . 60) END END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 12) (Expr . ADD) (Expr Num . -55) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . -98) (Reg . 2) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 84) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 47) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=42
Avg Fitness=-1.572
Best Fitness=-1
Avg Size=65
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr . MUL) (Reg . 12) (Expr Num . 40) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Expr Num . 60) END END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 12) (Expr . ADD) (Expr Num . -55) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . -98) (Reg . 2) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 84) END ELSE (Stat . INPUT) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 47) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=43
Avg Fitness=-1.462
Best Fitness=-1
Avg Size=67
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 2) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 12) (Reg . 6) (Expr Num . 67) (Expr Num . -91) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 5) (Expr Num . -70) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . 93) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=44
Avg Fitness=-1.613
Best Fitness=-1
Avg Size=66
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 2) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 12) (Reg . 6) (Expr Num . 67) (Expr Num . -91) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 5) (Expr Num . -70) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . 93) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=45
Avg Fitness=-1.485
Best Fitness=-1
Avg Size=67
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 2) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 12) (Reg . 6) (Expr Num . 67) (Expr Num . -91) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 5) (Expr Num . -70) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . 93) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=46
Avg Fitness=-1.61
Best Fitness=-1
Avg Size=68
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 2) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 12) (Reg . 6) (Expr Num . 67) (Expr Num . -91) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 5) (Expr Num . -70) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . 93) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . INPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=47
Avg Fitness=-1.45
Best Fitness=-1
Avg Size=70
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr Num . 92) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr . MUL) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -62) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 8) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 12) (Reg . 6) (Expr Num . 67) (Expr Num . -91) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 21) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -77) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . -47) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=48
Avg Fitness=-1.536
Best Fitness=-1
Avg Size=70
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr Num . 92) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr . MUL) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -62) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 8) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 12) (Reg . 6) (Expr Num . 67) (Expr Num . -91) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 21) (Stat . OUTPUT) (Expr . SUB) (Expr Num . -77) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . -47) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=49
Avg Fitness=-1.591
Best Fitness=-1
Avg Size=72
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 10) (Expr Num . 43) ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 6) (Expr Num . 85) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 84) (Stat . INPUT) (Reg . 12) ELSE (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 60) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 0) END END ELSE (Stat . INPUT) (Reg . 5) END END ELSE (Stat . IF) (Reg . 12) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 60) END END END END (Stat . LOAD) (Reg . 12) (Reg . 5) (Stat . OUTPUT) (Reg . 0))"

Generation=50
Avg Fitness=-1.573
Best Fitness=-1
Avg Size=73
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 14) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 12) (Reg . 4) END (Stat . IF) (Expr Num . 43) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 4) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -45) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 1) (Reg . 13) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 85) END ELSE (Stat . OUTPUT) (Expr Num . 71) END ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=51
Avg Fitness=-1.352
Best Fitness=-1
Avg Size=75
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 14) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 12) (Reg . 4) END (Stat . IF) (Expr Num . 43) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 4) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -45) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 1) (Reg . 13) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 85) END ELSE (Stat . OUTPUT) (Expr Num . 71) END ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=52
Avg Fitness=-1.461
Best Fitness=-1
Avg Size=76
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 14) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 12) (Reg . 4) END (Stat . IF) (Expr Num . 43) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 4) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -45) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 1) (Reg . 13) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 85) END ELSE (Stat . OUTPUT) (Expr Num . 71) END ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=53
Avg Fitness=-1.647
Best Fitness=-1
Avg Size=77
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 14) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 12) (Reg . 4) END (Stat . IF) (Expr Num . 43) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 4) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -45) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 1) (Reg . 13) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 85) END ELSE (Stat . OUTPUT) (Expr Num . 71) END ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=54
Avg Fitness=-1.526
Best Fitness=-1
Avg Size=81
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 14) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 12) (Reg . 4) END (Stat . IF) (Expr Num . 43) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 4) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -45) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 1) (Reg . 13) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 85) END ELSE (Stat . OUTPUT) (Expr Num . 71) END ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=55
Avg Fitness=-1.517
Best Fitness=-1
Avg Size=86
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . LT) (Reg . 10) (Reg . 14) (Stat . LOAD) (Reg . 10) (Reg . 10) ELSE (Stat . LOAD) (Reg . 12) (Reg . 4) END (Stat . IF) (Expr Num . 43) (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 4) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -45) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 1) (Reg . 13) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . 85) END ELSE (Stat . OUTPUT) (Expr Num . 71) END ELSE (Stat . INPUT) (Reg . 11) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=56
Avg Fitness=-1.356
Best Fitness=-1
Avg Size=88
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . -29) (Stat . IF) (Expr Num . 87) (Stat . LOAD) (Reg . 8) (Reg . 11) ELSE (Stat . IF) (Expr Num . -62) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 13) (Expr Num . -35) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 47) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -54) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 9) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -54) END END (Stat . OUTPUT) (Reg . 0))"

Generation=57
Avg Fitness=-1.369
Best Fitness=-1
Avg Size=88
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . -29) (Stat . IF) (Expr Num . 87) (Stat . LOAD) (Reg . 8) (Reg . 11) ELSE (Stat . IF) (Expr Num . -62) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 13) (Expr Num . -35) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 47) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -54) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 1) END END END ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 9) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -54) END END (Stat . OUTPUT) (Reg . 0))"

Generation=58
Avg Fitness=-1.433
Best Fitness=-1
Avg Size=88
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 4) (Expr Num . 43) ELSE (Stat . IF) (Expr Num . -62) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . -46) (Stat . LOAD) (Reg . 5) (Expr . NOT) (Expr Num . 8) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . LT) (Reg . 8) (Reg . 5) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -62) END ELSE (Stat . LOAD) (Reg . 13) (Reg . 9) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . -47) (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr Num . -79) ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr Num . 0) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 4) (Reg . 9) END ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 6) (Stat . INPUT) (Reg . 3) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . IF) (Expr Num . -96) (Stat . INPUT) (Reg . 8) ELSE (Stat . INPUT) (Reg . 2) END END END END END ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 60) END END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -35) END ELSE (Stat . IF) (Expr . NOT) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 4) (Expr Num . -69) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 9) END END END (Stat . LOAD) (Reg . 12) (Reg . 13) (Stat . OUTPUT) (Reg . 0))"

Generation=59
Avg Fitness=-1.366
Best Fitness=-1
Avg Size=94
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 6) (Expr Num . -91) (Reg . 14) END END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 2) (Stat . IF) (Expr Num . 85) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr . DIV) (Expr Num . 98) (Expr Num . -17) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . LOAD) (Reg . 12) (Reg . 9) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -99) (Stat . LOAD) (Reg . 9) (Expr . SUB) (Expr Num . -78) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 81) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr . MUL) (Reg . 2) (Expr Num . 87) (Stat . IF) (Expr Num . 21) (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . 65) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -33) END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 98) (Expr Num . -17) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . 92) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Expr . EQ) (Reg . 2) (Expr Num . -67) END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 84) END END END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 42) END END ELSE (Stat . IF) (Expr Num . -99) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -70) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . EQ) (Expr Num . -9) (Expr Num . -9) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr Num . 6) (Expr Num . -36) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=60
Avg Fitness=-1.445
Best Fitness=-1
Avg Size=96
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 6) (Expr Num . -91) (Reg . 14) END END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 2) (Stat . IF) (Expr Num . 85) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr . DIV) (Expr Num . 98) (Expr Num . -17) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . LOAD) (Reg . 12) (Reg . 9) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -99) (Stat . LOAD) (Reg . 9) (Expr . SUB) (Expr Num . -78) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 81) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr . MUL) (Reg . 2) (Expr Num . 87) (Stat . IF) (Expr Num . 21) (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . 65) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -33) END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 98) (Expr Num . -17) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . 92) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Expr . EQ) (Reg . 2) (Expr Num . -67) END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 84) END END END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 42) END END ELSE (Stat . IF) (Expr Num . -99) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -70) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . EQ) (Expr Num . -9) (Expr Num . -9) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr Num . 6) (Expr Num . -36) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=61
Avg Fitness=-1.328
Best Fitness=-1
Avg Size=95
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 6) (Expr Num . -91) (Reg . 14) END END ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 2) (Stat . IF) (Expr Num . 85) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr . DIV) (Expr Num . 98) (Expr Num . -17) (Stat . LOAD) (Reg . 4) (Reg . 2) ELSE (Stat . LOAD) (Reg . 12) (Reg . 9) END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . -99) (Stat . LOAD) (Reg . 9) (Expr . SUB) (Expr Num . -78) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 81) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr Num . -37) (Stat . IF) (Expr . MUL) (Reg . 2) (Expr Num . 87) (Stat . IF) (Expr Num . 21) (Stat . IF) (Expr . OR) (Reg . 11) (Expr Num . 65) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 0) (Reg . 2) ELSE (Stat . OUTPUT) (Expr Num . -33) END ELSE (Stat . IF) (Expr . DIV) (Expr Num . 98) (Expr Num . -17) (Stat . OUTPUT) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . 92) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Expr . EQ) (Reg . 2) (Expr Num . -67) END ELSE (Stat . INPUT) (Reg . 4) END END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 3) (Expr Num . 84) END END END ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 42) END END ELSE (Stat . IF) (Expr Num . -99) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 3) (Stat . IF) (Expr Num . 95) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . -70) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 5) (Expr . EQ) (Expr Num . -9) (Expr Num . -9) END END END ELSE (Stat . LOAD) (Reg . 13) (Expr . DIV) (Expr Num . 6) (Expr Num . -36) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=62
Avg Fitness=-1.398
Best Fitness=-1
Avg Size=96
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . EQ) (Expr . GT) (Expr Num . -98) (Reg . 0) (Expr . LT) (Reg . 5) (Expr Num . 99) (Stat . LOAD) (Reg . 1) (Expr Num . -86) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 8) (Expr Num . -29) ELSE (Stat . IF) (Reg . 8) (Stat . INPUT) (Reg . 9) ELSE (Stat . LOAD) (Reg . 2) (Expr . NOT) (Expr Num . 46) END END END (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . 69) (Stat . LOAD) (Reg . 5) (Reg . 5) ELSE (Stat . LOAD) (Reg . 9) (Expr . DIV) (Expr Num . -95) (Expr . SUB) (Reg . 13) (Expr Num . -58) END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 3) (Expr . MUL) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . -86) (Stat . OUTPUT) (Expr Num . 50) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . 0) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 8) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 12) (Reg . 6) (Expr Num . 67) (Expr Num . -91) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . -56) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 21) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 14) (Reg . 6) ELSE (Stat . OUTPUT) (Expr Num . -47) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=63
Avg Fitness=-1.443
Best Fitness=-1
Avg Size=93
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . OR) (Expr Num . 59) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . 93) ELSE (Stat . IF) (Expr . MUL) (Expr Num . -30) (Reg . 12) (Stat . LOAD) (Reg . 6) (Expr . LT) (Expr Num . 91) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . LOAD) (Reg . 5) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . 60) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr Num . -79) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -9) END END (Stat . OUTPUT) (Reg . 0))"

Generation=64
Avg Fitness=-1.408
Best Fitness=-1
Avg Size=97
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr . OR) (Expr Num . 59) (Reg . 10) (Stat . LOAD) (Reg . 13) (Expr Num . 93) ELSE (Stat . IF) (Expr . MUL) (Expr Num . -30) (Reg . 12) (Stat . LOAD) (Reg . 6) (Expr . LT) (Expr Num . 91) (Reg . 2) ELSE (Stat . IF) (Expr Num . 35) (Stat . LOAD) (Reg . 5) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END (Stat . IF) (Expr Num . 60) (Stat . LOAD) (Reg . 14) (Reg . 5) ELSE (Stat . IF) (Reg . 5) (Stat . LOAD) (Reg . 6) (Expr Num . -79) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -9) END END (Stat . OUTPUT) (Reg . 0))"

Generation=65
Avg Fitness=-1.593
Best Fitness=-1
Avg Size=102
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 84) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . EQ) (Expr Num . 86) (Expr Num . -96) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 13) (Expr . GT) (Expr Num . -9) (Reg . 2) ELSE (Stat . IF) (Expr Num . -62) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr Num . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . SUB) (Expr Num . -78) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) END ELSE (Stat . LOAD) (Reg . 13) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 60) (Reg . 14) END END END ELSE (Stat . IF) (Expr Num . -29) (Stat . INPUT) (Reg . 8) ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -28) END END END (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))"

Generation=66
Avg Fitness=-1.348
Best Fitness=-1
Avg Size=109
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 85) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -99) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr Num . -42) (Expr Num . -9) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 95) (Stat . IF) (Expr . DIV) (Expr . AND) (Reg . 4) (Reg . 5) (Expr . ADD) (Reg . 13) (Reg . 2) (Stat . LOAD) (Reg . 3) (Expr Num . -17) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -65) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 97) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 47) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -28) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 47) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -29) END (Stat . OUTPUT) (Reg . 0))"

Generation=67
Avg Fitness=-1.482
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 85) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -99) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr Num . -42) (Expr Num . -9) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 95) (Stat . IF) (Expr . DIV) (Expr . AND) (Reg . 4) (Reg . 5) (Expr . ADD) (Reg . 13) (Reg . 2) (Stat . LOAD) (Reg . 3) (Expr Num . -17) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -65) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 97) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 47) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -28) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 47) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -29) END (Stat . OUTPUT) (Reg . 0))"

Generation=68
Avg Fitness=-1.33
Best Fitness=-1
Avg Size=109
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . 85) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . -99) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Reg . 4) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr . OR) (Expr Num . -42) (Expr Num . -9) END END ELSE (Stat . IF) (Reg . 6) (Stat . IF) (Expr Num . 95) (Stat . IF) (Expr . DIV) (Expr . AND) (Reg . 4) (Reg . 5) (Expr . ADD) (Reg . 13) (Reg . 2) (Stat . LOAD) (Reg . 3) (Expr Num . -17) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . -65) (Stat . OUTPUT) (Expr Num . 77) ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Reg . 10) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . OUTPUT) (Expr Num . 97) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 0) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 47) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 65) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -28) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 14) END END ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . 47) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . -29) END (Stat . OUTPUT) (Reg . 0))"

Generation=69
Avg Fitness=-1.446
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 14) (Stat . IF) (Expr Num . -9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 6) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 14) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 4) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 9) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . 49) END END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . -74) (Reg . 14) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 8) (Reg . 3) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 3) ELSE (Stat . LOAD) (Reg . 12) (Expr Num . -99) END ELSE (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 65) END END END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . -28) END END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 87) END END ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 42) END (Stat . OUTPUT) (Reg . 0))"

Generation=70
Avg Fitness=-1.365
Best Fitness=-1
Avg Size=109
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 84) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . EQ) (Expr Num . 86) (Expr Num . -96) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 8) (Expr . GT) (Expr Num . -9) (Reg . 2) ELSE (Stat . IF) (Expr Num . -62) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 7) (Expr Num . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . SUB) (Expr Num . -78) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) END ELSE (Stat . LOAD) (Reg . 13) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 60) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -28) END END (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Reg . 0) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))"

Generation=71
Avg Fitness=-1.468
Best Fitness=-1
Avg Size=107
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . IF) (Expr Num . -29) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Expr Num . -69) ELSE (Stat . IF) (Expr . LT) (Expr Num . 91) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 4) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 9) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 4) (Expr Num . 82) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 65) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -35) END ELSE (Stat . LOAD) (Reg . 2) (Reg . 2) END END END END ELSE (Stat . LOAD) (Reg . 8) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 10) END (Stat . OUTPUT) (Reg . 0))"

Generation=72
Avg Fitness=-1.413
Best Fitness=-1
Avg Size=114
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 12) (Stat . LOAD) (Reg . 5) (Expr Num . -74) (Stat . OUTPUT) (Reg . 0))"

Generation=73
Avg Fitness=-1.409
Best Fitness=-1
Avg Size=122
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . IF) (Expr Num . -29) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 11) (Reg . 0) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Expr Num . -69) ELSE (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END ELSE (Stat . IF) (Expr Num . 42) (Stat . LOAD) (Reg . 8) (Expr Num . 86) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . LOAD) (Reg . 2) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -58) (Stat . LOAD) (Reg . 9) (Reg . 0) ELSE (Stat . IF) (Expr Num . 87) (Stat . INPUT) (Reg . 10) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -9) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=74
Avg Fitness=-1.506
Best Fitness=-1
Avg Size=125
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 84) (Stat . IF) (Reg . 7) (Stat . OUTPUT) (Expr . EQ) (Expr Num . 86) (Expr Num . -96) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 13) (Expr . GT) (Expr Num . -9) (Reg . 2) ELSE (Stat . IF) (Expr Num . -62) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 3) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 2) (Expr Num . 9) ELSE (Stat . LOAD) (Reg . 9) (Expr . SUB) (Expr Num . -78) (Expr . DIV) (Expr Num . 47) (Expr Num . -17) END ELSE (Stat . LOAD) (Reg . 11) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 60) (Reg . 14) END END END ELSE (Stat . LOAD) (Reg . 5) (Expr Num . -28) END END (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 2) (Reg . 0) ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))"

Generation=75
Avg Fitness=-1.391
Best Fitness=-1
Avg Size=131
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 5) (Reg . 5) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 2) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 4) ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr . LT) (Reg . 11) (Reg . 5) (Expr Num . 67) (Expr Num . 88) (Reg . 0) END END END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 2) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Expr Num . 85) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . MUL) (Reg . 14) (Reg . 1) (Stat . IF) (Expr Num . -7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . 42) (Stat . LOAD) (Reg . 9) (Expr . DIV) (Expr . DIV) (Expr . SUB) (Reg . 3) (Reg . 3) (Expr Num . -37) (Expr Num . -76) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Expr Num . 60) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . AND) (Expr Num . -85) (Reg . 12) END ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Expr Num . 53) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=76
Avg Fitness=-1.436
Best Fitness=-1
Avg Size=130
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -74) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 1) (Expr Num . -4) ELSE (Stat . IF) (Expr . EQ) (Expr Num . -98) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 11) (Expr Num . -98) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Expr Num . -83) ELSE (Stat . IF) (Expr . LT) (Expr Num . 91) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 0) (Reg . 13) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -28) END END ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . ADD) (Expr Num . -12) (Expr Num . -2) END END END ELSE (Stat . INPUT) (Reg . 2) END (Stat . OUTPUT) (Reg . 0))"

Generation=77
Avg Fitness=-1.364
Best Fitness=-1
Avg Size=133
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 11) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Expr . MUL) (Reg . 14) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Reg . 4) END END ELSE (Stat . LOAD) (Reg . 7) (Reg . 5) END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 12) (Expr Num . 55) ELSE (Stat . IF) (Expr Num . 36) (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 98) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 9) (Expr Num . 90) ELSE (Stat . LOAD) (Reg . 11) (Expr . DIV) (Expr Num . 23) (Reg . 2) END ELSE (Stat . OUTPUT) (Reg . 14) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 36) END ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 11) (Reg . 11) ELSE (Stat . IF) (Expr . NOT) (Reg . 3) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 7) (Expr Num . -69) ELSE (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . INPUT) (Reg . 3) END ELSE (Stat . IF) (Expr Num . 42) (Stat . LOAD) (Reg . 8) (Expr Num . 86) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 4) END END END END END ELSE (Stat . IF) (Expr Num . -64) (Stat . IF) (Expr Num . -61) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 4) END ELSE (Stat . OUTPUT) (Reg . 2) END END END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=78
Avg Fitness=-1.458
Best Fitness=-1
Avg Size=130
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 4) (Stat . IF) (Expr Num . -29) (Stat . IF) (Expr Num . 66) (Stat . LOAD) (Reg . 11) (Reg . 0) ELSE (Stat . IF) (Expr Num . 22) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Expr Num . -69) ELSE (Stat . IF) (Expr . LT) (Expr Num . 91) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 9) (Stat . IF) (Reg . 9) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . 76) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . -66) (Stat . IF) (Expr Num . 15) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 8) (Expr . ADD) (Expr . LT) (Expr . AND) (Reg . 13) (Expr Num . 48) (Reg . 10) (Reg . 0) ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Expr . MUL) (Reg . 12) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Expr Num . -46) END END ELSE (Stat . OUTPUT) (Expr Num . -99) END END END ELSE (Stat . OUTPUT) (Expr Num . -14) END END END END ELSE (Stat . IF) (Expr Num . 42) (Stat . LOAD) (Reg . 8) (Expr . DIV) (Reg . 6) (Expr . ADD) (Expr Num . -55) (Reg . 14) ELSE (Stat . INPUT) (Reg . 2) END END END ELSE (Stat . INPUT) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 5) (Reg . 0) ELSE (Stat . IF) (Expr Num . -66) (Stat . INPUT) (Reg . 4) ELSE (Stat . IF) (Reg . 3) (Stat . OUTPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 12) (Stat . LOAD) (Reg . 4) (Expr Num . 82) ELSE (Stat . IF) (Expr Num . 9) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . LT) (Reg . 3) (Expr Num . -5) (Stat . IF) (Expr Num . 90) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 13) (Stat . LOAD) (Reg . 5) (Expr Num . -41) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . OUTPUT) (Expr Num . 50) END ELSE (Stat . OUTPUT) (Expr . OR) (Reg . 8) (Reg . 3) END END END END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=79
Avg Fitness=-1.357
Best Fitness=-1
Avg Size=137
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 5) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . -45) (Stat . LOAD) (Reg . 6) (Expr Num . 49) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . -28) END (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 43) ELSE (Stat . IF) (Expr Num . 49) (Stat . LOAD) (Reg . 10) (Expr Num . 67) ELSE (Stat . LOAD) (Reg . 4) (Expr . ADD) (Expr Num . -14) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 11) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 11) (Stat . LOAD) (Reg . 8) (Expr Num . -25) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 13) (Expr . LT) (Expr Num . 77) (Expr Num . -99) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -35) END END (Stat . OUTPUT) (Reg . 0))"

Generation=80
Avg Fitness=-1.405
Best Fitness=-1
Avg Size=147
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 5) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . -45) (Stat . LOAD) (Reg . 6) (Expr Num . 49) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr Num . -28) END (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -49) (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 8) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 43) ELSE (Stat . IF) (Expr Num . 49) (Stat . LOAD) (Reg . 10) (Expr Num . 67) ELSE (Stat . LOAD) (Reg . 4) (Expr . ADD) (Expr Num . -14) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 11) (Reg . 0) END END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 2) (Stat . OUTPUT) (Expr Num . 1) ELSE (Stat . IF) (Expr . GT) (Reg . 8) (Reg . 11) (Stat . LOAD) (Reg . 8) (Expr Num . -25) ELSE (Stat . INPUT) (Reg . 10) END END ELSE (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 13) (Expr . LT) (Expr Num . 77) (Expr Num . -99) ELSE (Stat . LOAD) (Reg . 9) (Expr Num . -35) END END (Stat . OUTPUT) (Reg . 0))"

Generation=81
Avg Fitness=-1.378
Best Fitness=-1
Avg Size=140
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . LOAD) (Reg . 8) (Reg . 11) (Stat . IF) (Expr Num . -91) (Stat . INPUT) (Reg . 7) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 12) (Reg . 2) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 6) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . 44) (Stat . LOAD) (Reg . 10) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . IF) (Expr . OR) (Expr Num . 59) (Reg . 10) (Stat . INPUT) (Reg . 2) (Stat . OUTPUT) (Reg . 12) ELSE (Stat . IF) (Expr . MUL) (Expr Num . -30) (Reg . 12) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . INPUT) (Reg . 10) END END END END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 3) (Expr Num . 87) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 7) END END ELSE (Stat . OUTPUT) (Expr . LT) (Expr . AND) (Reg . 1) (Reg . 13) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 47) END END ELSE (Stat . LOAD) (Reg . 2) (Expr . AND) (Expr Num . 83) (Reg . 0) END END (Stat . OUTPUT) (Reg . 0))"

Generation=82
Avg Fitness=-1.293
Best Fitness=-1
Avg Size=145
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 6) (Reg . 0) ELSE (Stat . IF) (Expr Num . -35) (Stat . LOAD) (Reg . 11) (Reg . 14) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 2) (Reg . 8) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 4) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr . ADD) (Expr Num . -98) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 11) (Expr Num . 83) ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Expr . MUL) (Reg . 12) (Reg . 0) (Stat . LOAD) (Reg . 14) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . IF) (Expr Num . 23) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 43) END END END END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 48) (Expr Num . -91) (Reg . 0) END END END (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -46) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr Num . 92) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 14) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 3) (Expr . MUL) (Reg . 7) (Reg . 7) ELSE (Stat . IF) (Expr . LT) (Expr Num . 0) (Expr Num . 6) (Stat . IF) (Expr Num . -74) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . IF) (Reg . 6) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 6) (Expr Num . 87) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 12) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 8) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 6) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 6) (Expr Num . -91) (Reg . 0) END END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 3) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -66) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . EQ) (Expr Num . -89) (Expr Num . 67) (Expr Num . -89) (Reg . 14) END END ELSE (Stat . OUTPUT) (Expr . LT) (Expr . AND) (Reg . 1) (Reg . 13) (Reg . 2) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 47) END END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -44) (Stat . LOAD) (Reg . 0) (Expr . SUB) (Expr Num . -78) (Expr Num . 36) ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 4) END END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr Num . 87) (Expr Num . 67) (Expr Num . -91) (Reg . 11) END END END ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 12) (Expr . SUB) (Reg . 2) (Reg . 5) ELSE (Stat . IF) (Expr Num . 65) (Stat . INPUT) (Reg . 0) ELSE (Stat . IF) (Reg . 7) (Stat . IF) (Expr Num . 22) (Stat . IF) (Expr Num . -24) (Stat . OUTPUT) (Reg . 13) ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 14) (Expr . LT) (Expr . AND) (Expr Num . -35) (Reg . 9) (Expr Num . 79) END ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . INPUT) (Reg . 11) END END END END ELSE (Stat . INPUT) (Reg . 12) END ELSE (Stat . IF) (Expr Num . 21) (Stat . OUTPUT) (Expr . SUB) (Expr . NOT) (Reg . 14) (Reg . 6) ELSE (Stat . LOAD) (Reg . 9) (Reg . 3) END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=83
Avg Fitness=-1.361
Best Fitness=-1
Avg Size=146
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 13) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Reg . 5) ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 14) (Expr . GT) (Expr Num . -49) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Expr Num . -4) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -46) END ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 8) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . AND) (Expr . SUB) (Reg . 9) (Expr . EQ) (Expr . ADD) (Expr Num . -43) (Expr . LT) (Reg . 11) (Reg . 3) (Expr Num . -36) (Expr Num . 47) (Stat . LOAD) (Reg . 11) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 30) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=84
Avg Fitness=-1.425
Best Fitness=-1
Avg Size=147
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 13) (Reg . 9) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Reg . 5) ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 14) (Expr . GT) (Expr Num . -49) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Expr Num . -4) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -48) END ELSE (Stat . OUTPUT) (Expr Num . -46) END ELSE (Stat . OUTPUT) (Expr . DIV) (Reg . 8) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . OUTPUT) (Reg . 3) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . AND) (Expr . SUB) (Reg . 9) (Expr . EQ) (Expr . ADD) (Expr Num . -43) (Expr . LT) (Reg . 11) (Reg . 3) (Expr Num . -36) (Expr Num . 47) (Stat . LOAD) (Reg . 11) (Reg . 14) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 47) END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 30) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=85
Avg Fitness=-1.278
Best Fitness=-1
Avg Size=145
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 12) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 4) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 1) END END ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Expr Num . -4) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 42) END ELSE (Stat . OUTPUT) (Expr . EQ) (Reg . 8) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Expr Num . 85) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . AND) (Expr . OR) (Reg . 9) (Expr . EQ) (Expr . ADD) (Reg . 6) (Expr . LT) (Reg . 11) (Reg . 3) (Expr Num . -78) (Expr Num . 47) (Stat . LOAD) (Reg . 11) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=86
Avg Fitness=-1.406
Best Fitness=-1
Avg Size=146
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 12) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 4) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 1) END END ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Expr Num . -4) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 42) END ELSE (Stat . OUTPUT) (Expr . EQ) (Reg . 8) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Expr Num . 85) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . AND) (Expr . OR) (Reg . 9) (Expr . EQ) (Expr . ADD) (Reg . 6) (Expr . LT) (Reg . 11) (Reg . 3) (Expr Num . -78) (Expr Num . 47) (Stat . LOAD) (Reg . 11) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=87
Avg Fitness=-1.307
Best Fitness=-1
Avg Size=149
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 12) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 4) ELSE (Stat . IF) (Reg . 8) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 1) END END ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Expr Num . -4) (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr Num . 42) END ELSE (Stat . OUTPUT) (Expr . EQ) (Reg . 8) (Reg . 14) END END END ELSE (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 6) (Expr Num . 85) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . AND) (Expr . OR) (Reg . 9) (Expr . EQ) (Expr . ADD) (Reg . 6) (Expr . LT) (Reg . 11) (Reg . 3) (Expr Num . -78) (Expr Num . 47) (Stat . LOAD) (Reg . 11) (Reg . 13) ELSE (Stat . OUTPUT) (Expr Num . -58) END ELSE (Stat . OUTPUT) (Reg . 5) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=88
Avg Fitness=-1.473
Best Fitness=-1
Avg Size=154
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 7) (Expr Num . 84) ELSE (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 8) END END ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . IF) (Expr Num . 62) (Stat . IF) (Expr . AND) (Expr . DIV) (Expr Num . 87) (Expr . OR) (Reg . 11) (Expr Num . 65) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -17) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -74) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Expr Num . 2) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -99) (Stat . OUTPUT) (Expr . DIV) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 22) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 82) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -35) END ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 2) END END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr Num . -64) (Expr Num . 26) ELSE (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 2) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))"

Generation=89
Avg Fitness=-1.327
Best Fitness=-1
Avg Size=154
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 7) (Expr Num . 84) ELSE (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 8) END END ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . IF) (Expr Num . 62) (Stat . IF) (Expr . AND) (Expr . DIV) (Expr Num . 87) (Expr . OR) (Reg . 11) (Expr Num . 65) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -17) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -74) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Expr Num . 2) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -99) (Stat . OUTPUT) (Expr . DIV) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 22) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 82) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -35) END ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 2) END END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr Num . -64) (Expr Num . 26) ELSE (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 2) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))"

Generation=90
Avg Fitness=-1.316
Best Fitness=-1
Avg Size=160
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 7) (Expr Num . 84) ELSE (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 8) END END ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . IF) (Expr Num . 62) (Stat . IF) (Expr . AND) (Expr . DIV) (Expr Num . 87) (Expr . OR) (Reg . 11) (Expr Num . 65) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -17) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -74) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Expr Num . 2) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -99) (Stat . OUTPUT) (Expr . DIV) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 22) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 82) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -35) END ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 2) END END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr Num . -64) (Expr Num . 26) ELSE (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 2) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))"

Generation=91
Avg Fitness=-1.396
Best Fitness=-1
Avg Size=161
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 13) (Stat . IF) (Expr Num . 82) (Stat . IF) (Expr Num . 50) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . -61) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 7) (Expr Num . 84) ELSE (Stat . LOAD) (Reg . 0) (Reg . 5) END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 8) END END ELSE (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 14) (Stat . IF) (Expr Num . 62) (Stat . IF) (Expr . AND) (Expr . DIV) (Expr Num . 87) (Expr . OR) (Reg . 11) (Expr Num . 65) (Reg . 0) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Reg . 14) (Stat . IF) (Expr Num . -17) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -74) (Stat . LOAD) (Reg . 7) (Reg . 2) ELSE (Stat . IF) (Expr . DIV) (Reg . 9) (Expr Num . 2) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -99) (Stat . OUTPUT) (Expr . DIV) (Reg . 3) (Reg . 0) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 14) ELSE (Stat . OUTPUT) (Expr . MUL) (Expr Num . 22) (Reg . 12) END END ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . -95) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 82) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . OUTPUT) (Expr . NOT) (Expr Num . -35) END ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . INPUT) (Reg . 0) END END END END END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 8) END END END ELSE (Stat . LOAD) (Reg . 9) (Reg . 2) END END ELSE (Stat . IF) (Reg . 12) (Stat . OUTPUT) (Expr . LT) (Expr Num . -64) (Expr Num . 26) ELSE (Stat . OUTPUT) (Reg . 2) END END ELSE (Stat . LOAD) (Reg . 2) (Reg . 8) END END (Stat . OUTPUT) (Reg . 0))"

Generation=92
Avg Fitness=-1.303
Best Fitness=-1
Avg Size=166
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 6) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 5) (Reg . 5) ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Reg . 0) ELSE (Stat . IF) (Expr Num . 4) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Expr Num . 21) (Stat . INPUT) (Reg . 1) ELSE (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 5) (Expr Num . 17) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 12) (Expr Num . 18) ELSE (Stat . IF) (Expr Num . 9) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 4) (Expr Num . 76) ELSE (Stat . IF) (Expr . LT) (Expr Num . -34) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 6) (Reg . 0) END ELSE (Stat . IF) (Expr Num . 65) (Stat . LOAD) (Reg . 1) (Reg . 13) ELSE (Stat . IF) (Expr Num . -48) (Stat . IF) (Expr Num . 81) (Stat . IF) (Expr . DIV) (Expr Num . 52) (Expr Num . 2) (Stat . LOAD) (Reg . 13) (Expr Num . 82) ELSE (Stat . OUTPUT) (Expr Num . 93) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 11) (Reg . 2) ELSE (Stat . LOAD) (Reg . 14) (Reg . 12) END END END END END ELSE (Stat . IF) (Expr Num . 85) (Stat . IF) (Reg . 1) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . -46) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr . LT) (Reg . 14) (Reg . 5) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 2) (Reg . 9) END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 13) ELSE (Stat . LOAD) (Reg . 2) (Expr Num . 60) END END END ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -35) END ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . 61) (Stat . LOAD) (Reg . 2) (Reg . 10) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 11) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 94) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 9) (Reg . 10) END END END END END END END END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 2) (Reg . 0) END END ELSE (Stat . IF) (Reg . 10) (Stat . INPUT) (Reg . 5) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . MUL) (Reg . 14) (Reg . 1) (Stat . IF) (Expr Num . -7) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 0) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . -35) (Stat . LOAD) (Reg . 11) (Reg . 14) (Stat . LOAD) (Reg . 4) (Expr . DIV) (Reg . 2) (Reg . 8) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 0) (Expr Num . -4) ELSE (Stat . IF) (Expr . ADD) (Expr Num . -98) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 4) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -49) (Stat . LOAD) (Reg . 2) (Expr Num . -70) ELSE (Stat . IF) (Expr . LT) (Expr Num . 77) (Expr Num . -99) (Stat . IF) (Expr . LT) (Reg . 4) (Reg . 2) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Expr Num . 87) ELSE (Stat . OUTPUT) (Expr Num . -28) END ELSE (Stat . OUTPUT) (Expr Num . -21) END END END ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 13) (Expr Num . 7) (Stat . OUTPUT) (Reg . 7) ELSE (Stat . OUTPUT) (Expr Num . -66) END ELSE (Stat . OUTPUT) (Expr . GT) (Expr Num . -91) (Expr Num . 15) END END ELSE (Stat . OUTPUT) (Expr Num . -79) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 47) END END ELSE (Stat . OUTPUT) (Expr Num . -77) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 12) (Expr Num . 82) ELSE (Stat . INPUT) (Reg . 10) END END END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 48) (Expr Num . -91) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Expr Num . 60) END END ELSE (Stat . LOAD) (Reg . 14) (Expr . AND) (Expr Num . -85) (Reg . 7) END ELSE (Stat . LOAD) (Reg . 9) (Expr . NOT) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=93
Avg Fitness=-1.4
Best Fitness=-1
Avg Size=168
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -74) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . IF) (Expr . ADD) (Expr Num . -98) (Reg . 2) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . IF) (Expr Num . 4) (Stat . LOAD) (Reg . 3) (Expr . ADD) (Reg . 3) (Reg . 14) ELSE (Stat . OUTPUT) (Expr Num . -83) END END END END ELSE (Stat . IF) (Expr Num . 9) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 4) (Expr Num . -69) ELSE (Stat . IF) (Expr Num . 65) (Stat . IF) (Expr Num . -7) (Stat . IF) (Expr . ADD) (Expr . AND) (Reg . 14) (Reg . 5) (Expr Num . -46) (Stat . INPUT) (Reg . 5) ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . IF) (Reg . 13) (Stat . IF) (Reg . 0) (Stat . OUTPUT) (Expr Num . 56) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . OUTPUT) (Reg . 11) END END ELSE (Stat . LOAD) (Reg . 11) (Expr Num . 65) END END ELSE (Stat . IF) (Expr . SUB) (Expr . DIV) (Expr . MUL) (Expr Num . 87) (Expr Num . 67) (Expr Num . -91) (Reg . 11) (Stat . OUTPUT) (Expr . MUL) (Reg . 2) (Expr Num . -64) ELSE (Stat . LOAD) (Reg . 14) (Expr Num . 4) END END END END ELSE (Stat . INPUT) (Reg . 6) END (Stat . OUTPUT) (Reg . 0))"

Generation=94
Avg Fitness=-1.323
Best Fitness=-1
Avg Size=163
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 5) (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 11) (Stat . LOAD) (Reg . 0) (Expr Num . -99) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . LOAD) (Reg . 8) (Reg . 12) END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 5) (Expr Num . 52) ELSE (Stat . IF) (Expr Num . -41) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Expr Num . -36) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 7) (Expr Num . -77) ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 2) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . OUTPUT) (Expr Num . -18) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 11) (Expr Num . 82) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 0) END END END ELSE (Stat . OUTPUT) (Expr Num . -14) END END (Stat . OUTPUT) (Reg . 0))"

Generation=95
Avg Fitness=-1.273
Best Fitness=-1
Avg Size=171
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 95) (Stat . LOAD) (Reg . 13) (Reg . 7) ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Expr Num . 9) (Stat . INPUT) (Reg . 12) ELSE (Stat . LOAD) (Reg . 13) (Reg . 9) END ELSE (Stat . OUTPUT) (Expr Num . -16) END END (Stat . IF) (Expr Num . -41) (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 0) (Expr Num . -9) ELSE (Stat . LOAD) (Reg . 13) (Expr Num . 70) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -23) ELSE (Stat . IF) (Expr Num . 9) (Stat . LOAD) (Reg . 2) (Expr Num . -65) ELSE (Stat . IF) (Expr Num . -23) (Stat . LOAD) (Reg . 8) (Reg . 2) ELSE (Stat . IF) (Expr Num . 92) (Stat . IF) (Reg . 0) (Stat . IF) (Reg . 1) (Stat . OUTPUT) (Expr Num . 30) ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Expr . SUB) (Reg . 12) (Reg . 10) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 7) (Expr . GT) (Expr . DIV) (Expr Num . 48) (Reg . 13) (Expr Num . 15) ELSE (Stat . OUTPUT) (Expr Num . -18) END ELSE (Stat . INPUT) (Reg . 14) END ELSE (Stat . INPUT) (Reg . 9) END END ELSE (Stat . LOAD) (Reg . 3) (Expr Num . -54) END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr Num . 42) (Reg . 0) END END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=96
Avg Fitness=-1.34
Best Fitness=-1
Avg Size=165
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 8) (Stat . IF) (Expr Num . 84) (Stat . IF) (Expr Num . -74) (Stat . LOAD) (Reg . 1) (Reg . 2) ELSE (Stat . IF) (Expr . DIV) (Expr Num . -98) (Expr Num . 2) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 10) ELSE (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . 4) (Stat . OUTPUT) (Expr . ADD) (Expr Num . -55) (Reg . 14) ELSE (Stat . IF) (Expr Num . 87) (Stat . IF) (Reg . 6) (Stat . LOAD) (Reg . 14) (Expr Num . 95) ELSE (Stat . IF) (Expr Num . 39) (Stat . OUTPUT) (Expr . SUB) (Reg . 10) (Reg . 5) ELSE (Stat . LOAD) (Reg . 7) (Expr . NOT) (Reg . 9) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr Num . 48) (Expr Num . -91) (Reg . 0) END END END END ELSE (Stat . LOAD) (Reg . 10) (Reg . 8) END END ELSE (Stat . IF) (Reg . 4) (Stat . IF) (Reg . 2) (Stat . IF) (Reg . 13) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . INPUT) (Reg . 6) END ELSE (Stat . IF) (Expr Num . -30) (Stat . IF) (Expr . DIV) (Expr Num . -95) (Expr Num . 70) (Stat . LOAD) (Reg . 2) (Expr Num . 1) ELSE (Stat . IF) (Expr Num . 42) (Stat . LOAD) (Reg . 8) (Expr . DIV) (Expr Num . 52) (Expr . ADD) (Expr Num . -55) (Reg . 14) ELSE (Stat . INPUT) (Reg . 14) END END ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=97
Avg Fitness=-1.328
Best Fitness=-1
Avg Size=171
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . -13) (Stat . LOAD) (Reg . 14) (Expr Num . 57) ELSE (Stat . INPUT) (Reg . 7) END (Stat . IF) (Expr Num . 84) (Stat . IF) (Expr Num . 82) (Stat . LOAD) (Reg . 14) (Reg . 2) ELSE (Stat . IF) (Expr Num . -54) (Stat . LOAD) (Reg . 12) (Reg . 10) (Stat . OUTPUT) (Reg . 9) ELSE (Stat . IF) (Expr . ADD) (Reg . 0) (Expr . GT) (Reg . 9) (Reg . 7) (Stat . LOAD) (Reg . 1) (Expr Num . 97) ELSE (Stat . IF) (Expr Num . -2) (Stat . OUTPUT) (Expr Num . -72) ELSE (Stat . IF) (Reg . 7) (Stat . INPUT) (Reg . 5) ELSE (Stat . OUTPUT) (Expr . AND) (Expr Num . 61) (Expr Num . 57) END END END (Stat . IF) (Expr Num . 62) (Stat . OUTPUT) (Reg . 8) ELSE (Stat . OUTPUT) (Expr Num . 42) END END END ELSE (Stat . LOAD) (Reg . 2) (Reg . 3) END (Stat . OUTPUT) (Reg . 0))"

Generation=98
Avg Fitness=-1.273
Best Fitness=-1
Avg Size=171
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 5) (Expr Num . 87) ELSE (Stat . IF) (Expr Num . -45) (Stat . LOAD) (Reg . 6) (Expr Num . 49) ELSE (Stat . OUTPUT) (Reg . 11) END END ELSE (Stat . LOAD) (Reg . 4) (Expr Num . -69) END (Stat . IF) (Expr Num . 9) (Stat . IF) (Expr Num . -49) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 2) (Stat . IF) (Expr . MUL) (Reg . 13) (Expr Num . 74) (Stat . OUTPUT) (Expr Num . 67) ELSE (Stat . INPUT) (Reg . 11) END ELSE (Stat . IF) (Expr Num . -14) (Stat . IF) (Expr Num . 73) (Stat . IF) (Expr Num . 95) (Stat . IF) (Reg . 10) (Stat . LOAD) (Reg . 4) (Expr Num . -23) ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Expr Num . 73) (Stat . LOAD) (Reg . 14) (Reg . 10) ELSE (Stat . INPUT) (Reg . 1) END ELSE (Stat . OUTPUT) (Expr Num . 91) END END ELSE (Stat . OUTPUT) (Expr Num . 82) END ELSE (Stat . LOAD) (Reg . 0) (Expr Num . 74) END ELSE (Stat . IF) (Reg . 6) (Stat . OUTPUT) (Reg . 0) ELSE (Stat . LOAD) (Reg . 0) (Expr Num . -9) END END END ELSE (Stat . IF) (Expr Num . -9) (Stat . OUTPUT) (Reg . 10) ELSE (Stat . INPUT) (Reg . 12) END END END ELSE (Stat . IF) (Reg . 4) (Stat . LOAD) (Reg . 13) (Expr . LT) (Expr Num . 77) (Expr Num . -99) ELSE (Stat . IF) (Expr Num . -35) (Stat . OUTPUT) (Expr . MUL) (Reg . 2) (Expr Num . -64) ELSE (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -79) (Expr Num . -30) END END END (Stat . OUTPUT) (Reg . 0))"

Generation=99
Avg Fitness=-1.41
Best Fitness=-1
Avg Size=167
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . -79) (Stat . IF) (Expr Num . -23) (Stat . IF) (Expr . MUL) (Reg . 12) (Expr Num . 87) (Stat . LOAD) (Reg . 12) (Reg . 6) ELSE (Stat . LOAD) (Reg . 13) (Reg . 4) END ELSE (Stat . IF) (Expr Num . -83) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 0) (Reg . 5) ELSE (Stat . OUTPUT) (Expr Num . 43) END ELSE (Stat . OUTPUT) (Expr . SUB) (Reg . 13) (Reg . 0) END END ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Expr Num . 85) (Stat . IF) (Expr Num . 23) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . 43) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . IF) (Reg . 3) (Stat . LOAD) (Reg . 5) (Expr Num . 17) ELSE (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 12) (Expr Num . 18) ELSE (Stat . IF) (Expr Num . 9) (Stat . IF) (Reg . 11) (Stat . IF) (Expr Num . 86) (Stat . INPUT) (Reg . 6) ELSE (Stat . LOAD) (Reg . 14) (Reg . 5) END ELSE (Stat . IF) (Expr . LT) (Expr Num . -77) (Reg . 0) (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 13) ELSE (Stat . IF) (Expr Num . -7) (Stat . INPUT) (Reg . 2) ELSE (Stat . LOAD) (Reg . 6) (Reg . 7) END END ELSE (Stat . OUTPUT) (Reg . 7) END END ELSE (Stat . IF) (Expr Num . 85) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 6) ELSE (Stat . IF) (Reg . 5) (Stat . IF) (Reg . 8) (Stat . IF) (Reg . 10) (Stat . IF) (Reg . 10) (Stat . IF) (Expr Num . -53) (Stat . LOAD) (Reg . 2) (Reg . 10) ELSE (Stat . INPUT) (Reg . 13) END ELSE (Stat . INPUT) (Reg . 10) END ELSE (Stat . LOAD) (Reg . 7) (Reg . 1) END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 11) (Reg . 2) END END ELSE (Stat . IF) (Expr Num . 94) (Stat . IF) (Reg . 1) (Stat . INPUT) (Reg . 0) ELSE (Stat . INPUT) (Reg . 0) END ELSE (Stat . OUTPUT) (Expr . EQ) (Expr Num . 9) (Reg . 10) END END END END END END END (Stat . OUTPUT) (Reg . 0))"

Generation=100
Avg Fitness=-1.355
Best Fitness=-1
Avg Size=169
Best Individual: 
"((Stat . INPUT) (Reg . 0) (Stat . INPUT) (Reg . 2) (Stat . IF) (Expr Num . 98) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Reg . 7) (Stat . LOAD) (Reg . 4) (Expr . ADD) (Expr Num . -55) (Reg . 14) ELSE (Stat . IF) (Expr . LT) (Expr Num . -70) (Expr Num . -99) (Stat . IF) (Expr . LT) (Expr Num . 48) (Reg . 1) (Stat . IF) (Reg . 5) (Stat . IF) (Expr Num . 82) (Stat . INPUT) (Reg . 10) ELSE (Stat . IF) (Expr Num . -95) (Stat . IF) (Reg . 14) (Stat . LOAD) (Reg . 10) (Expr Num . 50) ELSE (Stat . IF) (Expr Num . -28) (Stat . IF) (Expr . LT) (Reg . 12) (Reg . 0) (Stat . IF) (Reg . 2) (Stat . LOAD) (Reg . 5) (Expr . GT) (Expr Num . -74) (Expr Num . 65) ELSE (Stat . INPUT) (Reg . 9) END ELSE (Stat . IF) (Reg . 9) (Stat . LOAD) (Reg . 0) (Expr Num . 82) ELSE (Stat . INPUT) (Reg . 3) END END ELSE (Stat . LOAD) (Reg . 1) (Reg . 12) END END ELSE (Stat . IF) (Reg . 5) (Stat . INPUT) (Reg . 11) ELSE (Stat . LOAD) (Reg . 7) (Expr Num . -23) END END END ELSE (Stat . IF) (Expr Num . -97) (Stat . IF) (Reg . 1) (Stat . LOAD) (Reg . 2) (Expr Num . 87) ELSE (Stat . IF) (Reg . 2) (Stat . INPUT) (Reg . 0) ELSE (Stat . OUTPUT) (Expr Num . -28) END END ELSE (Stat . OUTPUT) (Expr . SUB) (Expr . DIV) (Expr . ADD) (Expr Num . -64) (Expr Num . 67) (Expr Num . -91) (Reg . 7) END END ELSE (Stat . INPUT) (Reg . 5) END ELSE (Stat . LOAD) (Reg . 10) (Expr Num . 47) END END END (Stat . OUTPUT) (Reg . 0))"

PROBLEM UNSOLVED
